<<<<<<< HEAD
=======
<<<<<<< HEAD
import axios from 'axios';

// Axios instance used for API calls
export const api = axios.create({ baseURL: '/api' });

  try {
    const res = await axios.post('/api/auth/register', { name, email, password });
    return { res, data: res.data };
  } catch (err) {
    logErrorToProduction('Register error:', { data: err });
    throw err;
  }
  return config;
});

export async function forgotPassword(email: string) {
  const API_URL = process.env.NEXT_PUBLIC_API_URL || '';
  try {
    const res = await axios.post(`${API_URL}/auth/forgot`, { email });
    return { res, data: res.data };
  } catch (err) {
    logErrorToProduction('Forgot password error:', { data: err });
    throw err;
  }
}

export async function resetPassword(token: string, newPassword: string) {
  const API_URL = process.env.NEXT_PUBLIC_API_URL || '';
  try {
    const res = await axios.post(`${API_URL}/auth/reset-password`, { token, newPassword });
    return { res, data: res.data };
  } catch (err) {
    logErrorToProduction('Reset password error:', { data: err });
    throw err;
  }
  return response;
=======
>>>>>>> origin/cursor/website-audit-and-enhancement-63e3
import { apiClient } from '@/utils/apiClient';

export async function register(name: string, email: string, password: string) {
  const res = await apiClient('/api/auth/register', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ name, email, password }),
  });
  const data = await res.json().catch(() => ({}));
  return { res, data };
<<<<<<< HEAD
=======
>>>>>>> origin/8arrdw-codex/centralize-fetch-error-handling
>>>>>>> origin/cursor/website-audit-and-enhancement-63e3
}
