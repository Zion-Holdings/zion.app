<<<<<<< HEAD
=======
<<<<<<< HEAD
export function captureException(error: unknown, context?: unknown): void {
  if (typeof window === 'undefined') {
    import('@sentry/nextjs').then(Sentry => {
      if (context && (typeof context === 'object' || typeof context === 'function')) {
        Sentry.captureException(error, context);
      } else {
        Sentry.captureException(error);
      }
    });
=======
>>>>>>> origin/cursor/website-audit-and-enhancement-63e3
import * as Sentry from '@sentry/browser';

const DSN = import.meta.env.VITE_SENTRY_DSN;

if (DSN) {
  Sentry.init({ dsn: DSN });
}

export function captureException(error: unknown) {
  if (DSN) {
    Sentry.captureException(error);
  }
  if (typeof console !== 'undefined') {
    console.error('Sentry captured exception:', error);
<<<<<<< HEAD
=======
>>>>>>> origin/7yfp2f-codex/implement-global-error-boundary-with-toasts
>>>>>>> origin/cursor/website-audit-and-enhancement-63e3
  }
}
