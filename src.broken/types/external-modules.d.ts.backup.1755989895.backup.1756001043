declare module 'cmdk';
declare module '@radix-ui/react-context-menu';
declare module 'vaul';
declare module '@radix-ui/react-hover-card';
declare module 'input-otp';
declare module 'react-markdown';
declare module '@radix-ui/react-menubar';
declare module '@radix-ui/react-navigation-menu';
declare module 'react-resizable-panels';
declare module '@radix-ui/react-toggle-group';
declare module '@radix-ui/react-toggle';

// Fallback declaration for any modules that are not available in this
// environment. This allows TypeScript to compile even when dependencies are
// missing (such as during offline builds).
declare module '*';

// Minimal stubs for React and related packages so that the project can type
// check without the full type definitions installed.
declare module 'react' {
  export type ReactNode = any;
  export type FC<P = any> = (props: P) => any;
  export type ChangeEvent<T = any> = any;
  export type FormEvent<T = any> = any;
  export type KeyboardEvent<T = any> = any;
  export type SyntheticEvent<T = any> = any;
  export type MouseEvent<T = any> = any;
  const React: {
    ChangeEvent: any;
    FormEvent: any;
    KeyboardEvent: any;
    ReactNode: any;
    FC: any;
    SyntheticEvent: any;
    MouseEvent: any;
    useState: any;
    useEffect: any;
    useRef: any;
    useContext: any;
    useMemo: any;
    useCallback: any;
    useReducer: any;
    useLayoutEffect: any;
    useImperativeHandle: any;
    forwardRef: any;
    createContext: any;
    Fragment: any;
  };
  export default React;
  export const useState: any;
  export const useEffect: any;
  export const useRef: any;
  export const useContext: any;
  export const useMemo: any;
  export const useCallback: any;
  export const useReducer: any;
  export const useLayoutEffect: any;
  export const useImperativeHandle: any;
  export const forwardRef: any;
  export const createContext: any;
  export const Fragment: any;
}

declare module 'react/jsx-runtime' {
  export function jsx(...args: any[]): any;
  export function jsxs(...args: any[]): any;
  export const Fragment: any;
}

declare module 'react-dom' {
  const ReactDOM: any;
  export default ReactDOM;
}

declare module 'react-router-dom';
declare module '@tanstack/react-query';
declare module 'react-hook-form';
declare module '@hookform/resolvers/zod';
declare module 'zod';
declare module 'react-i18next';
declare module 'react-day-picker';
declare module 'recharts';
<<<<<<< HEAD
=======
<<<<<<< HEAD
declare module 'lucide-react';
declare module 'react-helmet-async';
declare module 'sonner';
declare module 'jspdf' {
  export class jsPDF {
    constructor(...args: any[]);
    [key: string]: any;
  }
}
declare module 'jspdf-autotable';
declare module 'date-fns';
declare module 'child_process';
declare module 'path';

declare global {
  namespace JSX {
    interface Element {}
    interface IntrinsicElements {
      [elem: string]: any;
    }
=======
>>>>>>> origin/cursor/website-audit-and-enhancement-63e3
declare module 'next' {
  export type GetStaticPaths = any;
  export type GetStaticProps<P = any, Q = any> = any;
  export type GetServerSideProps<P = any, Q = any> = any;
}
declare module 'next/link' {
  const Link: React.ComponentType<any>
  export default Link
}
declare module 'next/router' {
  interface NextRouter {
    pathname: string
    92kxb3-codex/populate-forum-category-with-posts
    query: Record<string, string | string[]>
      main
    isFallback?: boolean
<<<<<<< HEAD
=======
>>>>>>> origin/92kxb3-codex/populate-forum-category-with-posts
>>>>>>> origin/cursor/website-audit-and-enhancement-63e3
  }
}
