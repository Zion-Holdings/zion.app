<<<<<<< HEAD
=======
<<<<<<< HEAD
import { toast as hotToast, type ToastOptions as HotToastOptions } from 'react-hot-toast';

export type ToastOptions = HotToastOptions & {
  title?: string;
  description?: string;
  variant?: 'default' | 'destructive' | 'success';
};

export const useToast = () => ({ toast });

function toast(options: ToastOptions) {
  const message = options.description || options.title || '';
  if (options.variant === 'destructive') {
    hotToast.error(message, options);
  } else if (options.variant === 'success') {
    hotToast.success(message, options);
  } else {
    hotToast(message, options);
  }
}

toast.title = (title: string) => hotToast(title);
toast.description = (description: string) => hotToast(description);
toast.error = (error: string) => hotToast.error(error);
toast.success = (message: string) => hotToast.success(message);

export { toast };
=======
>>>>>>> origin/cursor/website-audit-and-enhancement-63e3
// Hook for use-toast;
export const useUse-toast = () => {;
  // TODO: Implement hook logic;
  return {};
};
<<<<<<< HEAD
=======
>>>>>>> origin/automation-error-fixes
>>>>>>> origin/cursor/website-audit-and-enhancement-63e3
