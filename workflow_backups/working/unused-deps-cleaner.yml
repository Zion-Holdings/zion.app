name: Unused Dependencies Cleaner

on:


  schedule: - cron: '0 4 * * 0'
  workflow_dispatch: {}


concurrency:



  group: "github.workflow-${{ github.ref }}"
  cancel-in-progress: true

  contents: write
  pull-requests: write

jobs:


  detect-and-prune: - name: Checkout
           
          fetch-depth: 0
      - name: Setup Node.js

                
          node-version: 20
          cache: npm
      - name: Install deps

                
      - name: Detect unused deps

                
      - name: Remove unused deps

                
          node -e "const fs=require('fs');const r=JSON.parse(fs.readFileSync('depcheck.json','utf8'));const u=[...new Set([...(r.dependencies||[]),...(r.devDependencies||[])])];if(u.length){console.log('Unused:',u);process.exit(0)}else{console.log('No unused deps');process.exit(2)}" || echo "NONE" > /dev/null
      - name: Prune and test

          
          node -e "const fs=require('fs');const r=JSON.parse(fs.readFileSync('depcheck.json','utf8'));const u=[...new Set([...(r.dependencies||[]),...(r.devDependencies||[])])];if(u.length){const {execSync}=require('child_process');for(const d of u){try{execSync(`npm uninstall ${d}`,{stdio:'inherit'})}catch(e){}}}"
          npm run build || npm run build:heal || true
      - name: Create Pull Request

          
          token: "${{ secrets.GITHUB_TOKEN }}"
          commit-message:

            "chore(deps): remove unused dependencies via depcheck"
          title:

            "chore(deps): remove unused dependencies"
          body: |
            Automated removal of unused dependencies detected by depcheck.
          branch: automation/prune-unused-deps
          delete-branch: true
          labels: |
            automation
            dependencies
            auto-merge