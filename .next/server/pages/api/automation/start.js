"use strict";(()=>{var a={};a.id=439,a.ids=[439],a.modules={3873:a=>{a.exports=require("path")},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5633:(a,b,c)=>{c.r(b),c.d(b,{config:()=>r,default:()=>q,handler:()=>t});var d={};c.r(d),c.d(d,{default:()=>n});var e=c(9046),f=c(8667),g=c(3480),h=c(6435),i=c(9646),j=c(9021),k=c.n(j),l=c(3873),m=c.n(l);function n(a,b){if("POST"!==a.method)return b.status(405).json({error:"Method not allowed"});try{let a=m().join(process.cwd(),"automation"),c=m().join(a,"pids","infinite-improvement.pid"),d=m().join(a,"logs","infinite-improvement.log");if(k().existsSync(c))try{let a=k().readFileSync(c,"utf8").trim();if((0,i.execSync)(`ps -p ${a}`,{encoding:"utf8"}).includes(a))return b.status(400).json({success:!1,error:"Infinite improvement loop is already running"});k().unlinkSync(c)}catch(a){k().unlinkSync(c)}let e=m().dirname(c),f=m().dirname(d);k().existsSync(e)||k().mkdirSync(e,{recursive:!0}),k().existsSync(f)||k().mkdirSync(f,{recursive:!0});let g=process.cwd(),h=m().join(a,"infinite-improvement-loop.js");if(!k().existsSync(h))return b.status(500).json({success:!1,error:"Infinite improvement loop script not found"});(0,i.execSync)(`node "${h}"`,{cwd:g,stdio:"pipe",detached:!0});let j=Date.now().toString();k().writeFileSync(c,j);let l=`[${new Date().toISOString()}] [INFO] Infinite improvement loop started (PID: ${j})
`;k().appendFileSync(d,l),b.status(200).json({success:!0,message:"Infinite improvement loop started successfully",pid:j})}catch(a){console.error("Error starting infinite improvement loop:",a),b.status(500).json({success:!1,error:"Failed to start infinite improvement loop: "+a.message})}}var o=c(8112),p=c(8766);let q=(0,h.M)(d,"default"),r=(0,h.M)(d,"config"),s=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/automation/start",pathname:"/api/automation/start",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function t(a,b,c){let d=await s.prepare(a,b,{srcPage:"/api/automation/start"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,o.getTracer)(),e=d.getActiveScopeSpan(),i=s.instrumentationOnRequestError.bind(s),j=async e=>s.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:s.isDev,page:"/api/automation/start",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==p.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await j(e):await d.withPropagatedContext(a.headers,()=>d.trace(p.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:o.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},j))}catch(a){if(s.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},9021:a=>{a.exports=require("fs")},9646:a=>{a.exports=require("child_process")}};var b=require("../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=5633));module.exports=c})();