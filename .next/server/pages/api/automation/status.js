"use strict";(()=>{var a={};a.id=491,a.ids=[491],a.modules={2615:(a,b,c)=>{c.r(b),c.d(b,{config:()=>r,default:()=>q,handler:()=>t});var d={};c.r(d),c.d(d,{default:()=>m});var e=c(9046),f=c(8667),g=c(3480),h=c(6435),i=c(9021),j=c.n(i),k=c(3873),l=c.n(k);async function m(a,b){if("GET"!==a.method)return b.status(405).json({error:"Method not allowed"});try{let a=l().join(process.cwd(),"automation"),c=l().join(a,"data"),d=l().join(a,"pids");if(!j().existsSync(a))return b.status(404).json({error:"Automation directory not found"});let e={running:!1,processes:[],lastUpdated:new Date().toISOString(),totalProcesses:0,runningProcesses:0};if(j().existsSync(d)){for(let a of j().readdirSync(d).filter(a=>a.endsWith(".pid"))){let b=a.replace(".pid",""),c=l().join(d,a);try{let a=j().readFileSync(c,"utf8").trim(),d=await n(a);e.processes.push({name:b,pid:d?a:null,running:d}),d&&e.runningProcesses++}catch(a){try{j().unlinkSync(c)}catch(a){}}}e.totalProcesses=e.processes.length,e.running=e.runningProcesses>0}let f=l().join(c,"orchestrator-status.json");if(j().existsSync(f))try{let a=JSON.parse(j().readFileSync(f,"utf8"));Object.assign(e,a)}catch(a){}b.status(200).json(e)}catch(a){console.error("Error getting automation status:",a),b.status(500).json({error:"Failed to get automation status"})}}async function n(a){return new Promise(b=>{try{process.kill(parseInt(a),0),b(!0)}catch(a){b(!1)}})}var o=c(8112),p=c(8766);let q=(0,h.M)(d,"default"),r=(0,h.M)(d,"config"),s=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/automation/status",pathname:"/api/automation/status",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function t(a,b,c){let d=await s.prepare(a,b,{srcPage:"/api/automation/status"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,o.getTracer)(),e=d.getActiveScopeSpan(),i=s.instrumentationOnRequestError.bind(s),j=async e=>s.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:s.isDev,page:"/api/automation/status",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==p.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await j(e):await d.withPropagatedContext(a.headers,()=>d.trace(p.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:o.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},j))}catch(a){if(s.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},3873:a=>{a.exports=require("path")},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},9021:a=>{a.exports=require("fs")}};var b=require("../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=2615));module.exports=c})();