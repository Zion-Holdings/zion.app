import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { motion, AnimatePresence } from 'framer-motion';
import { 
<<<<<<< HEAD
  Menu, X, ChevronDown, Rocket, Brain, Shield, Factory, 
  Globe, Zap, Building2, FlaskConical, Leaf, Car, Truck, 
  Microscope, GraduationCap, ShieldCheck, Globe2, Cloud, 
  Cpu, Database, Lock, Smartphone, Palette, Search, 
  MessageSquare, FileText, Calendar, CreditCard, BarChart3, 
  Code, BookOpen, Activity, Settings, Mail, Phone, MapPin, 
  Sparkles, Atom, Eye, Trophy, Dna, ArrowRight, ExternalLink, 
  Star, Users, ChevronRight, Play, Check
} from 'lucide-react';
import Button from '../ui/Button';

const Navigation = () => {
=======
  Menu, X, ChevronDown, Search, User, ShoppingCart, 
  Bell, Settings, HelpCircle, Globe, Zap, Sparkles,
  Brain, Cpu, Shield, Rocket, Atom, CpuIcon, Phone, Mail
} from 'lucide-react';

interface NavigationProps {
  className?: string;
}

const Navigation: React.FC<NavigationProps> = ({ className = '' }) => {
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
  const [isOpen, setIsOpen] = useState(false);
  const [isScrolled, setIsScrolled] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);

  useEffect(() => {
    const handleScroll = () => {
<<<<<<< HEAD
      setIsScrolled(window.scrollY > 50);
=======
      setIsScrolled(window.scrollY > 20);
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const navigationItems = [
    {
      name: 'Services',
      href: '/services',
<<<<<<< HEAD
      icon: <Rocket className="w-4 h-4" />,
      dropdown: [
        { name: 'Micro SaaS', href: '/micro-saas', icon: 'üöÄ' },
        { name: 'AI Solutions', href: '/ai-assistant', icon: 'üß†' },
        { name: 'Automation', href: '/automation', icon: '‚ö°' },
        { name: 'Analytics', href: '/analytics', icon: 'üìä' },
        { name: 'Cloud Platform', href: '/cloud-platform', icon: '‚òÅÔ∏è' }
=======
      icon: <Zap className="w-4 h-4" />,
      dropdown: [
        { name: 'AI & Machine Learning', href: '/services?category=AI%20%26%20Machine%20Learning' },
        { name: 'Quantum Computing', href: '/services?category=Quantum%20AI%20%26%20Computing' },
        { name: 'Cybersecurity', href: '/services?category=Cybersecurity%20%26%20Privacy' },
        { name: 'Blockchain & DeFi', href: '/services?category=Blockchain%20%26%20DeFi' },
        { name: 'IoT & Smart Cities', href: '/services?category=IoT%20%26%20Smart%20Cities' },
        { name: 'Space Technology', href: '/services?category=Space%20Technology%20%26%20Aerospace' }
      ]
    },
    {
      name: 'Micro SaaS',
      href: '/micro-saas',
      icon: <Cpu className="w-4 h-4" />,
      dropdown: [
        { name: 'Revolutionary Services', href: '/micro-saas#revolutionary' },
        { name: 'AI-Powered Solutions', href: '/micro-saas#ai-solutions' },
        { name: 'Quantum Technology', href: '/micro-saas#quantum' },
        { name: 'Industry Solutions', href: '/micro-saas#industry' }
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
      ]
    },
    {
      name: 'Solutions',
      href: '/solutions',
<<<<<<< HEAD
      icon: <Brain className="w-4 h-4" />,
      dropdown: [
        { name: 'Quantum Computing', href: '/solutions/quantum', icon: '‚öõÔ∏è' },
        { name: 'Autonomous Systems', href: '/solutions/autonomous', icon: 'ü§ñ' },
        { name: 'Space Technology', href: '/solutions/space', icon: 'üöÄ' },
        { name: 'Biomedical AI', href: '/solutions/biomedical', icon: 'üß¨' },
        { name: 'Metaverse', href: '/solutions/metaverse', icon: 'üåê' }
=======
      icon: <Rocket className="w-4 h-4" />,
      dropdown: [
        { name: 'Enterprise Solutions', href: '/solutions#enterprise' },
        { name: 'Startup Solutions', href: '/solutions#startup' },
        { name: 'Government Solutions', href: '/solutions#government' },
        { name: 'Healthcare Solutions', href: '/solutions#healthcare' }
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
      ]
    },
    {
      name: 'Resources',
      href: '/resources',
<<<<<<< HEAD
      icon: <BookOpen className="w-4 h-4" />,
      dropdown: [
        { name: 'Documentation', href: '/docs', icon: 'üìö' },
        { name: 'Blog', href: '/blog', icon: '‚úçÔ∏è' },
        { name: 'Case Studies', href: '/case-studies', icon: 'üìä' },
        { name: 'News', href: '/news', icon: 'üì∞' },
        { name: 'Support', href: '/support', icon: 'üÜò' }
=======
      icon: <Brain className="w-4 h-4" />,
      dropdown: [
        { name: 'Documentation', href: '/docs' },
        { name: 'API Reference', href: '/api' },
        { name: 'Case Studies', href: '/case-studies' },
        { name: 'Blog', href: '/blog' },
        { name: 'Research', href: '/research' }
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
      ]
    },
    {
      name: 'Company',
      href: '/about',
<<<<<<< HEAD
      icon: <Building2 className="w-4 h-4" />,
      dropdown: [
        { name: 'About Us', href: '/about', icon: 'üè¢' },
        { name: 'Careers', href: '/careers', icon: 'üíº' },
        { name: 'Contact', href: '/contact', icon: 'üìû' },
        { name: 'Terms', href: '/terms', icon: 'üìã' },
        { name: 'Privacy', href: '/privacy', icon: 'üîí' }
=======
      icon: <Atom className="w-4 h-4" />,
      dropdown: [
        { name: 'About Us', href: '/about' },
        { name: 'Careers', href: '/careers' },
        { name: 'News', href: '/news' },
        { name: 'Contact', href: '/contact' },
        { name: 'Support', href: '/support' }
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
      ]
    }
  ];

<<<<<<< HEAD
  const toggleDropdown = (name: string) => {
    setActiveDropdown(activeDropdown === name ? null : name);
  };

  return (
    <nav className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
      isScrolled 
        ? 'bg-gray-900/95 backdrop-blur-xl border-b border-gray-700/50 shadow-2xl shadow-black/20' 
        : 'bg-transparent'
    }`}>
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between h-20">
          {/* Logo */}
          <Link href="/" className="flex items-center space-x-3 group">
            <div className="relative">
              <div className="w-10 h-10 bg-gradient-to-br from-cyan-400 to-purple-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                <Sparkles className="w-6 h-6 text-white" />
              </div>
              <div className="absolute inset-0 bg-gradient-to-br from-cyan-400 to-purple-500 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 blur-xl"></div>
            </div>
            <div className="hidden sm:block">
              <h1 className="text-2xl font-bold bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent">
                Zion Tech Group
              </h1>
              <p className="text-xs text-gray-400">Revolutionary Technology</p>
            </div>
          </Link>
=======
  const contactInfo = {
    mobile: '+1 302 464 0950',
    email: 'kleber@ziontechgroup.com',
    address: '364 E Main St STE 1008 Middletown DE 19709'
  };

  return (
    <motion.nav
      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
        isScrolled 
          ? 'bg-black/80 backdrop-blur-xl border-b border-white/10' 
          : 'bg-transparent'
      } ${className}`}
      initial={{ y: -100 }}
      animate={{ y: 0 }}
      transition={{ duration: 0.5 }}
    >
      {/* Holographic top border */}
      <div className="absolute top-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-cyan-400 to-transparent opacity-60" />
      
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-20">
          {/* Logo */}
          <motion.div
            className="flex items-center space-x-3"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            <Link href="/" className="flex items-center space-x-3 group">
              <div className="relative">
                <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-cyan-500 rounded-lg flex items-center justify-center">
                  <CpuIcon className="w-6 h-6 text-white" />
                </div>
                <div className="absolute inset-0 bg-gradient-to-br from-purple-500 to-cyan-500 rounded-lg blur-lg opacity-50 group-hover:opacity-75 transition-opacity" />
              </div>
              <div className="flex flex-col">
                <span className="text-xl font-bold bg-gradient-to-r from-white to-cyan-300 bg-clip-text text-transparent">
                  Zion Tech Group
                </span>
                <span className="text-xs text-cyan-400 font-medium">Future Technology Solutions</span>
              </div>
            </Link>
          </motion.div>
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1

          {/* Desktop Navigation */}
          <div className="hidden lg:flex items-center space-x-8">
            {navigationItems.map((item) => (
              <div key={item.name} className="relative group">
<<<<<<< HEAD
                <button
                  onClick={() => toggleDropdown(item.name)}
                  className="flex items-center space-x-2 px-4 py-2 text-gray-300 hover:text-white transition-colors duration-300 group-hover:text-cyan-400"
                >
                  {item.icon}
                  <span>{item.name}</span>
                  <ChevronDown className={`w-4 h-4 transition-transform duration-300 ${
                    activeDropdown === item.name ? 'rotate-180' : ''
                  }`} />
                </button>
=======
                <motion.button
                  className="flex items-center space-x-2 text-gray-300 hover:text-white transition-colors duration-200 py-2 px-3 rounded-lg hover:bg-white/5"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  onMouseEnter={() => setActiveDropdown(item.name)}
                  onMouseLeave={() => setActiveDropdown(null)}
                >
                  {item.icon}
                  <span className="font-medium">{item.name}</span>
                  <ChevronDown className="w-4 h-4 transition-transform duration-200 group-hover:rotate-180" />
                </motion.button>
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1

                {/* Dropdown */}
                <AnimatePresence>
                  {activeDropdown === item.name && (
                    <motion.div
<<<<<<< HEAD
                      initial={{ opacity: 0, y: 10, scale: 0.95 }}
                      animate={{ opacity: 1, y: 0, scale: 1 }}
                      exit={{ opacity: 0, y: 10, scale: 0.95 }}
                      transition={{ duration: 0.2 }}
                      className="absolute top-full left-0 mt-2 w-64 bg-gray-900/95 backdrop-blur-xl border border-gray-700/50 rounded-xl shadow-2xl shadow-black/50 overflow-hidden"
=======
                      className="absolute top-full left-0 mt-2 w-64 bg-black/90 backdrop-blur-xl border border-white/10 rounded-xl shadow-2xl"
                      initial={{ opacity: 0, y: -10, scale: 0.95 }}
                      animate={{ opacity: 1, y: 0, scale: 1 }}
                      exit={{ opacity: 0, y: -10, scale: 0.95 }}
                      transition={{ duration: 0.2 }}
                      onMouseEnter={() => setActiveDropdown(item.name)}
                      onMouseLeave={() => setActiveDropdown(null)}
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
                    >
                      <div className="p-2">
                        {item.dropdown?.map((dropdownItem) => (
                          <Link
                            key={dropdownItem.name}
                            href={dropdownItem.href}
<<<<<<< HEAD
                            className="flex items-center space-x-3 px-4 py-3 text-gray-300 hover:text-white hover:bg-gray-800/50 rounded-lg transition-all duration-300 group/item"
                            onClick={() => setActiveDropdown(null)}
                          >
                            <span className="text-lg">{dropdownItem.icon}</span>
                            <span className="group-hover/item:text-cyan-400 transition-colors duration-300">
                              {dropdownItem.name}
                            </span>
=======
                            className="flex items-center space-x-3 px-4 py-3 text-gray-300 hover:text-white hover:bg-white/5 rounded-lg transition-all duration-200 group"
                          >
                            <div className="w-2 h-2 bg-cyan-400 rounded-full group-hover:scale-150 transition-transform duration-200" />
                            <span className="font-medium">{dropdownItem.name}</span>
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
                          </Link>
                        ))}
                      </div>
                    </motion.div>
                  )}
                </AnimatePresence>
              </div>
            ))}
          </div>

<<<<<<< HEAD
          {/* CTA Buttons */}
          <div className="hidden lg:flex items-center space-x-4">
            <Button href="/pricing" variant="secondary" size="sm">
              Pricing
            </Button>
            <Button href="/contact" variant="primary" size="sm">
              Get Started
            </Button>
          </div>

          {/* Mobile Menu Button */}
          <button
            onClick={() => setIsOpen(!isOpen)}
            className="lg:hidden p-2 text-gray-300 hover:text-white transition-colors duration-300"
          >
            {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
=======
          {/* Right side actions */}
          <div className="hidden lg:flex items-center space-x-4">
            {/* Search */}
            <motion.button
              className="p-2 text-gray-400 hover:text-white hover:bg-white/5 rounded-lg transition-all duration-200"
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
            >
              <Search className="w-5 h-5" />
            </motion.button>

            {/* Contact Info */}
            <motion.div
              className="flex items-center space-x-2 text-cyan-400 hover:text-cyan-300 transition-colors duration-200 cursor-pointer"
              whileHover={{ scale: 1.05 }}
            >
              <Phone className="w-4 h-4" />
              <span className="text-sm font-medium">{contactInfo.mobile}</span>
            </motion.div>

            {/* CTA Button */}
            <motion.button
              className="bg-gradient-to-r from-purple-600 to-cyan-600 text-white px-6 py-2 rounded-lg font-medium hover:from-purple-700 hover:to-cyan-700 transition-all duration-200 shadow-lg hover:shadow-purple-500/25"
              whileHover={{ scale: 1.05, y: -2 }}
              whileTap={{ scale: 0.95 }}
            >
              Get Started
            </motion.button>
          </div>

          {/* Mobile menu button */}
          <motion.button
            className="lg:hidden p-2 text-gray-400 hover:text-white hover:bg-white/5 rounded-lg transition-all duration-200"
            whileHover={{ scale: 1.1 }}
            whileTap={{ scale: 0.9 }}
            onClick={() => setIsOpen(!isOpen)}
          >
            {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </motion.button>
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
        </div>
      </div>

      {/* Mobile Navigation */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
<<<<<<< HEAD
=======
            className="lg:hidden absolute top-full left-0 right-0 bg-black/95 backdrop-blur-xl border-t border-white/10"
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3 }}
<<<<<<< HEAD
            className="lg:hidden bg-gray-900/95 backdrop-blur-xl border-t border-gray-700/50 overflow-hidden"
          >
            <div className="container mx-auto px-4 py-6">
              <div className="space-y-6">
                {navigationItems.map((item) => (
                  <div key={item.name}>
                    <button
                      onClick={() => toggleDropdown(item.name)}
                      className="flex items-center justify-between w-full px-4 py-3 text-left text-gray-300 hover:text-white transition-colors duration-300"
                    >
                      <div className="flex items-center space-x-3">
                        {item.icon}
                        <span>{item.name}</span>
                      </div>
                      <ChevronDown className={`w-4 h-4 transition-transform duration-300 ${
                        activeDropdown === item.name ? 'rotate-180' : ''
                      }`} />
                    </button>

                    <AnimatePresence>
                      {activeDropdown === item.name && (
                        <motion.div
                          initial={{ opacity: 0, height: 0 }}
                          animate={{ opacity: 1, height: 'auto' }}
                          exit={{ opacity: 0, height: 0 }}
                          transition={{ duration: 0.3 }}
                          className="ml-8 mt-2 space-y-2 overflow-hidden"
                        >
                          {item.dropdown?.map((dropdownItem) => (
                            <Link
                              key={dropdownItem.name}
                              href={dropdownItem.href}
                              className="flex items-center space-x-3 px-4 py-2 text-gray-400 hover:text-cyan-400 transition-colors duration-300"
                              onClick={() => setIsOpen(false)}
                            >
                              <span className="text-lg">{dropdownItem.icon}</span>
                              <span>{dropdownItem.name}</span>
                            </Link>
                          ))}
                        </motion.div>
                      )}
                    </AnimatePresence>
                  </div>
                ))}

                <div className="pt-6 border-t border-gray-700/50">
                  <div className="flex flex-col space-y-3">
                    <Button href="/pricing" variant="secondary" size="sm" className="w-full">
                      Pricing
                    </Button>
                    <Button href="/contact" variant="primary" size="sm" className="w-full">
                      Get Started
                    </Button>
=======
          >
            <div className="px-4 py-6 space-y-4">
              {navigationItems.map((item) => (
                <div key={item.name}>
                  <Link
                    href={item.href}
                    className="flex items-center space-x-3 text-gray-300 hover:text-white py-3 px-4 rounded-lg hover:bg-white/5 transition-all duration-200"
                    onClick={() => setIsOpen(false)}
                  >
                    {item.icon}
                    <span className="font-medium">{item.name}</span>
                  </Link>
                  {item.dropdown && (
                    <div className="ml-8 mt-2 space-y-2">
                      {item.dropdown.map((dropdownItem) => (
                        <Link
                          key={dropdownItem.name}
                          href={dropdownItem.href}
                          className="block text-gray-400 hover:text-white py-2 px-4 rounded-lg hover:bg-white/5 transition-all duration-200"
                          onClick={() => setIsOpen(false)}
                        >
                          {dropdownItem.name}
                        </Link>
                      ))}
                    </div>
                  )}
                </div>
              ))}
              
              {/* Mobile contact info */}
              <div className="pt-4 border-t border-white/10">
                <div className="space-y-3">
                  <div className="flex items-center space-x-3 text-cyan-400">
                    <Phone className="w-4 h-4" />
                    <span className="text-sm">{contactInfo.mobile}</span>
                  </div>
                  <div className="flex items-center space-x-3 text-cyan-400">
                    <Mail className="w-4 h-4" />
                    <span className="text-sm">{contactInfo.email}</span>
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
                  </div>
                </div>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
<<<<<<< HEAD
    </nav>
=======

      {/* Floating particles effect */}
      <div className="absolute inset-0 pointer-events-none overflow-hidden">
        {[...Array(6)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute w-1 h-1 bg-cyan-400 rounded-full opacity-60"
            style={{
              left: `${20 + i * 15}%`,
              top: '50%'
            }}
            animate={{
              y: [0, -20, 0],
              opacity: [0.6, 1, 0.6],
              scale: [1, 1.5, 1]
            }}
            transition={{
              duration: 3 + i * 0.5,
              repeat: Infinity,
              ease: "easeInOut",
              delay: i * 0.2
            }}
          />
        ))}
      </div>
    </motion.nav>
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-c3e1
  );
};

export default Navigation;