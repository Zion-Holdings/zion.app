import React from 'react';

type Props = {
  title: string;
  description: string;
<<<<<<< HEAD
  cta?: { href: string; label: string };
  icon?: React.ReactNode;
};

export default function FuturisticCard({ title, description, cta, icon }: Props) {
  return (
    <div className="group relative overflow-hidden rounded-2xl border border-white/10 bg-white/5 dark:bg-white/5 backdrop-blur-md p-5 transition-all duration-300 hover:shadow-[0_0_0_1px_rgba(255,255,255,0.2)] hover:-translate-y-0.5">
      <div className="absolute -inset-0.5 rounded-2xl bg-gradient-to-br from-indigo-500/10 via-fuchsia-500/10 to-emerald-500/10 opacity-0 group-hover:opacity-100 blur-2xl transition-opacity" aria-hidden />
      <div className="relative z-10">
        <div className="flex items-start gap-3">
          {icon ? <div className="text-indigo-400">{icon}</div> : null}
          <div>
            <h3 className="text-lg font-semibold">{title}</h3>
            <p className="text-sm text-gray-600 dark:text-gray-300 mt-1">{description}</p>
          </div>
        </div>
        {cta ? (
          <a href={cta.href} className="inline-flex items-center mt-3 text-sm text-indigo-500 hover:text-indigo-400 underline">
            {cta.label}
          </a>
        ) : null}
=======
  cta?: { href: string; label: string }[];
};

export default function FuturisticCard({ title, description, cta }: Props) {
  return (
    <div className="relative rounded-xl border border-white/15 bg-white/5 hover:bg-white/10 transition shadow-[var(--shadow-md)] hover:shadow-[var(--shadow-lg)]">
      <div className="absolute inset-0 rounded-xl opacity-0 hover:opacity-100 transition bg-gradient-to-r from-cyan-400/10 via-fuchsia-400/10 to-emerald-400/10 blur-md" />
      <div className="relative p-5">
        <h3 className="text-lg font-semibold text-white/90">{title}</h3>
        <p className="mt-2 text-sm text-white/70">{description}</p>
        {cta && cta.length > 0 && (
          <div className="mt-4 flex flex-wrap gap-2">
            {cta.map((c) => (
              <a key={c.href} href={c.href} className="px-3 py-1.5 rounded-md bg-white/10 hover:bg-white/20 text-white text-sm border border-white/20 transition">
                {c.label}
              </a>
            ))}
          </div>
        )}
>>>>>>> origin/cursor/build-dao-proposal-drafting-system-with-templates-9858
      </div>
    </div>
  );
}