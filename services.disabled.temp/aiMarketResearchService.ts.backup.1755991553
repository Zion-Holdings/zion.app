export interface MarketTrend {
  id: string;
  keyword: string;
  searchVolume: number;
<<<<<<< HEAD
  growthRate: number;
  competition: 'low' | 'medium' | 'high';
  seasonality: string[];
  relatedKeywords: string[];
  estimatedClicks: number;
  estimatedCost: number;
=======
  trendDirection: 'rising' | 'falling' | 'stable';
  growthRate: number;
  relatedKeywords: string[];
  marketOpportunity: number;
  competitionLevel: 'low' | 'medium' | 'high';
  estimatedValue: number;
  lastUpdated: Date;
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-1c42
}

export interface CompetitorAnalysis {
  id: string;
  competitorName: string;
<<<<<<< HEAD
  domain: string;
  marketShare: number;
  strengths: string[];
  weaknesses: string[];
  opportunities: string[];
  threats: string[];
  trafficSources: string[];
  contentStrategy: string[];
  pricingStrategy: string;
  lastUpdated: Date;
=======
  marketShare: number;
  strengths: string[];
  weaknesses: string[];
  pricingStrategy: string;
  targetAudience: string[];
  marketingChannels: string[];
  productFeatures: string[];
  customerReviews: {
    rating: number;
    count: number;
    sentiment: 'positive' | 'neutral' | 'negative';
  };
  lastAnalyzed: Date;
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-1c42
}

export interface MarketInsight {
  id: string;
<<<<<<< HEAD
  industry: string;
  trend: string;
  description: string;
  impact: 'low' | 'medium' | 'high';
  timeframe: string;
  dataSources: string[];
  confidence: number;
  actionableInsights: string[];
=======
  title: string;
  description: string;
  category: string;
  impact: 'high' | 'medium' | 'low';
  confidence: number;
  dataSources: string[];
  recommendations: string[];
  estimatedTimeline: string;
  investmentRequired: number;
  potentialROI: number;
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-1c42
}

export interface MarketResearchRequest {
  industry: string;
<<<<<<< HEAD
  keywords: string[];
  competitors: string[];
  timeframe: '7d' | '30d' | '90d' | '1y';
  includeTrends: boolean;
  includeCompetitors: boolean;
  includePricing: boolean;
}

export interface MarketResearchResponse {
=======
  targetMarket: string[];
  researchType: 'trends' | 'competitors' | 'opportunities' | 'comprehensive';
  budget: number;
  timeline: string;
  specificQuestions?: string[];
}

export interface MarketResearchResponse {
  requestId: string;
  status: 'processing' | 'completed' | 'failed';
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-1c42
  trends: MarketTrend[];
  competitors: CompetitorAnalysis[];
  insights: MarketInsight[];
  summary: string;
  recommendations: string[];
  nextSteps: string[];
<<<<<<< HEAD
=======
  generatedAt: Date;
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-1c42
}

export class AIMarketResearchService {
  private apiKey: string;
  private baseUrl: string;

  constructor(apiKey: string, baseUrl: string = 'https://api.ziontechgroup.com') {
    this.apiKey = apiKey;
    this.baseUrl = baseUrl;
  }

<<<<<<< HEAD
  async researchMarket(request: MarketResearchRequest): Promise<MarketResearchResponse> {
    try {
      const response = await fetch(`${this.baseUrl}/api/market-research`, {
=======
  async analyzeMarketTrends(industry: string, timeframe: string = '30d'): Promise<MarketTrend[]> {
    try {
      const response = await fetch(`${this.baseUrl}/api/market-research/trends`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${this.apiKey}`,
        },
        body: JSON.stringify({ industry, timeframe }),
      });

      if (!response.ok) {
        throw new Error(`Market research API error: ${response.statusText}`);
      }

      const data = await response.json();
      return data.trends.map((trend: any) => ({
        ...trend,
        lastUpdated: new Date(trend.lastUpdated),
      }));
    } catch (error) {
      console.error('Error analyzing market trends:', error);
      throw error;
    }
  }

  async analyzeCompetitors(competitorNames: string[], industry: string): Promise<CompetitorAnalysis[]> {
    try {
      const response = await fetch(`${this.baseUrl}/api/market-research/competitors`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${this.apiKey}`,
        },
        body: JSON.stringify({ competitorNames, industry }),
      });

      if (!response.ok) {
        throw new Error(`Competitor analysis API error: ${response.statusText}`);
      }

      const data = await response.json();
      return data.competitors.map((competitor: any) => ({
        ...competitor,
        lastAnalyzed: new Date(competitor.lastAnalyzed),
      }));
    } catch (error) {
      console.error('Error analyzing competitors:', error);
      throw error;
    }
  }

  async generateMarketInsights(request: MarketResearchRequest): Promise<MarketInsight[]> {
    try {
      const response = await fetch(`${this.baseUrl}/api/market-research/insights`, {
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-1c42
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${this.apiKey}`,
        },
        body: JSON.stringify(request),
      });

      if (!response.ok) {
<<<<<<< HEAD
        throw new Error(`Market research failed: ${response.statusText}`);
      }

      return await response.json();
    } catch (error) {
      console.error('Market research error:', error);
=======
        throw new Error(`Market insights API error: ${response.statusText}`);
      }

      const data = await response.json();
      return data.insights;
    } catch (error) {
      console.error('Error generating market insights:', error);
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-1c42
      throw error;
    }
  }

<<<<<<< HEAD
  async getTrendingKeywords(industry: string, limit: number = 20): Promise<MarketTrend[]> {
    try {
      const response = await fetch(`${this.baseUrl}/api/market-research/trends?industry=${encodeURIComponent(industry)}&limit=${limit}`, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
        },
      });

      if (!response.ok) {
        throw new Error(`Failed to fetch trending keywords: ${response.statusText}`);
      }

      return await response.json();
    } catch (error) {
      console.error('Error fetching trending keywords:', error);
=======
  async getComprehensiveAnalysis(request: MarketResearchRequest): Promise<MarketResearchResponse> {
    try {
      const response = await fetch(`${this.baseUrl}/api/market-research/comprehensive`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${this.apiKey}`,
        },
        body: JSON.stringify(request),
      });

      if (!response.ok) {
        throw new Error(`Comprehensive analysis API error: ${response.statusText}`);
      }

      const data = await response.json();
      return {
        ...data,
        generatedAt: new Date(data.generatedAt),
      };
    } catch (error) {
      console.error('Error getting comprehensive analysis:', error);
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-1c42
      throw error;
    }
  }

<<<<<<< HEAD
  async analyzeCompetitor(domain: string): Promise<CompetitorAnalysis> {
    try {
      const response = await fetch(`${this.baseUrl}/api/market-research/competitor/${encodeURIComponent(domain)}`, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
        },
      });

      if (!response.ok) {
        throw new Error(`Competitor analysis failed: ${response.statusText}`);
      }

      return await response.json();
    } catch (error) {
      console.error('Competitor analysis error:', error);
=======
  async getMarketOpportunities(industry: string, investmentRange: [number, number]): Promise<MarketInsight[]> {
    try {
      const response = await fetch(`${this.baseUrl}/api/market-research/opportunities`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${this.apiKey}`,
        },
        body: JSON.stringify({ industry, investmentRange }),
      });

      if (!response.ok) {
        throw new Error(`Market opportunities API error: ${response.statusText}`);
      }

      const data = await response.json();
      return data.opportunities;
    } catch (error) {
      console.error('Error getting market opportunities:', error);
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-1c42
      throw error;
    }
  }

<<<<<<< HEAD
  async getMarketInsights(industry: string): Promise<MarketInsight[]> {
    try {
      const response = await fetch(`${this.baseUrl}/api/market-research/insights?industry=${encodeURIComponent(industry)}`, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
        },
      });

      if (!response.ok) {
        throw new Error(`Failed to fetch market insights: ${response.statusText}`);
      }

      return await response.json();
    } catch (error) {
      console.error('Error fetching market insights:', error);
      throw error;
    }
  }

  async generateReport(request: MarketResearchRequest): Promise<string> {
    try {
      const research = await this.researchMarket(request);
      
      let report = `# Market Research Report\n\n`;
      report += `**Industry:** ${request.industry}\n`;
      report += `**Analysis Period:** ${request.timeframe}\n`;
      report += `**Generated:** ${new Date().toLocaleDateString()}\n\n`;
      
      if (research.trends.length > 0) {
        report += `## Market Trends\n\n`;
        research.trends.forEach(trend => {
          report += `### ${trend.keyword}\n`;
          report += `- Search Volume: ${trend.searchVolume.toLocaleString()}\n`;
          report += `- Growth Rate: ${trend.growthRate}%\n`;
          report += `- Competition: ${trend.competition}\n`;
          report += `- Estimated Clicks: ${trend.estimatedClicks.toLocaleString()}\n`;
          report += `- Estimated Cost: $${trend.estimatedCost.toLocaleString()}\n\n`;
        });
      }
      
      if (research.competitors.length > 0) {
        report += `## Competitor Analysis\n\n`;
        research.competitors.forEach(competitor => {
          report += `### ${competitor.competitorName}\n`;
          report += `- Market Share: ${competitor.marketShare}%\n`;
          report += `- Strengths: ${competitor.strengths.join(', ')}\n`;
          report += `- Weaknesses: ${competitor.weaknesses.join(', ')}\n`;
          report += `- Opportunities: ${competitor.opportunities.join(', ')}\n\n`;
        });
      }
      
      if (research.insights.length > 0) {
        report += `## Market Insights\n\n`;
        research.insights.forEach(insight => {
          report += `### ${insight.trend}\n`;
          report += `- Impact: ${insight.impact}\n`;
          report += `- Timeframe: ${insight.timeframe}\n`;
          report += `- Confidence: ${insight.confidence}%\n`;
          report += `- Actionable Insights:\n`;
          insight.actionableInsights.forEach(action => {
            report += `  - ${action}\n`;
          });
          report += `\n`;
        });
      }
      
      report += `## Summary\n\n${research.summary}\n\n`;
      report += `## Recommendations\n\n`;
      research.recommendations.forEach((rec, index) => {
        report += `${index + 1}. ${rec}\n`;
      });
      
      report += `\n## Next Steps\n\n`;
      research.nextSteps.forEach((step, index) => {
        report += `${index + 1}. ${step}\n`;
      });
      
      return report;
    } catch (error) {
      console.error('Report generation error:', error);
=======
  async exportReport(response: MarketResearchResponse, format: 'pdf' | 'csv' | 'excel'): Promise<string> {
    try {
      const exportResponse = await fetch(`${this.baseUrl}/api/market-research/export`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${this.apiKey}`,
        },
        body: JSON.stringify({ response, format }),
      });

      if (!exportResponse.ok) {
        throw new Error(`Export API error: ${exportResponse.statusText}`);
      }

      const data = await exportResponse.json();
      return data.downloadUrl;
    } catch (error) {
      console.error('Error exporting report:', error);
>>>>>>> origin/cursor/enhance-app-services-and-website-with-futuristic-design-1c42
      throw error;
    }
  }
}

export const aiMarketResearchService = new AIMarketResearchService(process.env.MARKET_RESEARCH_API_KEY || '');