#!/usr/bin/env node
import fs from 'fs';
import path from 'path';

function ensureDir(dirPath) { if (!fs.existsSync(dirPath)) fs.mkdirSync(dirPath, { recursive: true }); }

function getRepoFromEnv() {
  const envRepo = process.env.GITHUB_REPOSITORY;
  if (envRepo) {
    const [owner, repo] = envRepo.split('/');
    return { owner, repo };
  }
  const repoUrl = require('../package.json').repository?.url || '';
  const match = repoUrl.match(/github.com\/(.+?)\/(.+?)\.git$/i);
  return { owner: match ? match[1] : '', repo: match ? match[2] : '' };
}

async function gh(endpoint) {
  const { owner, repo } = getRepoFromEnv();
  const url = `https://api.github.com/repos/${owner}/${repo}${endpoint}`;
  const headers = { 'User-Agent': 'zion-autonomy', 'Accept': 'application/vnd.github+json' };
  if (process.env.GITHUB_TOKEN) headers['Authorization'] = `token ${process.env.GITHUB_TOKEN}`;
  const res = await fetch(url, { headers });
  if (!res.ok) throw new Error(`GitHub API ${endpoint} failed: ${res.status}`);
  return res.json();
}

async function fetchCommits() {
  try {
    const commits = await gh('/commits?per_page=40');
    return commits.map((c) => ({ sha: c.sha.substring(0, 7), msg: c.commit.message.split('\n')[0], url: c.html_url, author: c.commit.author.name, date: c.commit.author.date }));
  } catch {
    return [];
  }
}

function renderChangelog(commits) {
  const now = new Date().toISOString();
  const lines = [];
  lines.push('# CHANGELOG (Autonomous)');
  lines.push('');
  lines.push(`Generated: ${now}`);
  lines.push('');
  for (const c of commits) lines.push(`- ${c.date.slice(0, 10)} ${c.sha}: ${c.msg} â€” ${c.author} (${c.url})`);
  lines.push('');
  lines.push('> Generated by Autonomous Changelog Generator');
  return lines.join('\n');
}

async function main() {
  const commits = await fetchCommits();
  const md = renderChangelog(commits);
  ensureDir('docs');
  ensureDir(path.join('public', 'autonomy'));
  fs.writeFileSync(path.join('docs', 'CHANGELOG_AUTONOMY.md'), md, 'utf8');
  fs.writeFileSync(path.join('public', 'autonomy', 'CHANGELOG_AUTONOMY.md'), md, 'utf8');
  console.log('Wrote docs/CHANGELOG_AUTONOMY.md and public/autonomy/CHANGELOG_AUTONOMY.md');
}

main();