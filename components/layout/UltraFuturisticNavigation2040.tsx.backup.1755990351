import React, { useState, useEffect, useRef, useCallback } from 'react';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  Menu, X, Search, ChevronDown, Zap, Globe, Lock, 
<<<<<<< HEAD
  Phone, Mail, MapPin, ArrowRight, Star, Users, Award,
  Sun, Moon, Bell, User
=======
  Phone, Mail, MapPin, ArrowRight, Star, Users, Award, Building, Cpu, Rocket, Shield, Heart
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-1aec
} from 'lucide-react';

interface NavigationItem {
  label: string;
  href?: string;
  children?: NavigationItem[];
  icon?: React.ReactNode;
  description?: string;
  badge?: string;
}

// Memoized navigation items for better performance
const navigationItems: NavigationItem[] = [
  {
    label: 'Home',
    href: '/',
    icon: <Home className="w-4 h-4" />,
    neonColor: 'shadow-cyan-400/50'
  },
  {
    label: 'Services',
    children: [
      {
        label: 'AI & Machine Learning',
        href: '/ai-services',
        icon: <Star className="w-4 h-4" />,
        description: 'Advanced AI solutions for enterprise',
        badge: 'New'
      },
      {
        label: 'Q4 2025 Services',
        href: '/q4-2025-innovative-services-showcase',
        icon: <Star className="w-4 h-4" />,
        description: 'Latest innovative services and solutions'
      },
      {
        label: 'Quantum Computing',
        href: '/quantum-services',
        icon: <Zap className="w-4 h-4" />,
        description: 'Next-generation quantum solutions',
        badge: 'Hot'
      },
      { 
        name: 'Quantum AI Neural Network 2043', 
        href: '/quantum-ai-neural-2043', 
        description: 'Quantum-powered AI neural networks',
        icon: <Atom className="w-4 h-4" />,
        color: 'from-blue-500 to-cyan-500',
        featured: true
      },
      {
        label: 'Cybersecurity',
        href: '/cybersecurity',
        icon: <Lock className="w-4 h-4" />,
        description: 'Enterprise security solutions'
      },
      {
        label: 'Cloud Solutions',
        href: '/cloud-platform',
        icon: <Globe className="w-4 h-4" />,
        description: 'Scalable cloud infrastructure'
      },
      {
<<<<<<< HEAD
        label: 'Micro SaaS',
        href: '/micro-saas',
        icon: <Star className="w-4 h-4" />,
        description: 'Rapid deployment SaaS solutions'
      },
      {
        label: '2046 Services Showcase',
        href: '/services-2046-showcase',
        icon: <Star className="w-4 h-4" />,
        description: 'Revolutionary 2046 technology showcase'
=======
        label: 'Micro SAAS Solutions',
        href: '/micro-saas',
        icon: <Building className="w-4 h-4" />,
        description: 'Innovative micro SAAS platforms'
      },
      {
        label: 'IT Infrastructure',
        href: '/it-services',
        icon: <Cpu className="w-4 h-4" />,
        description: 'Enterprise IT solutions'
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-1aec
      },
      {
        label: 'View All Services',
        href: '/services',
        icon: <Briefcase className="w-4 h-4" />,
        description: 'Explore our comprehensive technology solutions',
        badge: 'New',
        neonColor: 'shadow-blue-400/50',
        children: [
          {
            label: 'Comprehensive 2040 Showcase',
            href: '/comprehensive-2040-services-showcase',
            icon: <Star className="w-4 h-4" />,
            description: 'All our revolutionary services in one place',
            featured: true,
            neonColor: 'shadow-yellow-400/50'
          },
          {
            label: 'AI & Machine Learning',
            href: '/services?category=ai-ml',
            icon: <Brain className="w-4 h-4" />,
            description: 'Advanced AI solutions for enterprise',
            featured: true,
            neonColor: 'shadow-purple-400/50'
          },
          {
            label: 'Quantum Computing',
            href: '/services?category=quantum',
            icon: <Atom className="w-4 h-4" />,
            description: 'Next-generation quantum solutions',
            featured: true,
            neonColor: 'shadow-blue-400/50'
          },
          {
            label: 'Space Technology',
            href: '/services?category=space-tech',
            icon: <Rocket className="w-4 h-4" />,
            description: 'Innovative space tech applications',
            featured: true,
            neonColor: 'shadow-pink-400/50'
          },
      {
        label: 'Quantum Cybersecurity 2045',
        href: '/quantum-cybersecurity-platform-2045',
        icon: <Shield className="w-4 h-4" />,
        color: 'from-red-500 to-orange-500'
      },
      { 
        name: 'Brain-Computer Interface', 
        href: '/brain-computer-interface-2040', 
        description: 'Neural interface technology',
        icon: <Brain className="w-4 h-4" />,
        color: 'from-pink-500 to-purple-500'
      },
      { 
        name: 'AI Autonomous Research 2041', 
        href: '/ai-autonomous-research-2041', 
        description: 'Autonomous AI research systems',
        icon: <Brain className="w-4 h-4" />,
        color: 'from-emerald-500 to-teal-500'
      },
      { 
        name: 'AI Content Personalization 2041', 
        href: '/ai-content-personalization-2041', 
        description: 'Conscious content personalization',
        icon: <Brain className="w-4 h-4" />,
        color: 'from-pink-500 to-purple-500'
      },
      { 
        name: 'AI Ethics & Governance 2041', 
        href: '/ai-ethics-governance-2041', 
        description: 'Ethical AI governance',
        icon: <Shield className="w-4 h-4" />,
        color: 'from-green-500 to-blue-500'
      },
      { 
        name: 'AI Autonomous Ecosystem 2041', 
        href: '/ai-autonomous-ecosystem-2041', 
        description: 'Autonomous AI ecosystems',
        icon: <Network className="w-4 h-4" />,
        color: 'from-indigo-500 to-purple-500'
      },
      { 
        name: 'AI Predictive Maintenance 2041', 
        href: '/ai-predictive-maintenance-2041', 
        description: 'Predictive maintenance AI',
        icon: <Wrench className="w-4 h-4" />,
        color: 'from-orange-500 to-red-500'
      },
      { 
        name: 'AI Customer Success 2041', 
        href: '/ai-customer-success-2041', 
        description: 'Customer success AI',
        icon: <Users className="w-4 h-4" />,
        color: 'from-blue-500 to-cyan-500'
      },
      { 
        name: 'AI Sales Intelligence 2041', 
        href: '/ai-sales-intelligence-2041', 
        description: 'Sales intelligence AI',
        icon: <TrendingUp className="w-4 h-4" />,
        color: 'from-emerald-500 to-teal-500'
      },
      { 
        name: 'Quantum Internet Security 2041', 
        href: '/quantum-internet-security-2041', 
        description: 'Quantum internet security',
        icon: <Shield className="w-4 h-4" />,
        color: 'from-red-500 to-orange-500'
      },
      { 
        name: 'Quantum Cloud Infrastructure 2041', 
        href: '/quantum-cloud-infrastructure-2041', 
        description: 'Quantum cloud infrastructure',
        icon: <Cloud className="w-4 h-4" />,
        color: 'from-cyan-500 to-blue-500'
      },
      { 
        name: 'Quantum Bio-Computing 2041', 
        href: '/quantum-bio-computing-2041', 
        description: 'Quantum bio-computing',
        icon: <Dna className="w-4 h-4" />,
        color: 'from-green-500 to-emerald-500'
      },
      { 
        name: 'Autonomous Vehicle AI 2040', 
        href: '/autonomous-vehicle-ai-2040', 
        description: 'Autonomous vehicle AI',
        icon: <Car className="w-4 h-4" />,
        color: 'from-blue-500 to-indigo-500'
      },
      { 
        name: 'Quantum Materials Discovery 2040', 
        href: '/quantum-materials-discovery-2040', 
        description: 'Quantum materials discovery',
        icon: <Atom className="w-4 h-4" />,
        color: 'from-purple-500 to-pink-500'
      },
      { 
        name: 'Quantum Financial Intelligence 2040', 
        href: '/quantum-financial-intelligence-2040', 
        description: 'Quantum financial intelligence',
        icon: <DollarSign className="w-4 h-4" />,
        color: 'from-yellow-500 to-orange-500'
      }
    ]
  },
  {
<<<<<<< HEAD
    label: 'AI Services',
    children: [
      {
        label: 'AI Consciousness',
        href: '/ai-consciousness-evolution-2029',
        icon: <Brain className="w-4 h-4" />,
        description: 'Revolutionary AI consciousness development',
        badge: 'Hot'
      },
      {
        label: 'AI & Machine Learning',
        href: '/ai-services',
        icon: <Brain className="w-4 h-4" />,
        description: 'Advanced AI solutions for enterprise',
        featured: true,
        badge: 'Hot'
      },
      {
        name: 'AI Autonomous Research 2041',
        href: '/ai-autonomous-research-2041',
        description: 'Fully autonomous AI research',
        icon: <CodeIcon className="w-4 h-4" />
      },
      {
        name: 'AI Content Personalization 2041',
        href: '/ai-content-personalization-2041',
        description: 'Consciousness-based content AI',
        icon: <PaletteIcon className="w-4 h-4" />
      },
      {
        name: 'AI Ethics & Governance 2041',
        href: '/ai-ethics-governance-2041',
        description: 'Comprehensive AI ethics framework',
        icon: <Shield className="w-4 h-4" />
      }
    ]
=======
    label: 'Solutions',
    children: [
      {
        label: 'Enterprise Solutions',
        href: '/solutions',
        icon: <Building className="w-4 h-4" />,
        description: 'Large-scale enterprise solutions'
      },
      {
        label: 'Startup Solutions',
        href: '/startup-solutions',
        icon: <Rocket className="w-4 h-4" />,
        description: 'Solutions for growing startups'
      },
      {
        label: 'Government Solutions',
        href: '/government-solutions',
        icon: <Shield className="w-4 h-4" />,
        description: 'Secure government solutions'
      },
      {
        label: 'Healthcare Solutions',
        href: '/healthcare-solutions',
        icon: <Heart className="w-4 h-4" />,
        description: 'Healthcare technology solutions'
      }
    ]
  },
  {
    label: 'About',
    href: '/about',
    icon: <Users className="w-4 h-4" />
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-1aec
  },
  {
    name: 'Innovative Services 2025',
    href: '/services',
    icon: <Sparkles className="w-5 h-5" />,
    description: 'Cutting-edge innovative technology solutions',
    badge: 'Innovative',
    category: 'innovative',
    color: 'from-yellow-500 to-orange-500',
    children: [
      {
        name: 'Cybersecurity & Threat Intelligence',
        href: '/services#cybersecurity-threat-intelligence',
        description: 'Advanced cybersecurity solutions',
        icon: <Shield className="w-4 h-4" />,
        featured: true
      },
      {
        name: 'Financial Technology & Fintech',
        href: '/services#financial-technology-fintech',
        description: 'Innovative financial solutions',
        icon: <DollarSign className="w-4 h-4" />
      },
      {
        name: 'Healthcare Technology & Healthtech',
        href: '/services#healthcare-technology-healthtech',
        description: 'Advanced healthcare solutions',
        icon: <Heart className="w-4 h-4" />
      },
      {
        name: 'Supply Chain & Logistics',
        href: '/services#supply-chain-logistics',
        description: 'Intelligent supply chain solutions',
        icon: <Network className="w-4 h-4" />
      },
      {
        name: 'Manufacturing & Industry 4.0',
        href: '/services#manufacturing-industry-40',
        description: 'Smart manufacturing solutions',
        icon: <Settings className="w-4 h-4" />
      },
      {
        name: 'Renewable Energy & Sustainability',
        href: '/services#renewable-energy-sustainability',
        description: 'Sustainable energy solutions',
        icon: <Zap className="w-4 h-4" />
      },
      {
        name: 'Education & Training',
        href: '/services#education-training',
        description: 'Innovative learning solutions',
        icon: <GraduationCap className="w-4 h-4" />
      },
      {
        name: 'Government & Public Sector',
        href: '/services#government-public-sector',
        description: 'Government technology solutions',
        icon: <Building className="w-4 h-4" />
      },
      {
        name: 'Transportation & Mobility',
        href: '/services#transportation-mobility',
        description: 'Smart transportation solutions',
        icon: <Globe className="w-4 h-4" />
      },
      {
        name: 'Retail & E-commerce',
        href: '/services#retail-e-commerce',
        description: 'Digital retail solutions',
        icon: <ShoppingCart className="w-4 h-4" />
      },
      {
        name: 'Entertainment & Media',
        href: '/services#entertainment-media',
        description: 'Digital entertainment solutions',
        icon: <Star className="w-4 h-4" />
      },
      {
        name: 'Gaming & Esports',
        href: '/services#gaming-esports',
        description: 'Advanced gaming solutions',
        icon: <Target className="w-4 h-4" />
      },
      {
        name: 'Real Estate & Property',
        href: '/services#real-estate-property',
        description: 'Property technology solutions',
        icon: <Building className="w-4 h-4" />
      },
      {
        name: 'Legal & Compliance',
        href: '/services#legal-compliance',
        description: 'Legal technology solutions',
        icon: <FileText className="w-4 h-4" />
      },
      {
        name: 'Agriculture & Food Technology',
        href: '/services#agriculture-food-technology',
        description: 'Agricultural technology solutions',
        icon: <Heart className="w-4 h-4" />
      },
      {
        name: 'Hospitality & Tourism',
        href: '/services#hospitality-tourism',
        description: 'Hospitality technology solutions',
        icon: <Globe className="w-4 h-4" />
      },
      {
        name: 'Sports & Fitness',
        href: '/services#sports-fitness',
        description: 'Sports technology solutions',
        icon: <Target className="w-4 h-4" />
      },
      {
        name: 'Environmental & Sustainability',
        href: '/services#environmental-sustainability',
        description: 'Environmental technology solutions',
        icon: <Zap className="w-4 h-4" />
      },
      {
        name: 'Research & Development',
        href: '/services#research-development',
        description: 'Research technology solutions',
        icon: <Code className="w-4 h-4" />
      },
      {
        name: 'Biotechnology & Life Sciences',
        href: '/services#biotechnology-life-sciences',
        description: 'Biotechnology solutions',
        icon: <Heart className="w-4 h-4" />
      },
      {
        name: 'Nanotechnology & Materials',
        href: '/services#nanotechnology-materials',
        description: 'Nanotechnology solutions',
        icon: <Atom className="w-4 h-4" />
      },
      {
        name: 'Robotics & Automation',
        href: '/services#robotics-automation',
        description: 'Robotics solutions',
        icon: <Settings className="w-4 h-4" />
      },
      {
        name: 'Blockchain & Web3',
        href: '/services#blockchain-web3',
        description: 'Blockchain technology solutions',
        icon: <Network className="w-4 h-4" />
      },
      {
        name: 'Internet of Things (IoT)',
        href: '/services#internet-of-things-iot',
        description: 'IoT technology solutions',
        icon: <Layers className="w-4 h-4" />
      },
      {
        name: 'Augmented Reality & Virtual Reality',
        href: '/services#augmented-reality-virtual-reality',
        description: 'AR/VR technology solutions',
        icon: <Eye className="w-4 h-4" />
      },
      {
        name: 'Edge Computing & 5G',
        href: '/services#edge-computing-5g',
        description: 'Edge computing solutions',
        icon: <Cpu className="w-4 h-4" />
      }
    ]
  },
  {
    name: 'Quantum Technology',
    href: '/quantum-services',
    icon: <Atom className="w-5 h-5" />,
    description: 'Quantum computing solutions',
    badge: 'Quantum',
    category: 'quantum',
    color: 'from-blue-500 to-cyan-500',
    children: [
      {
        name: 'Quantum Neural Ecosystem 2040',
        href: '/quantum-neural-ecosystem-2040',
        description: 'Quantum-powered neural networks',
        icon: <Atom className="w-4 h-4" />,
        description: 'Next-generation quantum solutions',
        featured: true,
        badge: 'New'
      },
      {
        label: 'Space Technology',
        href: '/space-tech',
        icon: <Satellite className="w-4 h-4" />,
        description: 'Innovative space solutions',
        featured: true
      },
      {
        label: 'Cybersecurity',
        href: '/cybersecurity',
        icon: <Shield className="w-4 h-4" />,
        description: 'Enterprise security solutions',
        featured: true
      },
      {
        label: 'Cloud Solutions',
        href: '/cloud-platform',
        icon: <Cloud className="w-4 h-4" />,
        description: 'Scalable cloud infrastructure',
        featured: true
      },
      {
        label: 'Micro SaaS',
        href: '/micro-saas',
        icon: <Layers className="w-4 h-4" />,
        description: 'Rapid deployment SaaS solutions',
        featured: true
      },
      {
        label: 'IT Infrastructure',
        href: '/it-services',
        icon: <Server className="w-4 h-4" />,
        description: 'Complete IT infrastructure solutions'
      },
      {
        label: 'Data Analytics',
        href: '/data-analytics',
        icon: <BarChart3 className="w-4 h-4" />,
        description: 'Advanced analytics and insights'
      },
      {
        label: 'DevOps & Automation',
        href: '/devops-automation',
        icon: <Command className="w-4 h-4" />,
        description: 'Automated development and operations'
      },
      {
        label: 'Edge Computing',
        href: '/edge-computing-orchestration-platform',
        icon: <Server className="w-4 h-4" />,
        description: 'Distributed computing solutions',
        badge: 'Scalable'
      }
    ]
  },
  {
    label: 'Micro SAAS',
    children: [
      {
        label: 'Enterprise IT',
        href: '/enterprise-solutions-showcase',
        icon: <Globe className="w-4 h-4" />,
        description: 'Complete enterprise IT solutions',
        featured: true
      },
      {
        label: 'Healthcare',
        href: '/healthcare-solutions',
        icon: <Heart className="w-4 h-4" />,
        description: 'Healthcare technology solutions',
        featured: true
      },
      {
        label: 'Financial Services',
        href: '/financial-solutions',
        icon: <BarChart3 className="w-4 h-4" />,
        description: 'Fintech and banking solutions',
        featured: true
      },
      {
        label: 'Manufacturing',
        href: '/manufacturing-ai-solutions',
        icon: <Cpu className="w-4 h-4" />,
        description: 'Smart manufacturing solutions'
      }
    ]
  },
  {
    label: 'Company',
    children: [
      {
        label: 'About Us',
        href: '/about',
        icon: <Users className="w-4 h-4" />,
        description: 'Learn about our mission and team'
      },
      {
        label: 'Careers',
        href: '/careers',
        icon: <Star className="w-4 h-4" />,
        description: 'Join our innovative team'
      },
      {
        label: 'News & Updates',
        href: '/news',
        icon: <Globe className="w-4 h-4" />,
        description: 'Latest company news and updates'
      }
    ]
  },
  {
    name: 'About',
    href: '/about',
    icon: <Target className="w-5 h-5" />,
    description: 'Learn about Zion Tech Group',
    category: 'about',
    color: 'from-blue-500 to-indigo-500'
  },
  {
    name: 'Contact',
    href: '/contact',
    icon: <Mail className="w-5 h-5" />,
    description: 'Get in touch with our team',
    category: 'contact',
    color: 'from-pink-500 to-purple-500'
  }
];

const UltraFuturisticNavigation2040: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);
  const [isDarkMode, setIsDarkMode] = useState(true);
  const [searchQuery, setSearchQuery] = useState('');
  const [isSearchOpen, setIsSearchOpen] = useState(false);
  const router = useRouter();
  const navRef = useRef<HTMLElement>(null);

  // Close mobile menu when route changes
  useEffect(() => {
    setIsOpen(false);
    setActiveDropdown(null);
  }, [router.asPath]);

  // Handle click outside to close dropdowns
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (navRef.current && !navRef.current.contains(event.target as Node)) {
        setActiveDropdown(null);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

  // Handle keyboard navigation
  const handleKeyDown = (event: React.KeyboardEvent, action: () => void) => {
    if (event.key === 'Enter' || event.key === ' ') {
      event.preventDefault();
      action();
    }
  };

  const toggleTheme = () => {
    setIsDarkMode(!isDarkMode);
    // Add theme persistence logic here
  };

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      router.push(`/search?q=${encodeURIComponent(searchQuery.trim())}`);
      setIsSearchOpen(false);
      setSearchQuery('');
    }
  };

  const handleSearchResultClick = (url: string) => {
    router.push(url);
    setShowSearch(false);
    setSearchQuery('');
    setSearchResults([]);
  };

  return (
    <nav 
      ref={navRef}
      className="fixed top-0 left-0 right-0 z-50 bg-black/80 backdrop-blur-md border-b border-gray-800/50"
      role="navigation"
      aria-label="Main navigation"
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-16 lg:h-20">
          {/* Logo */}
          <div className="flex-shrink-0">
            <Link href="/" className="flex items-center space-x-2" aria-label="Zion Tech Group Home">
              <div className="w-10 h-10 bg-gradient-to-r from-cyan-500 to-purple-600 rounded-lg flex items-center justify-center">
                <Zap className="w-6 h-6 text-white" aria-hidden="true" />
              </div>
              <span className="text-xl font-bold bg-gradient-to-r from-cyan-400 to-purple-600 bg-clip-text text-transparent">
                Zion Tech Group
              </span>
            </Link>
          </div>

          {/* Desktop Navigation */}
          <div className="hidden lg:flex lg:items-center lg:space-x-8">
            {navigationItems.map((item) => (
              <div key={item.label} className="relative">
                {item.children ? (
                  <div>
                    <button
                      onClick={() => toggleDropdown(item.label)}
                      onKeyDown={(e) => handleKeyDown(e, () => toggleDropdown(item.label))}
                      className="flex items-center space-x-1 px-3 py-2 text-gray-300 hover:text-white transition-colors duration-200 rounded-md hover:bg-gray-800/50 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2 focus:ring-offset-black"
                      aria-expanded={activeDropdown === item.label}
                      aria-haspopup="true"
                    >
                      <span>{item.label}</span>
                      <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${activeDropdown === item.label ? 'rotate-180' : ''}`} />
                    </button>

                    <AnimatePresence>
                      {activeDropdown === item.label && (
                        <motion.div
                          initial={{ opacity: 0, y: -10, scale: 0.95 }}
                          animate={{ opacity: 1, y: 0, scale: 1 }}
                          exit={{ opacity: 0, y: -10, scale: 0.95 }}
                          transition={{ duration: 0.2 }}
                          className="absolute top-full left-0 mt-2 w-80 bg-gray-900/95 backdrop-blur-md border border-gray-700/50 rounded-xl shadow-2xl shadow-black/50"
                          role="menu"
                        >
                          <div className="p-4 space-y-2">
                            {item.children.map((child) => (
                              <Link
                                key={child.label}
                                href={child.href || '#'}
                                className="flex items-start space-x-3 p-3 rounded-lg hover:bg-gray-800/50 transition-colors duration-200 group"
                                role="menuitem"
                              >
                                <div className="flex-shrink-0 w-8 h-8 bg-gray-800/50 rounded-lg flex items-center justify-center group-hover:bg-cyan-500/20 transition-colors duration-200">
                                  {child.icon}
                                </div>
                                <div className="flex-1 min-w-0">
                                  <div className="flex items-center space-x-2">
                                    <p className="text-sm font-medium text-white group-hover:text-cyan-400 transition-colors duration-200">
                                      {child.label}
                                    </p>
                                    {child.badge && (
                                      <span className="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-cyan-500/20 text-cyan-400">
                                        {child.badge}
                                      </span>
                                    )}
                                  </div>
                                  {child.description && (
                                    <p className="text-xs text-gray-400 mt-1">
                                      {child.description}
                                    </p>
                                  )}
                                </div>
                              </Link>
                            ))}
                          </div>
                        </motion.div>
                      )}
                    </AnimatePresence>
                  </div>
                ) : (
                  <Link
                    href={item.href || '#'}
                    className="px-3 py-2 text-gray-300 hover:text-white transition-colors duration-200 rounded-md hover:bg-gray-800/50 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2 focus:ring-offset-black"
                  >
                    {item.label}
                  </Link>
                )}
              </div>
            ))}
          </div>

          {/* Right side actions */}
          <div className="hidden lg:flex lg:items-center lg:space-x-4">
            {/* Search */}
            <button
              onClick={() => setIsSearchOpen(!isSearchOpen)}
              className="p-2 text-gray-400 hover:text-white transition-colors duration-200 rounded-md hover:bg-gray-800/50 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2 focus:ring-offset-black"
              aria-label="Open search"
            >
              <Search className="w-5 h-5" />
            </button>

            {/* Notifications */}
            <button className="p-2 text-gray-400 hover:text-white transition-colors duration-200 rounded-md hover:bg-gray-800/50 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2 focus:ring-offset-black">
              <Bell className="w-5 h-5" />
              <span className="sr-only">Notifications</span>
            </button>

            {/* Theme Toggle */}
            <button
              onClick={toggleTheme}
              className="p-2 text-gray-400 hover:text-white transition-colors duration-200 rounded-md hover:bg-gray-800/50 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2 focus:ring-offset-black"
              aria-label={`Switch to ${isDarkMode ? 'light' : 'dark'} mode`}
            >
              {isDarkMode ? <Sun className="w-5 h-5" /> : <Moon className="w-5 h-5" />}
            </button>

            {/* User Menu */}
            <button className="p-2 text-gray-400 hover:text-white transition-colors duration-200 rounded-md hover:bg-gray-800/50 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2 focus:ring-offset-black">
              <User className="w-5 h-5" />
              <span className="sr-only">User menu</span>
            </button>

            {/* CTA Button */}
            <Link href="/get-started">
              <button className="px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-semibold rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-300 transform hover:scale-105 shadow-lg shadow-cyan-500/25 focus:outline-none focus:ring-2 focus:ring-cyan-300 focus:ring-offset-2 focus:ring-offset-black">
                Get Started
              </button>
            </Link>
          </div>

          {/* Mobile menu button */}
          <div className="lg:hidden">
            <button
              onClick={() => setIsOpen(!isOpen)}
              className="p-2 text-gray-400 hover:text-white transition-colors duration-200 rounded-md hover:bg-gray-800/50 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2 focus:ring-offset-black"
              aria-expanded={isOpen}
              aria-label="Toggle mobile menu"
            >
              {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>
        </div>
      </div>

      {/* Search Overlay */}
      <AnimatePresence>
        {showSearch && (
          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            className="absolute top-full left-0 right-0 bg-gray-900/95 backdrop-blur-md border-b border-gray-700/50 p-4"
          >
            <form onSubmit={handleSearch} className="max-w-2xl mx-auto">
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                <input
                  type="text"
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  placeholder="Search for services, solutions, or resources..."
                  className="w-full pl-10 pr-4 py-3 bg-gray-800/50 border border-gray-700/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent"
                  autoFocus
                />
                <button
                  type="submit"
                  className="absolute right-3 top-1/2 transform -translate-y-1/2 px-4 py-1 bg-cyan-500 text-white rounded-md hover:bg-cyan-600 transition-colors duration-200"
                >
                  Search
                </button>
              </div>
            </form>
          </motion.div>
        )}
      </AnimatePresence>

      {/* Mobile Navigation */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            className="lg:hidden bg-gray-900/95 backdrop-blur-md border-b border-gray-700/50"
          >
            <div className="px-4 py-6 space-y-4">
              {/* Mobile Search */}
              <form onSubmit={handleSearch} className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                <input
                  type="text"
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  placeholder="Search..."
                  className="w-full pl-10 pr-4 py-3 bg-gray-800/50 border border-gray-700/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent"
                />
              </form>

              {/* Mobile Menu Items */}
              <div className="space-y-2">
                {navigationItems.map((item) => (
                  <div key={item.label}>
                    {item.children ? (
                      <div>
                        <button
                          onClick={() => toggleDropdown(item.label)}
                          className="w-full flex items-center justify-between px-3 py-2 text-left text-gray-300 hover:text-white transition-colors duration-200 rounded-md hover:bg-gray-800/50"
                        >
                          <span>{item.label}</span>
                          <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${activeDropdown === item.label ? 'rotate-180' : ''}`} />
                        </button>
                        {activeDropdown === item.label && (
                          <div className="ml-4 mt-2 space-y-1">
                            {item.children.map((child) => (
                              <Link
                                key={child.label}
                                href={child.href || '#'}
                                className="block px-3 py-2 text-gray-400 hover:text-white transition-colors duration-200 rounded-md hover:bg-gray-800/50"
                              >
                                {child.label}
                              </Link>
                            ))}
                          </div>
                        )}
                      </div>
                    ) : (
                      <Link
                        href={item.href || '#'}
                        className="block px-3 py-2 text-gray-300 hover:text-white transition-colors duration-200 rounded-md hover:bg-gray-800/50"
                      >
                        {item.label}
                      </Link>
                    )}
                  </div>
                ))}
              </div>

              {/* Mobile CTA */}
              <div className="pt-4 border-t border-gray-700/50">
                <Link href="/get-started" className="block w-full text-center px-4 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-semibold rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-300">
                  Get Started
                </Link>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </nav>
  );
};

                  {/* Dropdown Menu */}
                  {item.children && activeDropdown === item.label && (
                    <div
                      onMouseEnter={() => setActiveDropdown(item.label)}
                      onMouseLeave={() => setActiveDropdown(null)}
                      className="absolute top-full left-0 mt-2 w-80 bg-gray-900/95 backdrop-blur-md border border-gray-700 rounded-xl shadow-2xl"
                    >
                      <div className="p-4 space-y-3">
                        {item.children.map((child) => (
                          <Link
                            key={child.label}
                            href={child.href || '#'}
                            className="flex items-start space-x-3 p-3 rounded-lg hover:bg-gray-800/50 transition-colors group"
                            onClick={closeAllDropdowns}
                          >
                            <div className="w-8 h-8 bg-gray-800 rounded-lg flex items-center justify-center group-hover:bg-cyan-500/20 transition-colors">
                              {child.icon}
                            </div>
                            <div className="flex-1">
                              <div className="text-white font-medium group-hover:text-cyan-400 transition-colors">
                                {child.label}
                              </div>
                              <div className="text-sm text-gray-400 mt-1">
                                {child.description}
                              </div>
                            </div>
                          </Link>
                        ))}
                      </div>
                    </div>
                  )}
                </div>
              ))}
            </div>

            {/* Right Side Actions */}
            <div className="hidden lg:flex items-center space-x-4">
              {/* Search Button */}
              <button
                onClick={() => setShowSearch(true)}
                className="p-2 text-gray-400 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
                aria-label="Search"
              >
                <Search className="w-5 h-5" />
              </button>

              {/* Contact Button */}
              <Link
                href="/contact"
                className="px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-medium rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-300 transform hover:scale-105"
                onClick={closeAllDropdowns}
              >
                Get Started
              </Link>
            </div>

            {/* Mobile Menu Button */}
            <button
              onClick={() => setIsOpen(!isOpen)}
              className="lg:hidden p-2 text-gray-400 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
              aria-label="Toggle mobile menu"
            >
              {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>
        </div>

        {/* Mobile Navigation */}
        <AnimatePresence>
          {isOpen && (
            <motion.div
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: 'auto' }}
              exit={{ opacity: 0, height: 0 }}
              className="lg:hidden bg-gray-900/95 backdrop-blur-md border-t border-gray-800/50"
            >
              <div className="px-4 py-6 space-y-4">
                {/* Mobile Search */}
                <div className="relative">
                  <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                  <input
                    type="text"
                    placeholder="Search..."
                    className="w-full pl-10 pr-4 py-3 bg-gray-800 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-500"
                  />
                </div>

                {/* Mobile Menu Items */}
                {navigationItems.map((item) => (
                  <div key={item.label}>
                    {item.children ? (
                      <div>
                        <button
                          onClick={() => toggleDropdown(item.label)}
                          className="w-full flex items-center justify-between px-3 py-3 text-left text-gray-300 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
                        >
                          <span>{item.label}</span>
                          <ChevronDown className={`w-4 h-4 transition-transform ${activeDropdown === item.label ? 'rotate-180' : ''}`} />
                        </button>
                        {activeDropdown === item.label && (
                          <div className="ml-4 mt-2 space-y-2">
                            {item.children.map((child) => (
                              <Link
                                key={child.label}
                                href={child.href || '#'}
                                className="block px-3 py-2 text-gray-400 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
                                onClick={closeAllDropdowns}
                              >
                                {child.label}
                              </Link>
                            ))}
                          </div>
                        )}
                      </div>
                    ) : (
                      <Link
                        href={item.href || '#'}
                        className="block px-3 py-3 text-gray-300 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
                        onClick={closeAllDropdowns}
                      >
                        {item.label}
                      </Link>
                    )}
                  </div>
                ))}

                {/* Mobile Contact Button */}
                <Link
                  href="/contact"
                  className="block w-full px-4 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-medium text-center rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-300"
                  onClick={closeAllDropdowns}
                >
                  Get Started
                </Link>
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </nav>
    </>
  );
}