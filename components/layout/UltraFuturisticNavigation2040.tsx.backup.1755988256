<<<<<<< HEAD
import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';
=======
import React, { useState, useEffect, useRef, useCallback } from 'react';
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
import Link from 'next/link';
import { motion, AnimatePresence } from 'framer-motion';
import { 
<<<<<<< HEAD
  Menu, X, ChevronDown, Zap, Globe, Lock,
  Phone, Mail, ArrowRight, Star, Users, Award,
  Rocket, Brain, Cpu, Database, Cloud,
  ArrowUpRight, Search as SearchIcon, Bell
=======
  Menu, X, Search, ChevronDown, Zap, Globe, Lock, 
  Phone, Mail, MapPin, ArrowRight, Star, Users, Award,
  ChevronUp, ExternalLink, Home, Briefcase, BookOpen, Building
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
} from 'lucide-react';
import EnhancedSearch from '../EnhancedSearch';

interface NavigationItem {
  label: string;
  href: string;
  icon: React.ReactNode;
  description?: string;
  badge?: string;
  isNew?: boolean;
  isPopular?: boolean;
}

interface UltraFuturisticNavigation2040Props {
  onMenuToggle?: () => void;
  isSidebarOpen?: boolean;
}

function normalizeHref(href: string): string {
  if (!href) return href;
  if (href.startsWith('http://') || href.startsWith('https://') || href.startsWith('mailto:') || href.startsWith('tel:')) {
    return href;
  }
  if (!href.startsWith('/')) return href;
  const hasQueryOrHash = href.includes('?') || href.includes('#');
  if (hasQueryOrHash) return href;
  return href.endsWith('/') ? href : href + '/';
}

// Memoized navigation items for better performance
const navigationItems: NavigationItem[] = [
  {
    label: 'Home',
    href: '/',
<<<<<<< HEAD
    icon: <Home className="w-4 h-4" />,
    neonColor: 'shadow-cyan-400/50'
=======
    icon: <Home className="w-4 h-4" />
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
  },
  {
    name: 'Quantum Computing',
    href: '/quantum-services',
    icon: <Atom className="w-5 h-5" />,
    description: 'Next-generation quantum computing solutions',
    badge: 'Quantum',
    children: [
      { name: 'Quantum Machine Learning', href: '/quantum-machine-learning-platform', description: 'Unlock quantum advantage in ML', featured: true },
      { name: 'Quantum-Secure Cloud', href: '/quantum-secure-cloud-infrastructure', description: 'Future-proof security with quantum encryption' },
      { name: 'Quantum Internet Security', href: '/quantum-internet-security-platform', description: 'Secure the future of the internet' },
      { name: 'Quantum Financial Trading', href: '/quantum-financial-trading-platform', description: 'Quantum advantage in financial markets' },
      { name: 'Quantum Materials Discovery', href: '/quantum-materials-discovery-platform', description: 'Discover new materials with quantum computing' },
      { name: 'Quantum Neural Networks', href: '/quantum-neural-network-platform', description: 'Advanced quantum neural computing' }
    ]
  },
  {
    name: 'Emerging Technologies',
    href: '/emerging-tech',
    icon: <Rocket className="w-5 h-5" />,
    description: 'Cutting-edge emerging technology solutions',
    badge: 'Future',
    children: [
      { name: 'Metaverse Development', href: '/metaverse-development-platform', description: 'Build immersive virtual worlds', featured: true },
      { name: 'Space Technology AI', href: '/space-technology-ai-platform', description: 'AI-powered space exploration' },
      { name: 'Brain-Computer Interface', href: '/brain-computer-interface-platform', description: 'Revolutionary neural interface technology' },
      { name: 'Autonomous Vehicles', href: '/autonomous-vehicle-ai-platform', description: 'AI-powered autonomous vehicle technology' },
      { name: 'Synthetic Biology', href: '/synthetic-biology-platform', description: 'Design and engineer biological systems' },
      { name: 'Digital Twin Platform', href: '/digital-twin-platform', description: 'Create virtual replicas of physical systems' }
    ]
  },
  {
    name: 'Enterprise Solutions',
    href: '/enterprise',
    icon: <Building className="w-5 h-5" />,
    description: 'Advanced enterprise infrastructure solutions',
    badge: 'Enterprise',
    children: [
      { name: 'Autonomous DevOps', href: '/autonomous-devops-platform', description: 'Self-healing infrastructure with AI', featured: true },
      { name: 'Edge Computing Orchestration', href: '/edge-computing-orchestration', description: 'Manage distributed edge infrastructure' },
      { name: 'AI-Powered Cybersecurity', href: '/ai-powered-cybersecurity-platform', description: 'Intelligent threat detection and response' },
      { name: 'Blockchain Identity Management', href: '/blockchain-identity-management', description: 'Secure, decentralized identity verification' },
      { name: 'Supply Chain Optimization', href: '/ai-supply-chain-optimization', description: 'Optimize supply chain with intelligent AI' },
      { name: 'Manufacturing AI', href: '/ai-manufacturing-platform', description: 'Optimize manufacturing with AI' }
    ]
  },
  {
    name: 'Micro SAAS',
    href: '/micro-saas',
    icon: <Zap className="w-5 h-5" />,
    description: 'Innovative business solutions for modern enterprises',
    badge: 'SAAS',
    children: [
      { name: 'Pricing Calculator', href: '/pricing-calculator', description: 'Interactive pricing tool', featured: true },
      { name: 'Service Comparison', href: '/service-comparison', description: 'Compare services side by side', featured: true },
      { name: 'Micro SAAS Platform', href: '/micro-saas-platform', description: 'Scalable SAAS solutions' },
      { name: 'Subscription Management', href: '/subscription-management', description: 'Handle recurring billing' }
    ]
  },
  {
    name: 'All Services',
    href: '/services',
    icon: <Briefcase className="w-4 h-4" />,
    description: 'Explore our comprehensive technology solutions',
    badge: 'New',
    neonColor: 'shadow-blue-400/50',
    children: [
      {
        label: 'AI & Machine Learning',
        href: '/ai-services',
        icon: <Brain className="w-4 h-4" />,
        description: 'Advanced AI solutions for enterprise',
        isPopular: true
      },
      {
        label: 'Quantum Computing',
        href: '/quantum-services',
        icon: <Cpu className="w-4 h-4" />,
        description: 'Next-generation quantum solutions',
        isNew: true
      },
      {
        label: 'Space Technology',
        href: '/space-tech',
        icon: <Rocket className="w-4 h-4" />,
        description: 'Innovative space solutions',
        isNew: true
      },
      {
        label: 'Cybersecurity',
        href: '/cybersecurity',
        icon: <Lock className="w-4 h-4" />,
        description: 'Enterprise security solutions',
        isPopular: true
      },
      {
        label: 'Cloud Solutions',
        href: '/cloud-platform',
        icon: <Cloud className="w-4 h-4" />,
        description: 'Scalable cloud infrastructure'
      },
      {
        label: 'Micro SaaS',
        href: '/micro-saas',
        icon: <Star className="w-4 h-4" />,
        description: 'Rapid deployment SaaS solutions'
      },
      {
        label: 'View All Services',
        href: '/services',
        icon: <ArrowRight className="w-4 h-4" />,
        description: 'Complete service portfolio',
        badge: '500+'
      }
    ]
  },
  {
    label: 'Solutions',
    href: '/solutions',
    icon: <Target className="w-4 h-4" />,
    description: 'Industry-specific technology solutions',
    neonColor: 'shadow-green-400/50',
    children: [
      {
        label: 'Enterprise Solutions',
        href: '/solutions/enterprise',
        icon: <Building className="w-4 h-4" />,
        description: 'Large-scale enterprise solutions',
        neonColor: 'shadow-blue-400/50'
      },
      {
        label: 'Startup Solutions',
        href: '/solutions/startup',
        icon: <Rocket className="w-4 h-4" />,
        description: 'Growth-focused startup solutions',
        neonColor: 'shadow-purple-400/50'
      },
      {
        label: 'Government Solutions',
        href: '/solutions/government',
        icon: <Shield className="w-4 h-4" />,
        description: 'Secure government technology',
        neonColor: 'shadow-green-400/50'
      }
    ]
  },
  {
    label: 'Company',
    children: [
      {
        label: 'About Us',
        href: '/about',
<<<<<<< HEAD
        icon: <Users className="w-4 h-4" />,
        description: 'Learn about our mission and team'
=======
        icon: <Building className="w-4 h-4" />,
        description: 'Our story and mission'
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
      },
      {
        label: 'Careers',
        href: '/careers',
<<<<<<< HEAD
        icon: <Star className="w-4 h-4" />,
        description: 'Join our innovative team',
        badge: '20+'
=======
        icon: <Briefcase className="w-4 h-4" />,
        description: 'Join our team'
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
      },
      {
        label: 'News & Updates',
        href: '/news',
        icon: <Bell className="w-4 h-4" />,
        description: 'Latest company news and insights'
      },
      {
        label: 'Contact',
        href: '/contact',
        icon: <Mail className="w-4 h-4" />,
        description: 'Get in touch with our team'
      }
    ]
  },
  {
    label: 'Resources',
    children: [
      {
        label: 'Documentation',
        href: '/docs',
        icon: <Database className="w-4 h-4" />,
        description: 'Technical documentation and guides'
      },
      {
        label: 'Blog',
        href: '/blog',
        icon: <Star className="w-4 h-4" />,
        description: 'Insights and industry trends'
      },
      {
        label: 'Case Studies',
        href: '/case-studies',
        icon: <Award className="w-4 h-4" />,
        description: 'Success stories from our clients'
      },
      {
        label: 'Webinars',
        href: '/webinars',
        icon: <Globe className="w-4 h-4" />,
        description: 'Educational webinars and events'
      }
    ]
  }
];

const UltraFuturisticNavigation2040: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);
  const [searchQuery, setSearchQuery] = useState('');
<<<<<<< HEAD
  const [isSearchOpen, setIsSearchOpen] = useState(false);
  const [isScrolled, setIsScrolled] = useState(false);
=======
  const [isSearchFocused, setIsSearchFocused] = useState(false);
  
  const mobileMenuRef = useRef<HTMLDivElement>(null);
  const searchRef = useRef<HTMLDivElement>(null);
  const searchInputRef = useRef<HTMLInputElement>(null);
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
  const router = useRouter();
  const searchRef = useRef<HTMLDivElement>(null);

<<<<<<< HEAD
  // Memoized animation variants for better performance
  const navVariants = useMemo(() => ({
    hidden: { y: -100, opacity: 0 },
    visible: { y: 0, opacity: 1 }
  }), []);

  const dropdownVariants = useMemo(() => ({
    hidden: { opacity: 0, y: -10, scale: 0.95 },
    visible: { opacity: 1, y: 0, scale: 1 }
  }), []);

  // Optimized scroll handling
  const handleScroll = useCallback(() => {
    setIsScrolled(window.scrollY > 20);
  }, []);

  // Dark mode effect
  useEffect(() => {
    const savedMode = localStorage.getItem('dark-mode');
    if (savedMode !== null) {
      setIsDarkMode(savedMode === 'true');
    }
  }, []);

  // Handle click outside search
  useEffect(() => {
    localStorage.setItem('dark-mode', isDarkMode.toString());
    if (isDarkMode) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }, [isDarkMode]);

  const toggleDropdown = (name: string) => {
    setActiveDropdown(activeDropdown === name ? null : name);
  };

  // Close mobile menu when route changes
  useEffect(() => {
    setIsMobileMenuOpen(false);
    setActiveDropdown(null);
  }, [router.asPath]);

  // Close dropdowns when clicking outside
=======
  // Handle scroll effect with throttling
  useEffect(() => {
    let ticking = false;
    const handleScroll = () => {
      if (!ticking) {
        requestAnimationFrame(() => {
          setIsScrolled(window.scrollY > 20);
          ticking = false;
        });
        ticking = true;
      }
    };

    window.addEventListener('scroll', handleScroll, { passive: true });
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Enhanced click outside handling
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (searchRef.current && !searchRef.current.contains(event.target as Node)) {
        setIsSearchOpen(false);
        setIsSearchFocused(false);
      }
<<<<<<< HEAD
=======
      if (mobileMenuRef.current && !mobileMenuRef.current.contains(event.target as HTMLElement)) {
        setIsMobileMenuOpen(false);
      }
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

<<<<<<< HEAD
  // Handle search
  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
=======
  // Close mobile menu on route change
  useEffect(() => {
    const handleRouteChange = () => {
      setIsMobileMenuOpen(false);
      setActiveDropdown(null);
    };

    router.events.on('routeChangeStart', handleRouteChange);
    return () => router.events.off('routeChangeStart', handleRouteChange);
  }, [router]);

  // Enhanced search functionality
  const handleSearch = useCallback((query: string) => {
    setSearchQuery(query);
    if (query.length > 2) {
      // Implement search logic here
      console.log('Searching for:', query);
    }
  }, []);

  // Enhanced mobile menu toggle
  const toggleMobileMenu = useCallback(() => {
    setIsMobileMenuOpen(prev => !prev);
    setActiveDropdown(null);
  }, []);

  // Enhanced dropdown toggle
  const toggleDropdown = useCallback((label: string) => {
    setActiveDropdown(prev => prev === label ? null : label);
  }, []);

  // Check if current route is active
  const isActive = useCallback((href: string) => {
    return router.pathname === href;
  }, [router.pathname]);

  // Enhanced search submit
  const handleSearchSubmit = useCallback((e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      // Implement search navigation
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
      router.push(`/search?q=${encodeURIComponent(searchQuery.trim())}`);
      setIsSearchOpen(false);
      setSearchQuery('');
    }
  }, [searchQuery, router]);

<<<<<<< HEAD
  // Handle navigation item click
  const handleNavItemClick = (item: NavigationItem) => {
    if (item.href) {
      router.push(item.href);
      setIsOpen(false);
      setActiveDropdown(null);
    }
  };

  // Enhanced dropdown animations
  const dropdownVariants = {
    hidden: { 
      opacity: 0, 
      y: -20, 
      scale: 0.95,
      filter: 'blur(10px)'
    },
    visible: { 
      opacity: 1, 
      y: 0, 
      scale: 1,
      filter: 'blur(0px)',
      transition: {
        duration: 0.3,
        ease: "easeOut" as const
      }
    },
    exit: { 
      opacity: 0, 
      y: -20, 
      scale: 0.95,
      filter: 'blur(10px)',
      transition: {
        duration: 0.2,
        ease: "easeIn" as const
      }
    }
  };

  return (
    <nav className={`fixed top-0 left-0 right-0 z-50 transition-all duration-500 ${
      isScrolled 
        ? 'bg-black/95 backdrop-blur-xl border-b border-white/10 shadow-2xl' 
        : 'bg-transparent'
    }`}>
=======
  // Focus search input when search opens
  useEffect(() => {
    if (isSearchOpen && searchInputRef.current) {
      setTimeout(() => searchInputRef.current?.focus(), 100);
    }
  }, [isSearchOpen]);

  return (
    <nav 
      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
        isScrolled 
          ? 'bg-gray-900/95 backdrop-blur-md border-b border-gray-700/50 shadow-2xl' 
          : 'bg-transparent'
      }`}
      role="navigation"
      aria-label="Main navigation"
    >
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-20">
          {/* Logo */}
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.5 }}
            className="flex-shrink-0"
          >
<<<<<<< HEAD
            <Link href="/" className="flex items-center space-x-3 group">
              <div className="relative">
                <div className="w-10 h-10 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                  <Zap className="w-6 h-6 text-white" />
                </div>
                <div className="absolute inset-0 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-xl blur-lg opacity-50 group-hover:opacity-75 transition-opacity duration-300"></div>
              </div>
              <div className="hidden sm:block">
                <span className="text-2xl font-bold bg-gradient-to-r from-cyan-400 to-blue-500 bg-clip-text text-transparent">
                  Zion Tech Group
=======
            <Link href="/" className="flex items-center space-x-2 group" aria-label="Zion Tech Group Home">
              <div className="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                <Zap className="w-6 h-6 lg:w-7 lg:h-7 text-white" />
              </div>
              <div className="hidden sm:block">
                <span className="text-xl lg:text-2xl font-bold bg-gradient-to-r from-cyan-400 to-blue-500 bg-clip-text text-transparent">
                  Zion Tech
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
                </span>
              </div>
            </div>
          </Link>

          {/* Desktop Navigation */}
<<<<<<< HEAD
          <div className="hidden lg:flex items-center space-x-8">
            {navigationItems.map((item) => (
              <div key={item.label} className="relative group">
                <button
                  onClick={() => setActiveDropdown(activeDropdown === item.label ? null : item.label)}
                  className="flex items-center space-x-2 px-4 py-2 text-white hover:text-cyan-400 transition-colors duration-300 font-medium"
                >
                  {item.icon}
                  <span>{item.label}</span>
                  {item.children && (
                    <ChevronDown className={`w-4 h-4 transition-transform duration-300 ${
                      activeDropdown === item.label ? 'rotate-180' : ''
                    }`} />
                  )}
                </button>

                {/* Enhanced Dropdown */}
                {item.children && (
                  <AnimatePresence>
                    {activeDropdown === item.label && (
                      <motion.div
                        variants={dropdownVariants}
                        initial="hidden"
                        animate="visible"
                        exit="exit"
                        className="absolute top-full left-0 mt-2 w-80 bg-black/95 backdrop-blur-xl border border-white/10 rounded-2xl shadow-2xl overflow-hidden"
                      >
                        <div className="p-6">
                          <div className="grid gap-4">
                            {item.children.map((child, index) => (
                              <motion.div
                                key={child.label}
                                initial={{ opacity: 0, x: -20 }}
                                animate={{ opacity: 1, x: 0 }}
                                transition={{ delay: index * 0.05 }}
                                className="group/item"
=======
          <div className="hidden lg:flex items-center space-x-1">
            {navigationItems.map((item, index) => (
              <motion.div
                key={item.label}
                initial={{ opacity: 0, y: -20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.3, delay: index * 0.1 }}
                className="relative"
              >
                {item.children ? (
                  <div className="relative">
                    <button
                      onClick={() => toggleDropdown(item.label)}
                      onMouseEnter={() => setActiveDropdown(item.label)}
                      onMouseLeave={() => setActiveDropdown(null)}
                      className={`px-4 py-2 text-gray-300 hover:text-white transition-colors duration-200 flex items-center gap-1 group ${
                        activeDropdown === item.label ? 'text-cyan-400' : ''
                      }`}
                      aria-expanded={activeDropdown === item.label}
                      aria-haspopup="true"
                    >
                      {item.label}
                      <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${
                        activeDropdown === item.label ? 'rotate-180' : ''
                      }`} />
                    </button>

                    {/* Enhanced Dropdown Menu */}
                    <AnimatePresence>
                      {activeDropdown === item.label && (
                        <motion.div
                          initial={{ opacity: 0, y: 10, scale: 0.95 }}
                          animate={{ opacity: 1, y: 0, scale: 1 }}
                          exit={{ opacity: 0, y: 10, scale: 0.95 }}
                          transition={{ duration: 0.2 }}
                          className="absolute top-full left-0 mt-2 w-80 bg-gray-800/95 backdrop-blur-md border border-gray-700/50 rounded-2xl shadow-2xl overflow-hidden"
                          onMouseEnter={() => setActiveDropdown(item.label)}
                          onMouseLeave={() => setActiveDropdown(null)}
                        >
                          <div className="p-4 space-y-2">
                            {item.children.map((child, childIndex) => (
                              <Link
                                key={child.label}
                                href={child.href || '#'}
                                className="flex items-start space-x-3 p-3 rounded-xl hover:bg-gray-700/50 transition-all duration-200 group/item"
                                onClick={() => setActiveDropdown(null)}
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
                              >
                                <button
                                  onClick={() => handleNavItemClick(child)}
                                  className="w-full text-left p-4 rounded-xl hover:bg-white/5 transition-all duration-300 group-hover/item:bg-white/10"
                                >
                                  <div className="flex items-start gap-4">
                                    <div className="flex-shrink-0 p-2 rounded-lg bg-gradient-to-r from-cyan-400/20 to-blue-500/20 group-hover/item:scale-110 transition-transform duration-300">
                                      {child.icon}
                                    </div>
                                    <div className="flex-1 min-w-0">
                                      <div className="flex items-center gap-2 mb-1">
                                        <h3 className="text-white font-semibold group-hover/item:text-cyan-400 transition-colors duration-300">
                                          {child.label}
                                        </h3>
                                        {child.badge && (
                                          <span className="px-2 py-1 text-xs font-medium bg-cyan-500/20 text-cyan-400 rounded-full">
                                            {child.badge}
                                          </span>
                                        )}
                                        {child.isNew && (
                                          <span className="px-2 py-1 text-xs font-medium bg-emerald-500/20 text-emerald-400 rounded-full">
                                            New
                                          </span>
                                        )}
                                        {child.isPopular && (
                                          <span className="px-2 py-1 text-xs font-medium bg-orange-500/20 text-orange-400 rounded-full">
                                            Popular
                                          </span>
                                        )}
                                      </div>
                                      {child.description && (
                                        <p className="text-sm text-gray-400 group-hover/item:text-gray-300 transition-colors duration-300">
                                          {child.description}
                                        </p>
                                      )}
                                    </div>
                                    <ArrowUpRight className="w-4 h-4 text-gray-500 group-hover/item:text-cyan-400 transition-colors duration-300 opacity-0 group-hover/item:opacity-100" />
                                  </div>
                                </button>
                              </motion.div>
                            ))}
                          </div>
                        </div>
                      </motion.div>
                    )}
                  </AnimatePresence>
                )}
              </div>
            ))}
          </div>

          {/* Right Side Actions */}
          <div className="flex items-center space-x-4">
<<<<<<< HEAD
            {/* Enhanced Search */}
            <div className="relative" ref={searchRef}>
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                onClick={() => setIsSearchOpen(!isSearchOpen)}
                className="p-2 text-gray-400 hover:text-white transition-colors duration-300"
              >
                <SearchIcon className="w-5 h-5" />
              </motion.button>

              <AnimatePresence>
                {isSearchOpen && (
                  <motion.div
                    initial={{ opacity: 0, scale: 0.95, y: -10 }}
                    animate={{ opacity: 1, scale: 1, y: 0 }}
                    exit={{ opacity: 0, scale: 0.95, y: -10 }}
                    transition={{ duration: 0.2 }}
                    className="absolute top-full right-0 mt-2 w-80 bg-black/95 backdrop-blur-xl border border-white/10 rounded-2xl shadow-2xl p-4"
                  >
                    <form onSubmit={handleSearch} className="space-y-4">
                      <div className="relative">
                        <SearchIcon className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                        <input
                          type="text"
                          placeholder="Search services, solutions..."
                          value={searchQuery}
                          onChange={(e) => setSearchQuery(e.target.value)}
                          className="w-full pl-10 pr-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:border-cyan-400 focus:bg-white/10 transition-all duration-300"
                          autoFocus
                        />
                      </div>
                      <button
                        type="submit"
                        className="w-full px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-medium rounded-xl hover:shadow-lg transition-all duration-300"
                      >
                        Search
                      </button>
                    </form>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
=======
            {/* Enhanced Search Button */}
            <motion.button
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.3, delay: 0.4 }}
              onClick={() => setIsSearchOpen(true)}
              className="p-2 text-gray-400 hover:text-white transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-cyan-400/50 rounded-lg"
              aria-label="Search website"
            >
              <Search className="w-5 h-5" />
            </motion.button>
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7

            {/* Enhanced Contact Button */}
            <motion.button
<<<<<<< HEAD
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="hidden sm:flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-xl hover:shadow-lg transition-all duration-300"
=======
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.3, delay: 0.5 }}
              onClick={() => router.push('/contact')}
              className="hidden sm:inline-flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-cyan-400 to-blue-500 text-white font-medium rounded-xl hover:from-cyan-500 hover:to-blue-600 transition-all duration-300 focus:outline-none focus:ring-4 focus:ring-cyan-400/50"
              aria-label="Contact us"
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
            >
              <Phone className="w-4 h-4" />
              <span>Contact</span>
            </motion.button>

            {/* Enhanced Mobile Menu Button */}
            <motion.button
<<<<<<< HEAD
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              onClick={() => setIsOpen(!isOpen)}
              className="lg:hidden p-2 text-gray-400 hover:text-white transition-colors duration-300"
=======
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.3, delay: 0.6 }}
              onClick={toggleMobileMenu}
              className="lg:hidden p-2 text-gray-400 hover:text-white transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-cyan-400/50 rounded-lg"
              aria-label={isMobileMenuOpen ? "Close mobile menu" : "Open mobile menu"}
              aria-expanded={isMobileMenuOpen}
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
            >
              {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </motion.button>
          </div>
        </div>

<<<<<<< HEAD
      {/* Mobile Navigation */}
      <AnimatePresence>
        {isOpen && (
=======
      {/* Enhanced Search Overlay */}
      <AnimatePresence>
        {isSearchOpen && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-start justify-center pt-20"
            ref={searchRef}
          >
            <motion.div
              initial={{ opacity: 0, scale: 0.95, y: -20 }}
              animate={{ opacity: 1, scale: 1, y: 0 }}
              exit={{ opacity: 0, scale: 0.95, y: -20 }}
              transition={{ duration: 0.2 }}
              className="w-full max-w-2xl mx-4"
            >
              <form onSubmit={handleSearchSubmit} className="relative">
                <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                <input
                  ref={searchInputRef}
                  type="text"
                  placeholder="Search for services, solutions, or resources..."
                  value={searchQuery}
                  onChange={(e) => handleSearch(e.target.value)}
                  onFocus={() => setIsSearchFocused(true)}
                  onBlur={() => setIsSearchFocused(false)}
                  className={`w-full px-12 py-4 bg-white/10 border rounded-2xl text-white placeholder-gray-400 focus:outline-none transition-all duration-300 text-lg ${
                    isSearchFocused ? 'border-cyan-400 shadow-lg shadow-cyan-400/25' : 'border-gray-600'
                  }`}
                  aria-label="Search input"
                />
                <button
                  type="submit"
                  className="absolute right-2 top-1/2 transform -translate-y-1/2 px-4 py-2 bg-gradient-to-r from-cyan-400 to-blue-500 text-white rounded-xl hover:from-cyan-500 hover:to-blue-600 transition-all duration-300 focus:outline-none focus:ring-4 focus:ring-cyan-400/50"
                  aria-label="Submit search"
                >
                  Search
                </button>
              </form>
              
              {/* Search suggestions */}
              {searchQuery.length > 2 && (
                <motion.div
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  className="mt-4 bg-gray-800/95 backdrop-blur-md border border-gray-700/50 rounded-2xl p-4"
                >
                  <p className="text-sm text-gray-400 mb-2">Popular searches:</p>
                  <div className="flex flex-wrap gap-2">
                    {['AI Services', 'Quantum Computing', 'Cloud Solutions', 'Cybersecurity'].map((suggestion) => (
                      <button
                        key={suggestion}
                        onClick={() => {
                          setSearchQuery(suggestion);
                          handleSearchSubmit(new Event('submit') as any);
                        }}
                        className="px-3 py-1 bg-gray-700/50 text-gray-300 rounded-full text-sm hover:bg-gray-600/50 transition-colors duration-200"
                      >
                        {suggestion}
                      </button>
                    ))}
                  </div>
                </motion.div>
              )}
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* Enhanced Mobile Menu */}
      <AnimatePresence>
        {isMobileMenuOpen && (
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
          <motion.div
            ref={mobileMenuRef}
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3 }}
<<<<<<< HEAD
            className="lg:hidden bg-black/95 backdrop-blur-xl border-t border-white/10"
          >
            <div className="px-4 py-6 space-y-4">
              {navigationItems.map((item) => (
                <div key={item.label}>
                  {item.children ? (
                    <div>
                      <button
                        onClick={() => setActiveDropdown(activeDropdown === item.label ? null : item.label)}
                        className="flex items-center justify-between w-full px-4 py-3 text-white hover:text-cyan-400 transition-colors duration-300 font-medium"
=======
            className="lg:hidden bg-gray-900/95 backdrop-blur-md border-t border-gray-700/50"
            ref={mobileMenuRef}
          >
            <div className="px-4 py-6 space-y-4">
              {navigationItems.map((item) => (
                <div key={item.label} className="border-b border-gray-700/50 pb-4 last:border-b-0">
                  {item.children ? (
                    <div>
                      <button
                        onClick={() => toggleDropdown(item.label)}
                        className="flex items-center justify-between w-full text-left py-2 text-gray-300 hover:text-white transition-colors duration-200"
                        aria-expanded={activeDropdown === item.label}
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
                      >
                        <div className="flex items-center space-x-3">
                          {item.icon}
                          <span>{item.label}</span>
                        </div>
                        <ChevronDown className={`w-4 h-4 transition-transform duration-300 ${
                          activeDropdown === item.label ? 'rotate-180' : ''
                        }`} />
                      </button>
                      
                      <AnimatePresence>
                        {activeDropdown === item.label && (
                          <motion.div
                            initial={{ opacity: 0, height: 0 }}
                            animate={{ opacity: 1, height: 'auto' }}
                            exit={{ opacity: 0, height: 0 }}
<<<<<<< HEAD
                            transition={{ duration: 0.3 }}
                            className="ml-8 mt-2 space-y-2"
                          >
                            {item.children.map((child) => (
                              <button
                                key={child.label}
                                onClick={() => handleNavItemClick(child)}
                                className="flex items-center space-x-3 w-full px-4 py-2 text-gray-300 hover:text-white transition-colors duration-300"
                              >
                                {child.icon}
                                <span>{child.label}</span>
                                {child.badge && (
                                  <span className="ml-auto px-2 py-1 text-xs font-medium bg-cyan-500/20 text-cyan-400 rounded-full">
                                    {child.badge}
                                  </span>
                                )}
                              </button>
=======
                            transition={{ duration: 0.2 }}
                            className="mt-2 ml-4 space-y-2"
                          >
                            {item.children.map((child) => (
                              <Link
                                key={child.label}
                                href={child.href || '#'}
                                className="block py-2 text-gray-400 hover:text-cyan-400 transition-colors duration-200"
                                onClick={() => setIsMobileMenuOpen(false)}
                              >
                                {child.label}
                              </Link>
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
                            ))}
                          </motion.div>
                        )}
                      </AnimatePresence>
                    </div>
                  ) : (
<<<<<<< HEAD
                    <button
                      onClick={() => handleNavItemClick(item)}
                      className="flex items-center space-x-3 w-full px-4 py-3 text-white hover:text-cyan-400 transition-colors duration-300 font-medium"
=======
                    <Link
                      href={item.href || '#'}
                      className="block py-2 text-gray-300 hover:text-white transition-colors duration-200 font-medium"
                      onClick={() => setIsMobileMenuOpen(false)}
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
                    >
                      {item.icon}
                      <span>{item.label}</span>
                    </button>
                  )}
                </div>
              ))}
              
              {/* Mobile Contact Button */}
<<<<<<< HEAD
              <div className="pt-4 border-t border-white/10">
                <motion.button
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                  className="w-full px-4 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-xl hover:shadow-lg transition-all duration-300 flex items-center justify-center space-x-2"
                >
                  <Phone className="w-4 h-4" />
                  <span>Contact Us</span>
                </motion.button>
=======
              <div className="pt-4">
                <button
                  onClick={() => {
                    router.push('/contact');
                    setIsMobileMenuOpen(false);
                  }}
                  className="w-full px-6 py-3 bg-gradient-to-r from-cyan-400 to-blue-500 text-white font-medium rounded-xl hover:from-cyan-500 hover:to-blue-600 transition-all duration-300 focus:outline-none focus:ring-4 focus:ring-cyan-400/50"
                >
                  Contact Us
                </button>
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-38e7
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.nav>
  );
};

export default UltraFuturisticNavigation2040;