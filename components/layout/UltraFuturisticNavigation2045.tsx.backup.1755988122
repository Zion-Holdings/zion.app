import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  Menu, 
  X, 
  Search, 
  ChevronDown, 
  Phone, 
  Linkedin, 
  Twitter, 
  Github, 
  Youtube,
  Home,
  Briefcase,
  Brain,
  Atom,
  Rocket,
  Shield,
  Cloud,
  Target,
  Building,
  Users,
  BookOpen,
  FileText,
  Video,
  Code,
<<<<<<< HEAD
  Zap,
  Star,
  Sparkles,
=======
  Sparkles,
  Zap,
  Star,
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
  Globe,
  Cpu,
  Database,
  Eye,
  Heart,
<<<<<<< HEAD
  Infinity,
  TrendingUp,
  Palette,
  Layers,
  Grid,
  BarChart3,
  Settings,
  HelpCircle,
  MessageCircle,
  Calendar,
  Award,
  Lightbulb,
  Play,
  DollarSign,
  GraduationCap,
  Mail,
  MapPin,
  ExternalLink
=======
  Infinity
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
} from 'lucide-react';
import Link from 'next/link';
import { useRouter } from 'next/router';

// Define Node type for DOM event handling
type Node = HTMLElement | null;
<<<<<<< HEAD
=======

// Custom icon components
const ShoppingBag = ({ className }: { className?: string }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
  </svg>
);

const Mail = ({ className }: { className?: string }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
  </svg>
);

const Share2 = ({ className }: { className?: string }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
  </svg>
);

const Headphones = ({ className }: { className?: string }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2z" />
  </svg>
);
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385

interface NavigationItem {
  label: string;
  href: string;
  icon: React.ReactNode;
  description?: string;
  children?: NavigationItem[];
  badge?: string;
  featured?: boolean;
  neonColor?: string;
  category?: string;
}

<<<<<<< HEAD
// Enhanced navigation items with better organization
=======
// Enhanced navigation items with more services and better organization
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
const navigationItems: NavigationItem[] = [
  {
    label: 'Home',
    href: '/',
    icon: <Home className="w-4 h-4" />,
    neonColor: 'shadow-cyan-400/50',
    category: 'main'
  },
  {
    label: 'Services',
    href: '/services',
    icon: <Briefcase className="w-4 h-4" />,
    description: 'Explore our comprehensive technology solutions',
    badge: 'New',
    neonColor: 'shadow-blue-400/50',
    category: 'main',
    children: [
<<<<<<< HEAD
      { 
        name: 'All Services', 
        href: '/services', 
        description: 'Complete revolutionary services overview',
        icon: <Grid className="w-4 h-4" />,
        featured: true
      },
      { 
        name: 'Real Enterprise Services 2025', 
        href: '/2025-real-services-showcase', 
        description: 'Professional, practical business solutions',
        icon: <Building className="w-4 h-4" />,
        color: 'from-emerald-500 to-teal-500',
        featured: true
      },
      { 
        name: 'AI Consciousness Evolution 2045', 
        href: '/ai-consciousness-evolution-2045', 
        description: 'Next-generation AI consciousness',
=======
      {
        label: 'AI & Machine Learning',
        href: '/services?category=ai-ml',
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
        icon: <Brain className="w-4 h-4" />,
        description: 'Advanced AI solutions for enterprise',
        featured: true,
        neonColor: 'shadow-purple-400/50',
        category: 'ai'
<<<<<<< HEAD
=======
      },
      {
        label: 'Enterprise AI Services',
        href: '/services?category=enterprise-ai',
        icon: <Building className="w-4 h-4" />,
        description: 'AI-powered enterprise solutions',
        featured: true,
        neonColor: 'shadow-emerald-400/50',
        category: 'ai'
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
      },
      {
        label: 'Quantum Computing',
        href: '/services?category=quantum',
        icon: <Atom className="w-4 h-4" />,
        description: 'Next-generation quantum solutions',
        featured: true,
        neonColor: 'shadow-blue-400/50',
        category: 'quantum'
<<<<<<< HEAD
=======
      },
      {
        label: 'Space Technology',
        href: '/services?category=space-tech',
        icon: <Rocket className="w-4 h-4" />,
        description: 'Innovative space tech applications',
        featured: true,
        neonColor: 'shadow-pink-400/50',
        category: 'space'
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
      },
      {
        label: 'Cybersecurity',
        href: '/services?category=cybersecurity',
        icon: <Shield className="w-4 h-4" />,
<<<<<<< HEAD
        description: 'Advanced security and protection',
=======
        description: 'Advanced security solutions',
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
        neonColor: 'shadow-red-400/50',
        category: 'security'
      },
      {
<<<<<<< HEAD
        label: 'Space Technology',
        href: '/services?category=space',
        icon: <Rocket className="w-4 h-4" />,
        description: 'Innovative space solutions',
        neonColor: 'shadow-indigo-400/50',
        category: 'space'
      },
      {
        label: 'Enterprise Solutions',
        href: '/services?category=enterprise',
        icon: <Building className="w-4 h-4" />,
        description: 'Business transformation services',
        neonColor: 'shadow-green-400/50',
        category: 'enterprise'
=======
        label: 'Cloud Infrastructure',
        href: '/services?category=cloud',
        icon: <Cloud className="w-4 h-4" />,
        description: 'Scalable cloud solutions',
        neonColor: 'shadow-indigo-400/50',
        category: 'infrastructure'
      },
      {
        label: 'Edge Computing',
        href: '/services?category=edge-computing',
        icon: <Cpu className="w-4 h-4" />,
        description: 'Distributed edge solutions',
        neonColor: 'shadow-teal-400/50',
        category: 'infrastructure'
      },
      {
        label: 'Data Management',
        href: '/services?category=data-management',
        icon: <Database className="w-4 h-4" />,
        description: 'Intelligent data solutions',
        neonColor: 'shadow-cyan-400/50',
        category: 'data'
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
      }
    ]
  },
  {
    label: 'Solutions',
    href: '/solutions',
    icon: <Target className="w-4 h-4" />,
<<<<<<< HEAD
    description: 'Industry-specific solutions',
    neonColor: 'shadow-green-400/50',
    category: 'main'
  },
  {
    name: 'AI & Consciousness',
    href: '/ai-services',
    icon: <Brain className="w-5 h-5" />,
    description: 'Advanced AI consciousness solutions',
    badge: '2045',
    category: 'ai',
    color: 'from-purple-500 to-pink-500',
    children: [
      { 
        name: 'AI Consciousness Evolution', 
        href: '/ai-consciousness-evolution-platform-2045', 
        description: 'Next-generation AI consciousness',
        icon: <Brain className="w-4 h-4" />,
        featured: true
      },
      { 
        name: 'Quantum AI Hybrid Computing', 
        href: '/quantum-ai-hybrid-computing-platform-2045', 
        description: 'Quantum-powered AI with consciousness',
        icon: <Atom className="w-4 h-4" />,
        featured: true
      },
      { 
        name: 'Autonomous AI Systems', 
        href: '/ai-autonomous-systems', 
        description: 'Fully autonomous AI solutions',
        icon: <Zap className="w-4 h-4" />
      }
    ]
  },
  {
    name: 'Quantum Technology',
    href: '/quantum-services',
    icon: <Atom className="w-5 h-5" />,
    description: 'Quantum computing and technology',
    badge: '2045',
    category: 'quantum',
    color: 'from-blue-500 to-cyan-500',
    children: [
      { 
        name: 'Quantum Computing Platform', 
        href: '/quantum-computing-platform-2045', 
        description: 'Advanced quantum computing solutions',
        icon: <Atom className="w-4 h-4" />,
        featured: true
      },
      { 
        name: 'Quantum Cybersecurity', 
        href: '/quantum-cybersecurity-platform-2045', 
        description: 'Quantum-resistant security',
        icon: <Shield className="w-4 h-4" />,
        featured: true
      },
      { 
        name: 'Quantum Cloud Infrastructure', 
        href: '/quantum-cloud-infrastructure-platform-2045', 
        description: 'Quantum-powered cloud solutions',
        icon: <Cloud className="w-4 h-4" />
      }
    ]
  },
  {
    name: 'Solutions',
    href: '/solutions',
    icon: <Target className="w-5 h-5" />,
    description: 'Industry-specific solutions',
    category: 'solutions',
    color: 'from-emerald-500 to-teal-500',
    children: [
      { 
        name: 'Enterprise Solutions', 
        href: '/enterprise-solutions', 
        description: 'Large-scale enterprise solutions',
        icon: <Building className="w-4 h-4" />
      },
      { 
        name: 'Startup Solutions', 
        href: '/startup-solutions', 
        description: 'Scalable startup solutions',
        icon: <Rocket className="w-4 h-4" />
      },
      { 
        name: 'Government Solutions', 
        href: '/government-solutions', 
        description: 'Secure government solutions',
        icon: <Shield className="w-4 h-4" />
=======
    description: 'Industry-specific technology solutions',
    neonColor: 'shadow-emerald-400/50',
    category: 'main',
    children: [
      {
        label: 'Financial Services',
        href: '/solutions/financial-services',
        icon: <Building className="w-4 h-4" />,
        description: 'AI-powered financial solutions',
        neonColor: 'shadow-green-400/50',
        category: 'industry'
      },
      {
        label: 'Healthcare',
        href: '/solutions/healthcare',
        icon: <Heart className="w-4 h-4" />,
        description: 'Digital health innovations',
        neonColor: 'shadow-red-400/50',
        category: 'industry'
      },
      {
        label: 'Manufacturing',
        href: '/solutions/manufacturing',
        icon: <Cpu className="w-4 h-4" />,
        description: 'Smart manufacturing solutions',
        neonColor: 'shadow-blue-400/50',
        category: 'industry'
      },
      {
        label: 'Retail & E-commerce',
        href: '/solutions/retail-ecommerce',
        icon: <ShoppingBag className="w-4 h-4" />,
        description: 'Digital commerce platforms',
        neonColor: 'shadow-purple-400/50',
        category: 'industry'
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
      }
    ]
  },
  {
<<<<<<< HEAD
    name: 'Resources',
    href: '/resources',
    icon: <BookOpen className="w-4 h-4" />,
    description: 'Knowledge and insights',
=======
    label: 'Micro SAAS',
    href: '/micro-saas',
    icon: <Sparkles className="w-4 h-4" />,
    description: 'Innovative micro SAAS solutions',
    badge: 'Hot',
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
    neonColor: 'shadow-yellow-400/50',
    category: 'main',
    children: [
      {
<<<<<<< HEAD
        label: 'White Papers',
        href: '/white-papers',
        icon: <FileText className="w-4 h-4" />,
        description: 'In-depth research and insights'
      },
      {
        label: 'Webinars',
        href: '/webinars',
        icon: <Video className="w-4 h-4" />,
        description: 'Expert-led sessions'
      },
      {
        label: 'Case Studies',
        href: '/case-studies',
        icon: <BarChart3 className="w-4 h-4" />,
        description: 'Success stories and results'
      }
    ]
=======
        label: 'Content Creation',
        href: '/services/ai-content-creation-platform-2025',
        icon: <FileText className="w-4 h-4" />,
        description: 'AI-powered content generation',
        neonColor: 'shadow-pink-400/50',
        category: 'saas'
      },
      {
        label: 'Email Marketing',
        href: '/services/intelligent-email-marketing-automation-2025',
        icon: <Mail className="w-4 h-4" />,
        description: 'Intelligent email automation',
        neonColor: 'shadow-blue-400/50',
        category: 'saas'
      },
      {
        label: 'Social Media',
        href: '/services/smart-social-media-management-2025',
        icon: <Share2 className="w-4 h-4" />,
        description: 'Smart social media management',
        neonColor: 'shadow-purple-400/50',
        category: 'saas'
      },
      {
        label: 'Customer Support',
        href: '/services/intelligent-customer-support-platform-2025',
        icon: <Headphones className="w-4 h-4" />,
        description: 'AI-powered customer support',
        neonColor: 'shadow-green-400/50',
        category: 'saas'
      }
    ]
  },
  {
    label: 'Resources',
    href: '/resources',
    icon: <BookOpen className="w-4 h-4" />,
    description: 'Knowledge base and learning resources',
    neonColor: 'shadow-orange-400/50',
    category: 'main'
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
  },
  {
    label: 'About',
    href: '/about',
    icon: <Users className="w-4 h-4" />,
<<<<<<< HEAD
    description: 'Learn about our company',
    neonColor: 'shadow-purple-400/50',
=======
    description: 'Learn about our company and team',
    neonColor: 'shadow-indigo-400/50',
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
    category: 'main'
  },
  {
    label: 'Contact',
    href: '/contact',
<<<<<<< HEAD
    icon: <MessageCircle className="w-4 h-4" />,
    description: 'Get in touch with us',
    neonColor: 'shadow-pink-400/50',
=======
    icon: <Phone className="w-4 h-4" />,
    description: 'Get in touch with our team',
    neonColor: 'shadow-green-400/50',
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
    category: 'main'
  }
];

<<<<<<< HEAD
// Contact information
const contactInfo = [
  { icon: Phone, label: 'Call Us', value: '+1 302 464 0950', href: 'tel:+13024640950' },
  { icon: Mail, label: 'Email Us', value: 'kleber@ziontechgroup.com', href: 'mailto:kleber@ziontechgroup.com' },
  { icon: MapPin, label: 'Visit Us', value: '364 E Main St STE 1008, Middletown DE 19709', href: '#' }
];

// Social media links
const socialLinks = [
  { icon: Linkedin, href: 'https://linkedin.com/company/ziontechgroup', label: 'LinkedIn' },
  { icon: Twitter, href: 'https://twitter.com/ziontechgroup', label: 'Twitter' },
  { icon: Github, href: 'https://github.com/ziontechgroup', label: 'GitHub' },
  { icon: Youtube, href: 'https://youtube.com/ziontechgroup', label: 'YouTube' }
];

const UltraFuturisticNavigation2045: React.FC = () => {
=======
export default function UltraFuturisticNavigation2045() {
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
  const [isOpen, setIsOpen] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);
  const [isScrolled, setIsScrolled] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
<<<<<<< HEAD
  const [isSearchOpen, setIsSearchOpen] = useState(false);
  const [isMobile, setIsMobile] = useState(false);
  const [isTablet, setIsTablet] = useState(false);
  
  const router = useRouter();
  const navRef = useRef<HTMLElement>(null);
  const searchRef = useRef<HTMLDivElement>(null);

  // Responsive design detection
  useEffect(() => {
    const checkDeviceType = () => {
      const width = window.innerWidth;
      setIsMobile(width < 768);
      setIsTablet(width >= 768 && width < 1024);
    };

    checkDeviceType();
    window.addEventListener('resize', checkDeviceType);
    return () => window.removeEventListener('resize', checkDeviceType);
  }, []);

  // Scroll detection
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 20);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);
=======
  const [isScrolled, setIsScrolled] = useState(false);
  const router = useRouter();
  const searchRef = useRef<HTMLInputElement>(null);

  // Handle scroll effect
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 20);
    };
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Handle search
  const handleSearch = useCallback((e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      router.push(`/services?search=${encodeURIComponent(searchQuery.trim())}`);
      setSearchQuery('');
      setIsOpen(false);
    }
  }, [searchQuery, router]);

  // Handle dropdown toggle
  const toggleDropdown = useCallback((label: string) => {
    setActiveDropdown(activeDropdown === label ? null : label);
  }, [activeDropdown]);
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385

  // Close dropdowns when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
<<<<<<< HEAD
      if (navRef.current && !navRef.current.contains(event.target as Node)) {
=======
      const target = event.target as Node;
      if (!target?.closest('.navigation-dropdown')) {
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
        setActiveDropdown(null);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

<<<<<<< HEAD
  // Close search when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (searchRef.current && !searchRef.current.contains(event.target as Node)) {
        setIsSearchOpen(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

  // Close mobile menu when route changes
  useEffect(() => {
    setIsOpen(false);
    setActiveDropdown(null);
  }, [router.asPath]);

  const toggleMenu = useCallback(() => {
    setIsOpen(!isOpen);
    if (isOpen) {
      setActiveDropdown(null);
    }
  }, [isOpen]);

  const toggleDropdown = useCallback((label: string) => {
    setActiveDropdown(activeDropdown === label ? null : label);
  }, [activeDropdown]);

  const closeDropdown = useCallback(() => {
    setActiveDropdown(null);
  }, []);

  const handleSearch = useCallback((e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      router.push(`/search?q=${encodeURIComponent(searchQuery.trim())}`);
      setIsSearchOpen(false);
      setSearchQuery('');
    }
  }, [searchQuery, router]);

  const toggleSearch = useCallback(() => {
    setIsSearchOpen(!isSearchOpen);
    if (!isSearchOpen) {
      setTimeout(() => {
        const searchInput = document.getElementById('search-input') as HTMLInputElement;
        if (searchInput) searchInput.focus();
      }, 100);
    }
  }, [isSearchOpen]);

  // Memoize navigation items to prevent unnecessary re-renders
  const memoizedNavigationItems = useMemo(() => navigationItems, []);

  return (
    <>
      {/* Top Contact Bar */}
      <motion.div 
        className="bg-gradient-to-r from-cyan-900/20 to-blue-900/20 backdrop-blur-sm border-b border-cyan-500/20"
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        transition={{ duration: 0.5 }}
      >
        <div className="max-w-7xl mx-auto px-4 py-2">
          <div className="flex flex-col sm:flex-row items-center justify-between text-sm text-cyan-300">
            <div className="flex items-center gap-4 mb-2 sm:mb-0">
              {contactInfo.map((contact, index) => (
                <a
                  key={index}
                  href={contact.href}
                  className="flex items-center gap-2 hover:text-cyan-200 transition-colors duration-200"
                  aria-label={`${contact.label}: ${contact.value}`}
                >
                  <contact.icon className="w-4 h-4" />
                  <span className="hidden sm:inline">{contact.value}</span>
                </a>
              ))}
            </div>
            <div className="flex items-center gap-4">
              <span className="text-xs text-cyan-400/70">Follow us:</span>
              {socialLinks.map((social, index) => (
                <a
                  key={index}
                  href={social.href}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-cyan-300 hover:text-cyan-200 transition-colors duration-200"
                  aria-label={`Visit our ${social.label} page`}
                >
                  <social.icon className="w-4 h-4" />
                </a>
              ))}
=======
  // Enhanced navigation item renderer
  const renderNavigationItem = useCallback((item: NavigationItem, isMobile = false) => {
    const hasChildren = item.children && item.children.length > 0;
    const isActive = router.pathname === item.href || router.asPath.startsWith(item.href);

    return (
      <div key={item.label} className="relative navigation-dropdown">
        {hasChildren ? (
          <div>
            <button
              onClick={() => toggleDropdown(item.label)}
              className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium rounded-lg transition-all duration-300 group ${
                isActive
                  ? 'text-white bg-gradient-to-r from-cyan-500 to-blue-500 shadow-lg shadow-cyan-500/25'
                  : 'text-gray-300 hover:text-white hover:bg-gray-800/50'
              } ${item.neonColor}`}
            >
              {item.icon}
              <span>{item.label}</span>
              {item.badge && (
                <span className="px-2 py-1 text-xs font-bold text-white bg-gradient-to-r from-pink-500 to-purple-500 rounded-full shadow-lg shadow-pink-500/25">
                  {item.badge}
                </span>
              )}
              <ChevronDown className={`w-4 h-4 transition-transform duration-300 ${
                activeDropdown === item.label ? 'rotate-180' : ''
              }`} />
            </button>

            {/* Enhanced dropdown menu */}
            <AnimatePresence>
              {activeDropdown === item.label && (
                <motion.div
                  initial={{ opacity: 0, y: -10, scale: 0.95 }}
                  animate={{ opacity: 1, y: 0, scale: 1 }}
                  exit={{ opacity: 0, y: -10, scale: 0.95 }}
                  transition={{ duration: 0.2, ease: 'easeOut' }}
                  className={`absolute ${
                    isMobile ? 'relative mt-2' : 'top-full left-0 mt-2'
                  } w-80 bg-gray-900/95 backdrop-blur-xl border border-gray-700/50 rounded-xl shadow-2xl shadow-black/50 z-50`}
                >
                  <div className="p-4">
                    <div className="grid grid-cols-1 gap-2">
                      {item.children?.map((child) => (
                        <Link
                          key={child.label}
                          href={child.href}
                          className={`group flex items-start space-x-3 p-3 rounded-lg transition-all duration-300 ${
                            child.featured
                              ? 'bg-gradient-to-r from-purple-500/20 to-pink-500/20 border border-purple-500/30'
                              : 'hover:bg-gray-800/50'
                          }`}
                          onClick={() => {
                            setActiveDropdown(null);
                            setIsOpen(false);
                          }}
                        >
                          <div className={`p-2 rounded-lg ${
                            child.featured
                              ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white'
                              : 'bg-gray-700 text-gray-300 group-hover:bg-gray-600'
                          } transition-colors duration-300`}>
                            {child.icon}
                          </div>
                          <div className="flex-1 min-w-0">
                            <div className="flex items-center space-x-2">
                              <p className={`text-sm font-medium ${
                                child.featured ? 'text-white' : 'text-gray-300 group-hover:text-white'
                              } transition-colors duration-300`}>
                                {child.label}
                              </p>
                              {child.featured && (
                                <Star className="w-3 h-3 text-yellow-400" />
                              )}
                            </div>
                            {child.description && (
                              <p className="text-xs text-gray-400 mt-1 line-clamp-2">
                                {child.description}
                              </p>
                            )}
                          </div>
                        </Link>
                      ))}
                    </div>
                  </div>
                </motion.div>
              )}
            </AnimatePresence>
          </div>
        ) : (
          <Link
            href={item.href}
            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium rounded-lg transition-all duration-300 group ${
              isActive
                ? 'text-white bg-gradient-to-r from-cyan-500 to-blue-500 shadow-lg shadow-cyan-500/25'
                : 'text-gray-300 hover:text-white hover:bg-gray-800/50'
            } ${item.neonColor}`}
            onClick={() => setIsOpen(false)}
          >
            {item.icon}
            <span>{item.label}</span>
            {item.badge && (
              <span className="px-2 py-1 text-xs font-bold text-white bg-gradient-to-r from-pink-500 to-purple-500 rounded-full shadow-lg shadow-pink-500/25">
                {item.badge}
              </span>
            )}
          </Link>
        )}
      </div>
    );
  }, [activeDropdown, toggleDropdown, router, setIsOpen]);

  return (
    <nav className={`fixed top-0 left-0 right-0 z-50 transition-all duration-500 ${
      isScrolled 
        ? 'bg-gray-900/95 backdrop-blur-xl border-b border-gray-700/50 shadow-2xl shadow-black/50' 
        : 'bg-transparent'
    }`}>
      {/* Top contact bar */}
      <div className="bg-gradient-to-r from-cyan-600 via-blue-600 to-purple-600 text-white text-sm py-2">
        <div className="container mx-auto px-4 flex items-center justify-between">
          <div className="flex items-center space-x-6">
            <div className="flex items-center space-x-2">
              <Phone className="w-4 h-4" />
              <span>+1 302 464 0950</span>
            </div>
            <div className="flex items-center space-x-2">
              <Mail className="w-4 h-4" />
              <span>kleber@ziontechgroup.com</span>
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
            </div>
          </div>
          <div className="flex items-center space-x-4">
            <Link href="https://linkedin.com" className="hover:text-cyan-200 transition-colors">
              <Linkedin className="w-5 h-5" />
            </Link>
            <Link href="https://twitter.com" className="hover:text-cyan-200 transition-colors">
              <Twitter className="w-5 h-5" />
            </Link>
            <Link href="https://github.com" className="hover:text-cyan-200 transition-colors">
              <Github className="w-5 h-5" />
            </Link>
          </div>
        </div>
      </motion.div>

<<<<<<< HEAD
      {/* Main Navigation */}
      <motion.nav
        ref={navRef}
        className={`sticky top-0 z-50 transition-all duration-300 ${
          isScrolled 
            ? 'bg-black/90 backdrop-blur-xl border-b border-cyan-500/20 shadow-2xl shadow-cyan-500/10' 
            : 'bg-black/50 backdrop-blur-sm'
        }`}
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        transition={{ duration: 0.5, delay: 0.1 }}
      >
        <div className="max-w-7xl mx-auto px-4">
          <div className="flex items-center justify-between h-16 lg:h-20">
            {/* Logo */}
            <Link href="/" className="flex items-center space-x-3 group" aria-label="Zion Tech Group Home">
              <motion.div
                className="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-xl flex items-center justify-center shadow-lg group-hover:shadow-cyan-500/25 transition-all duration-300"
                whileHover={{ scale: 1.05, rotate: 5 }}
              >
                <Brain className="w-6 h-6 lg:w-7 lg:h-7 text-white" />
              </motion.div>
              <div className="hidden sm:block">
                <h1 className="text-xl lg:text-2xl font-bold bg-gradient-to-r from-cyan-400 to-blue-500 bg-clip-text text-transparent">
                  Zion Tech Group
                </h1>
                <p className="text-xs text-cyan-400/70">Revolutionary Technology</p>
              </div>
            </Link>

            {/* Desktop Navigation */}
            <div className="hidden lg:flex items-center space-x-8">
              {memoizedNavigationItems.map((item) => (
                <div key={item.label} className="relative group">
                  {item.children ? (
                    <button
                      onClick={() => toggleDropdown(item.label)}
                      onMouseEnter={() => setActiveDropdown(item.label)}
                      onMouseLeave={() => setActiveDropdown(null)}
                      className="flex items-center gap-2 px-4 py-2 text-white/80 hover:text-white transition-colors duration-200 rounded-lg hover:bg-white/5 focus:outline-none focus:ring-2 focus:ring-cyan-500/50"
                      aria-expanded={activeDropdown === item.label}
                      aria-haspopup="true"
                    >
                      {item.icon}
                      <span>{item.label}</span>
                      {item.badge && (
                        <span className="px-2 py-1 text-xs bg-gradient-to-r from-cyan-500 to-blue-500 text-white rounded-full">
                          {item.badge}
                        </span>
                      )}
                      <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${
                        activeDropdown === item.label ? 'rotate-180' : ''
                      }`} />
                    </button>
                  ) : (
                    <Link
                      href={item.href}
                      className="flex items-center gap-2 px-4 py-2 text-white/80 hover:text-white transition-colors duration-200 rounded-lg hover:bg-white/5 focus:outline-none focus:ring-2 focus:ring-cyan-500/50"
                    >
                      {item.icon}
                      <span>{item.label}</span>
                      {item.badge && (
                        <span className="px-2 py-1 text-xs bg-gradient-to-r from-cyan-500 to-blue-500 text-white rounded-full">
                          {item.badge}
                        </span>
                      )}
                    </Link>
                  )}

                  {/* Dropdown Menu */}
                  {item.children && activeDropdown === item.label && (
                    <motion.div
                      className="absolute top-full left-0 mt-2 w-80 bg-gray-900/95 backdrop-blur-xl border border-cyan-500/20 rounded-2xl shadow-2xl shadow-cyan-500/20 p-4"
                      initial={{ opacity: 0, y: 10, scale: 0.95 }}
                      animate={{ opacity: 1, y: 0, scale: 1 }}
                      exit={{ opacity: 0, y: 10, scale: 0.95 }}
                      transition={{ duration: 0.2 }}
                      onMouseEnter={() => setActiveDropdown(item.label)}
                      onMouseLeave={() => setActiveDropdown(null)}
                    >
                      <div className="grid gap-3">
                        {item.children.map((child) => (
                          <Link
                            key={child.label}
                            href={child.href}
                            className="flex items-start gap-3 p-3 rounded-xl hover:bg-white/5 transition-all duration-200 group"
                          >
                            <div className={`w-10 h-10 bg-gradient-to-r ${child.neonColor || 'from-gray-500 to-slate-500'} rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform duration-200`}>
                              {child.icon}
                            </div>
                            <div className="flex-1">
                              <div className="flex items-center gap-2 mb-1">
                                <span className="font-medium text-white group-hover:text-cyan-300 transition-colors">
                                  {child.label}
                                </span>
                                {child.featured && (
                                  <Star className="w-4 h-4 text-yellow-400 fill-current" />
                                )}
                              </div>
                              {child.description && (
                                <p className="text-sm text-white/70 line-clamp-2">
                                  {child.description}
                                </p>
                              )}
                            </div>
                          </Link>
                        ))}
                      </div>
                    </motion.div>
                  )}
                </div>
              ))}
            </div>

            {/* Right Side Actions */}
            <div className="flex items-center space-x-4">
              {/* Search Button */}
              <button
                onClick={toggleSearch}
                className="p-2 text-white/80 hover:text-white transition-colors duration-200 rounded-lg hover:bg-white/5 focus:outline-none focus:ring-2 focus:ring-cyan-500/50"
                aria-label="Open search"
=======
      {/* Main navigation */}
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between h-20">
          {/* Logo */}
          <Link href="/" className="flex items-center space-x-3 group">
            <div className="relative">
              <div className="w-10 h-10 bg-gradient-to-r from-cyan-500 to-blue-500 rounded-xl flex items-center justify-center shadow-lg shadow-cyan-500/25 group-hover:shadow-cyan-500/40 transition-all duration-300">
                <Zap className="w-6 h-6 text-white" />
              </div>
              <div className="absolute -inset-1 bg-gradient-to-r from-cyan-500 to-blue-500 rounded-xl blur opacity-25 group-hover:opacity-40 transition-opacity duration-300"></div>
            </div>
            <div>
              <h1 className="text-xl font-bold bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent">
                Zion Tech Group
              </h1>
              <p className="text-xs text-gray-400">Innovating Tomorrow</p>
            </div>
          </Link>

          {/* Desktop Navigation */}
          <div className="hidden lg:flex items-center space-x-1">
            {navigationItems.map((item) => renderNavigationItem(item))}
          </div>

          {/* Search and CTA */}
          <div className="hidden lg:flex items-center space-x-4">
            <form onSubmit={handleSearch} className="relative">
              <input
                ref={searchRef}
                type="text"
                placeholder="Search services..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="w-64 px-4 py-2 bg-gray-800/50 border border-gray-600/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-500/50 focus:border-transparent transition-all duration-300"
              />
              <button
                type="submit"
                className="absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-white transition-colors"
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
              >
                <Search className="w-5 h-5" />
              </button>

<<<<<<< HEAD
              {/* CTA Button */}
              <Link href="/contact">
                <motion.button
                  className="hidden sm:flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-medium rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-cyan-500/50"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  aria-label="Get started with us"
                >
                  <MessageCircle className="w-4 h-4" />
                  <span>Get Started</span>
                </motion.button>
              </Link>

              {/* Mobile Menu Button */}
              <button
                onClick={toggleMenu}
                className="lg:hidden p-2 text-white/80 hover:text-white transition-colors duration-200 rounded-lg hover:bg-white/5 focus:outline-none focus:ring-2 focus:ring-cyan-500/50"
                aria-label="Toggle mobile menu"
                aria-expanded={isOpen}
              >
                {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
              </button>
            </div>
          </div>
=======
            <Link
              href="/contact"
              className="px-6 py-2 bg-gradient-to-r from-cyan-500 to-blue-500 text-white font-medium rounded-lg shadow-lg shadow-cyan-500/25 hover:shadow-cyan-500/40 transition-all duration-300 hover:scale-105"
            >
              Get Started
            </Link>
          </div>

          {/* Mobile menu button */}
          <button
            onClick={() => setIsOpen(!isOpen)}
            className="lg:hidden p-2 text-gray-300 hover:text-white hover:bg-gray-800/50 rounded-lg transition-all duration-300"
          >
            {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
        </div>
      </motion.nav>

      {/* Search Overlay */}
      <AnimatePresence>
        {isSearchOpen && (
          <motion.div
            ref={searchRef}
            className="fixed inset-0 z-50 bg-black/80 backdrop-blur-sm"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
          >
            <div className="flex items-center justify-center min-h-screen p-4">
              <motion.div
                className="w-full max-w-2xl"
                initial={{ scale: 0.9, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                exit={{ scale: 0.9, opacity: 0 }}
                transition={{ duration: 0.2 }}
              >
                <form onSubmit={handleSearch} className="relative">
                  <input
                    id="search-input"
                    type="text"
                    placeholder="Search for services, solutions, or insights..."
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    className="w-full px-6 py-4 text-lg bg-gray-900/90 border-2 border-cyan-500/30 rounded-2xl text-white placeholder-white/50 focus:outline-none focus:border-cyan-500 focus:ring-4 focus:ring-cyan-500/20 backdrop-blur-xl"
                    aria-label="Search input"
                  />
                  <button
                    type="submit"
                    className="absolute right-2 top-1/2 transform -translate-y-1/2 p-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-xl hover:from-cyan-600 hover:to-blue-700 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-cyan-500/50"
                    aria-label="Submit search"
                  >
                    <Search className="w-5 h-5" />
                  </button>
                </form>
                <button
                  onClick={() => setIsSearchOpen(false)}
                  className="absolute top-4 right-4 p-2 text-white/70 hover:text-white transition-colors duration-200"
                  aria-label="Close search"
                >
                  <X className="w-6 h-6" />
                </button>
              </motion.div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* Mobile Navigation */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
<<<<<<< HEAD
            className="lg:hidden fixed inset-0 z-40 bg-black/95 backdrop-blur-xl"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
          >
            <div className="flex flex-col h-full">
              <div className="flex-1 overflow-y-auto py-6 px-4">
                <nav className="space-y-2">
                  {memoizedNavigationItems.map((item) => (
                    <div key={item.label}>
                      {item.children ? (
                        <div>
                          <button
                            onClick={() => toggleDropdown(item.label)}
                            className="w-full flex items-center justify-between p-4 text-white/80 hover:text-white transition-colors duration-200 rounded-lg hover:bg-white/5 focus:outline-none focus:ring-2 focus:ring-cyan-500/50"
                            aria-expanded={activeDropdown === item.label}
                          >
                            <span className="flex items-center gap-3">
                              {item.icon}
                              <span>{item.label}</span>
                              {item.badge && (
                                <span className="px-2 py-1 text-xs bg-gradient-to-r from-cyan-500 to-blue-500 text-white rounded-full">
                                  {item.badge}
                                </span>
                              )}
                            </span>
                            <ChevronDown className={`w-5 h-5 transition-transform duration-200 ${
                              activeDropdown === item.label ? 'rotate-180' : ''
                            }`} />
                          </button>
                          
                          {activeDropdown === item.label && (
                            <motion.div
                              className="ml-8 mt-2 space-y-2"
                              initial={{ opacity: 0, height: 0 }}
                              animate={{ opacity: 1, height: 'auto' }}
                              exit={{ opacity: 0, height: 0 }}
                              transition={{ duration: 0.2 }}
                            >
                              {item.children.map((child) => (
                                <Link
                                  key={child.label}
                                  href={child.href}
                                  className="flex items-center gap-3 p-3 text-white/70 hover:text-white transition-colors duration-200 rounded-lg hover:bg-white/5"
                                >
                                  {child.icon}
                                  <span>{child.label}</span>
                                  {child.featured && (
                                    <Star className="w-4 h-4 text-yellow-400 fill-current ml-auto" />
                                  )}
                                </Link>
                              ))}
                            </motion.div>
                          )}
                        </div>
                      ) : (
                        <Link
                          href={item.href}
                          className="flex items-center gap-3 p-4 text-white/80 hover:text-white transition-colors duration-200 rounded-lg hover:bg-white/5 focus:outline-none focus:ring-2 focus:ring-cyan-500/50"
                        >
                          {item.icon}
                          <span>{item.label}</span>
                          {item.badge && (
                            <span className="px-2 py-1 text-xs bg-gradient-to-r from-cyan-500 to-blue-500 text-white rounded-full ml-auto">
                              {item.badge}
                            </span>
                          )}
                        </Link>
                      )}
                    </div>
                  ))}
                </nav>

                {/* Mobile Contact Info */}
                <div className="mt-8 pt-8 border-t border-white/10">
                  <h3 className="text-lg font-semibold text-white mb-4">Contact Us</h3>
                  <div className="space-y-3">
                    {contactInfo.map((contact, index) => (
                      <a
                        key={index}
                        href={contact.href}
                        className="flex items-center gap-3 p-3 text-white/70 hover:text-white transition-colors duration-200 rounded-lg hover:bg-white/5"
                        aria-label={`${contact.label}: ${contact.value}`}
                      >
                        <contact.icon className="w-5 h-5 text-cyan-400" />
                        <div>
                          <div className="text-sm font-medium text-white">{contact.label}</div>
                          <div className="text-sm text-white/70">{contact.value}</div>
                        </div>
                      </a>
                    ))}
                  </div>
                </div>

                {/* Mobile Social Links */}
                <div className="mt-6 pt-6 border-t border-white/10">
                  <h3 className="text-lg font-semibold text-white mb-4">Follow Us</h3>
                  <div className="flex gap-4">
                    {socialLinks.map((social, index) => (
                      <a
                        key={index}
                        href={social.href}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="p-3 bg-white/5 hover:bg-white/10 rounded-lg transition-colors duration-200"
                        aria-label={`Visit our ${social.label} page`}
                      >
                        <social.icon className="w-6 h-6 text-cyan-400" />
                      </a>
                    ))}
                  </div>
                </div>
              </div>

              {/* Mobile CTA */}
              <div className="p-4 border-t border-white/10">
                <Link href="/contact" className="w-full">
                  <motion.button
                    className="w-full px-6 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-medium rounded-xl hover:from-cyan-600 hover:to-blue-700 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-cyan-500/50"
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                    aria-label="Get started with us"
                  >
                    Get Started Today
                  </motion.button>
=======
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3, ease: 'easeInOut' }}
            className="lg:hidden bg-gray-900/95 backdrop-blur-xl border-t border-gray-700/50"
          >
            <div className="container mx-auto px-4 py-6">
              {/* Mobile Search */}
              <form onSubmit={handleSearch} className="mb-6">
                <input
                  type="text"
                  placeholder="Search services..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="w-full px-4 py-3 bg-gray-800/50 border border-gray-600/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-500/50 focus:border-transparent"
                />
              </form>

              {/* Mobile Navigation Items */}
              <div className="space-y-2">
                {navigationItems.map((item) => renderNavigationItem(item, true))}
              </div>

              {/* Mobile CTA */}
              <div className="mt-6 pt-6 border-t border-gray-700/50">
                <Link
                  href="/contact"
                  className="block w-full px-6 py-3 bg-gradient-to-r from-cyan-500 to-blue-500 text-white font-medium text-center rounded-lg shadow-lg shadow-cyan-500/25"
                  onClick={() => setIsOpen(false)}
                >
                  Get Started
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-4385
                </Link>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
}