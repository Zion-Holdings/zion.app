import React, { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Search, Menu, X, ChevronDown, Rocket, Star } from 'lucide-react';
import Link from 'next/link';
import { Bell } from 'lucide-react';
import { useEffect, useState } from 'react';
import { useUnreadNotificationsCount } from '../../hooks/useUnreadNotificationsCount';

export default function EnhancedNavigation() {
  const [isClient, setIsClient] = useState(false);
  const unread = useUnreadNotificationsCount();
  useEffect(() => setIsClient(true), []);

  return (
    <nav className="border-b border-gray-200 dark:border-gray-800 bg-white/70 dark:bg-black/40 backdrop-blur supports-backdrop-blur:bg-white/50 sticky top-0 z-40">
      <div className="container mx-auto px-4 h-14 flex items-center justify-between">
        <Link href="/">
          <a className="font-semibold">Zion</a>
        </Link>
        <div className="flex items-center gap-4 text-sm">
<<<<<<< HEAD
          <Link href="/expo"><a className="font-medium">Expo</a></Link>
          <Link href="/events/global"><a>Global</a></Link>
=======
          <Link href="/services"><a>Services</a></Link>
          <Link href="/talent"><a>Talents</a></Link>
          <Link href="/products"><a>Equipment</a></Link>
          <Link href="/automation"><a>Automation</a></Link>
>>>>>>> origin/cursor/create-dynamic-listing-pages-with-filters-fc72
          <Link href="/about"><a>About</a></Link>
          <Link href="/blog"><a>Blog</a></Link>
          <Link href="/salary-insights"><a>Salary Insights</a></Link>
          <Link href="/admin"><a>Admin</a></Link>
          <Link href="/contact"><a>Contact</a></Link>
          <Link href="/notifications">
            <a className="relative inline-flex items-center justify-center rounded-full border border-gray-200 dark:border-gray-700 p-2 hover:bg-gray-50 dark:hover:bg-gray-800">
              <Bell className="h-5 w-5" />
              {isClient && unread > 0 && (
                <span className="absolute -right-1 -top-1 inline-flex h-5 min-w-[20px] items-center justify-center rounded-full bg-gradient-to-r from-blue-500 via-cyan-500 to-purple-500 px-1 text-xs font-bold text-white shadow">
                  {unread}
                </span>
              )}
            </a>
          </Link>
        </div>
      </nav>

      {/* Mobile Navigation */}
      <AnimatePresence>
        {isMobileMenuOpen && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3 }}
            className="lg:hidden bg-gray-900/95 backdrop-blur-md border-t border-gray-700/50"
            ref={mobileMenuContentRef}
          >
            <div className="px-4 py-6 space-y-6">
              {/* Mobile Search */}
              <form onSubmit={handleSearch} className="relative">
                <input
                  type="text"
                  placeholder="Search services..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="w-full px-4 py-3 bg-gray-800/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-300 focus:border-transparent"
                  aria-label="Search services and content"
                />
                <button
                  type="submit"
                  className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white transition-colors"
                  aria-label="Submit search"
                >
                  <Search className="w-5 h-5" />
                </button>
              </form>

              {/* Mobile Navigation Items */}
              <div className="space-y-4">
                {navigationItems.map((item) => (
                  <div key={item.name} className="border-b border-gray-700/50 pb-4 last:border-b-0">
                    <Link
                      href={item.href}
                      onClick={closeAllDropdowns}
                      className="block text-lg font-medium text-white hover:text-cyan-300 transition-colors py-2"
                    >
                      {item.name}
                    </Link>
                    {item.children && (
                      <div className="mt-2 space-y-2">
                        {item.children.map((child) => (
                          <Link
                            key={child.name}
                            href={child.href}
                            onClick={closeAllDropdowns}
                            className="block text-sm text-gray-400 hover:text-cyan-300 transition-colors py-1 pl-4"
                          >
                            {child.name}
                          </Link>
                        ))}
                      </div>
                    )}
                  </div>
                ))}
              </div>

              {/* Mobile CTA */}
              <div className="pt-4 border-t border-gray-700/50">
                <Link
                  href="/get-started"
                  onClick={closeAllDropdowns}
                  className="block w-full text-center px-6 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-semibold rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-300"
                >
                  Get Started Today
                </Link>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
}
