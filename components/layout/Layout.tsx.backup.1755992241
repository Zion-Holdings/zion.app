<<<<<<< HEAD
      {/* Skip to content link for accessibility */}
      <a 
        href="#main" 
        className="skip-link sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:px-4 focus:py-2 focus:bg-cyan-500 focus:text-white focus:rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-300"
      >
        Skip to main content
      </a>
=======
import React, { useState } from 'react';
import { motion } from 'framer-motion';
import UltraFuturisticNavigation2036 from './UltraFuturisticNavigation2036';
import UltraFuturisticFooter2036 from './UltraFuturisticFooter2036';
import UltraFuturisticSidebar2036 from './UltraFuturisticSidebar2036';
import UltraAdvancedFuturisticBackground2036 from '../backgrounds/UltraAdvancedFuturisticBackground2036';
import TopContactBar from './TopContactBar';
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-3e7c

      {/* Enhanced Futuristic Background */}
      <UltraFuturisticBackground2038 intensity="medium" theme="quantum-neon" />

<<<<<<< HEAD
      {/* Loading State */}
      <AnimatePresence>
        {isLoading && (
          <motion.div
            initial={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 flex items-center justify-center bg-black"
          >
            <div className="text-center">
              <div className="w-16 h-16 border-4 border-cyan-500 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
              <p className="text-cyan-400 text-lg font-semibold">Loading Zion Tech Group</p>
            </div>
          </motion.div>
        )}
      </AnimatePresence>

=======
export default function Layout({ children }: React.PropsWithChildren<LayoutProps>) {
  const [sidebarOpen, setSidebarOpen] = useState(false);

  return (
    <div className="min-h-screen bg-black text-white relative overflow-x-hidden">
      {/* Futuristic Background */}
      <UltraAdvancedFuturisticBackground2036 />
      
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-3e7c
      {/* Layout Structure */}
      <div className="relative z-10">
        {/* Top Contact Bar */}
        <TopContactBar />
        
        {/* Navigation */}
<<<<<<< HEAD
        <UltraAdvancedNavigation2035 />
=======
        <UltraFuturisticNavigation2036 />
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-3e7c
        
        {/* Sidebar and Main Content */}
        <div className="flex">
          <UltraFuturisticSidebar2036 
            isOpen={sidebarOpen} 
            onClose={() => setSidebarOpen(false)}
            aria-hidden={!sidebarOpen}
            aria-label="Main navigation menu"
          />
          
          <main 
            id="main" 
            role="main" 
            className="flex-1 pt-24 lg:pt-28 min-h-screen"
            aria-label="Main content"
          >
            {/* Announcement for screen readers when sidebar opens/closes */}
            <div 
              aria-live="polite" 
              aria-atomic="true" 
              className="sr-only"
            >
              {sidebarOpen ? 'Sidebar opened' : 'Sidebar closed'}
            </div>
            
            {children}
          </main>
        </div>
        
        {/* Footer */}
<<<<<<< HEAD
        <UltraAdvancedFooter2035 />
=======
'use client';

import { ReactNode } from 'react';
import TopContactBar from './TopContactBar';
import EnhancedNavigation2025 from './EnhancedNavigation2025';
import EnhancedSidebar2025 from './EnhancedSidebar2025';
import UltraAdvancedFuturisticBackground from '../backgrounds/UltraAdvancedFuturisticBackground';
import UltraFuturisticFooter2034 from './UltraFuturisticFooter2034';

interface LayoutProps {
  children: ReactNode;
  showSidebar?: boolean;
  showBackground?: boolean;
  backgroundTheme?: 'quantum' | 'neon' | 'holographic' | 'cyberpunk';
  backgroundIntensity?: 'low' | 'medium' | 'high';
}

export default function Layout({
  children,
  showSidebar = true,
  showBackground = true,
  backgroundTheme = 'quantum',
  backgroundIntensity = 'medium'
}: LayoutProps) {
  return (
    <div className="min-h-screen bg-black text-white relative overflow-x-hidden">
      {/* Futuristic Background */}
      {showBackground && (
        <UltraAdvancedFuturisticBackground
          theme={backgroundTheme}
          intensity={backgroundIntensity}
        >
          {/* Background content if needed */}
        </UltraAdvancedFuturisticBackground>
      )}

      {/* Top Contact Bar */}
      <TopContactBar />

      {/* Main Navigation */}
      <EnhancedNavigation2025 />

      {/* Layout Container */}
      <div className="flex min-h-screen pt-32">
        {/* Sidebar */}
        {showSidebar && (
          <div className="hidden lg:block lg:w-80 lg:flex-shrink-0">
            <EnhancedSidebar2025 />
          </div>
        )}

        {/* Main Content */}
        <main className={`flex-1 ${showSidebar ? 'lg:ml-0' : ''}`}>
          <div className="relative z-10">
            {/* Content Container */}
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
              {children}
            </div>
          </div>
        </main>
=======
        <UltraFuturisticFooter2036 />
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-3e7c
      </div>

      {/* Footer */}
      <UltraFuturisticFooter2034 />

      {/* Floating Action Button for Mobile */}
      <div className="fixed bottom-6 right-6 z-50 lg:hidden">
        <button className="w-14 h-14 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-full shadow-2xl shadow-cyan-500/25 hover:shadow-cyan-500/40 hover:scale-110 transition-all duration-200 flex items-center justify-center">
          <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
          </svg>
        </button>
      </div>

      {/* Scroll to Top Button */}
      <button
        onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}
        className="fixed bottom-6 right-6 z-50 w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-600 rounded-full shadow-2xl shadow-purple-500/25 hover:shadow-purple-500/40 hover:scale-110 transition-all duration-200 flex items-center justify-center lg:bottom-6 lg:right-6"
      >
        <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 10l7-7m0 0l7 7m-7-7v18" />
        </svg>
      </button>

      {/* Page Loading Indicator */}
      <div className="fixed top-0 left-0 right-0 z-50 h-1 bg-gradient-to-r from-cyan-500 via-purple-500 to-pink-500 opacity-0 animate-pulse">
        <div className="h-full bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 animate-pulse"></div>
      </div>

      {/* Back to top button */}
      <motion.button
        initial={{ opacity: 0, y: 100 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 1 }}
        onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}
        className="fixed bottom-8 right-8 z-40 p-4 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-full shadow-2xl hover:from-cyan-600 hover:to-blue-700 transition-all duration-300 transform hover:scale-110 focus:outline-none focus:ring-4 focus:ring-cyan-300/50"
        aria-label="Back to top"
      >
        <svg 
          className="w-6 h-6" 
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24"
          aria-hidden="true"
        >
          <path 
            strokeLinecap="round" 
            strokeLinejoin="round" 
            strokeWidth={2} 
            d="M5 10l7-7m0 0l7 7m-7-7v18" 
          />
        </svg>
      </motion.button>
    </div>
  );
}
