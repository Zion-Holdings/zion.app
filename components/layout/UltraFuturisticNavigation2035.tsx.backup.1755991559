import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  Menu, ChevronDown, X, Phone, Mail, MapPin, ArrowRight,
  Brain, Rocket, Shield, Zap, Target, Atom, BookOpen,
  Truck, DollarSign, BarChart3, Globe, Users, Star, Sparkles, 
  Cpu, Lock, Cloud, Settings, Eye, Award, Clock, Heart, Lightbulb,
  Search, Grid, List, TrendingUp, Shield as ShieldIcon, Globe as GlobeIcon,
  User, ShoppingCart, Bell, HelpCircle, FileText, Video, Headphones, 
  Code, Database, Network, Server, Monitor, Smartphone,
  Camera, Gamepad2, Palette, Music, Film, BookOpenCheck,
  Building, MessageCircle, Layers, Cpu as CpuIcon, Database as DatabaseIcon,
  Shield as ShieldIcon2, Zap as ZapIcon2, Brain as BrainIcon2, Rocket as RocketIcon2
} from 'lucide-react';

interface NavigationItem {
  name: string;
  href: string;
  icon?: React.ReactNode;
  description?: string;
  children?: NavigationItem[];
  badge?: string;
  title?: string;
  featured?: boolean;
  category?: string;
}

const contactInfo = {
  mobile: '+1 302 464 0950',
  email: 'kleber@ziontechgroup.com',
  address: '364 E Main St STE 1008 Middletown DE 19709',
  website: 'https://ziontechgroup.com'
};

function normalizeHref(href: string): string {
  if (!href) return href;
  if (href.startsWith('http://') || href.startsWith('https://') || href.startsWith('mailto:') || href.startsWith('tel:')) {
    return href;
  }
  if (!href.startsWith('/')) return href;
  const hasQueryOrHash = href.includes('?') || href.includes('#');
  if (hasQueryOrHash) return href;
  return href.endsWith('/') ? href : href + '/';
}

const navigationItems: NavigationItem[] = [
  {
<<<<<<< HEAD
    name: 'Pricing',
    href: '/pricing',
    icon: <DollarSign className="w-5 h-5" />,
    description: 'Plans and average market prices',
    children: [
      { name: 'Standard Pricing', href: '/pricing', description: 'Our plans' },
      { name: 'Market Pricing', href: '/market-pricing', description: 'Compare market averages' }
=======
    name: 'Micro SAAS Services',
    href: '/services',
    icon: <Rocket className="w-5 h-5" />,
    description: 'Innovative business solutions and automation',
    badge: 'New 2035',
    category: 'micro-saas',
    children: [
      { 
        name: 'AI-Powered Business Intelligence', 
        href: '/services/ai-powered-business-intelligence-suite', 
        description: 'Transform data into actionable insights',
        featured: true
      },
      { 
        name: 'Autonomous Customer Service AI', 
        href: '/services/autonomous-customer-service-ai', 
        description: '24/7 AI customer support',
        featured: true
      },
      { 
        name: 'AI-Powered Marketing Automation', 
        href: '/services/ai-powered-marketing-automation', 
        description: 'Intelligent campaign optimization'
      },
      { 
        name: 'Autonomous Logistics Optimization', 
        href: '/services/autonomous-logistics-optimization', 
        description: 'AI-powered route and fleet optimization'
      },
      { 
        name: 'AI-Powered HR Analytics', 
        href: '/services/ai-powered-hr-analytics-platform', 
        description: 'People analytics and insights'
      },
      { 
        name: 'Blockchain Supply Chain Tracking', 
        href: '/services/blockchain-supply-chain-tracking', 
        description: 'Transparent supply chain visibility'
      },
      { 
        name: 'Predictive Maintenance IoT', 
        href: '/services/predictive-maintenance-iot-platform', 
        description: 'Prevent equipment failures'
      },
      { 
        name: 'View All Micro SAAS', 
        href: '/services?category=micro-saas', 
        description: 'Complete micro SAAS portfolio'
      }
    ]
  },
  {
    name: 'AI & Consciousness',
    href: '/ai-services',
    icon: <Brain className="w-5 h-5" />,
    description: 'Revolutionary AI consciousness and emotional intelligence',
    badge: 'Revolutionary',
    category: 'ai-consciousness',
    featured: true,
    children: [
      { 
        name: 'AI Consciousness Evolution Platform', 
        href: '/services/ai-consciousness-evolution-platform', 
        description: 'Develop self-aware AI systems',
        featured: true
      },
      { 
        name: 'Quantum Emotional Intelligence Engine', 
        href: '/services/quantum-emotional-intelligence-engine', 
        description: 'Quantum-powered emotional AI'
      },
      { 
        name: 'Autonomous Creative AI Studio', 
        href: '/services/autonomous-creative-ai-studio', 
        description: 'AI that creates original content'
      },
      { 
        name: 'Quantum Memory Consolidation AI', 
        href: '/services/quantum-memory-consolidation-ai', 
        description: 'Optimize human learning and memory'
      },
      { 
        name: 'Autonomous Research AI Assistant', 
        href: '/services/autonomous-research-ai-assistant', 
        description: 'AI that conducts independent research'
      },
      { 
        name: 'AI Consciousness Monitoring', 
        href: '/services/ai-consciousness-monitoring-system', 
        description: 'Monitor AI consciousness development'
      },
      { 
        name: 'View All AI Services', 
        href: '/ai-services', 
        description: 'Complete AI consciousness portfolio'
      }
    ]
  },
  {
    name: 'IT & Infrastructure',
    href: '/it-services',
    icon: <Cpu className="w-5 h-5" />,
    description: 'Next-generation IT solutions and infrastructure',
    badge: 'Quantum',
    category: 'it-infrastructure',
    children: [
      { 
        name: 'Quantum Cloud Infrastructure', 
        href: '/services/quantum-cloud-infrastructure-platform', 
        description: 'Quantum-powered cloud platform',
        featured: true
      },
      { 
        name: 'Autonomous Cybersecurity Orchestrator', 
        href: '/services/autonomous-cybersecurity-orchestrator', 
        description: 'AI-powered threat defense'
      },
      { 
        name: 'Quantum Data Center Solutions', 
        href: '/services/quantum-data-center-solutions', 
        description: 'Next-generation data centers'
      },
      { 
        name: 'AI-Powered DevOps Automation', 
        href: '/services/ai-powered-devops-automation', 
        description: 'Intelligent development pipeline'
      },
      { 
        name: 'Quantum Edge Computing Platform', 
        href: '/services/quantum-edge-computing-platform', 
        description: 'Quantum computing at the edge'
      },
      { 
        name: 'Autonomous Network Optimization', 
        href: '/services/autonomous-network-optimization', 
        description: 'AI-powered network optimization'
      },
      { 
        name: 'View All IT Services', 
        href: '/it-services', 
        description: 'Complete IT infrastructure portfolio'
      }
    ]
  },
  {
    name: 'Advanced Solutions',
    href: '/advanced-solutions',
    icon: <Zap className="w-5 h-5" />,
    description: 'Cutting-edge technology solutions',
    badge: 'Advanced',
    category: 'advanced-solutions',
    children: [
      { 
        name: 'Quantum Predictive Analytics', 
        href: '/services/quantum-predictive-analytics-engine', 
        description: 'Predict the future with quantum AI'
      },
      { 
        name: 'Autonomous Innovation AI', 
        href: '/services/autonomous-innovation-ai', 
        description: 'AI that generates breakthrough ideas'
      },
      { 
        name: 'Quantum Emotional Healing AI', 
        href: '/services/quantum-emotional-healing-ai', 
        description: 'AI-powered emotional healing'
      },
      { 
        name: 'AI Consciousness Collaboration', 
        href: '/services/ai-consciousness-collaboration-platform', 
        description: 'Collaborate with conscious AI'
      },
      { 
        name: 'Quantum Blockchain Infrastructure', 
        href: '/services/quantum-blockchain-infrastructure', 
        description: 'Future-proof blockchain'
      },
      { 
        name: 'Quantum Storage Solutions', 
        href: '/services/quantum-storage-solutions', 
        description: 'Next-generation storage'
      },
      { 
        name: 'View All Advanced Solutions', 
        href: '/advanced-solutions', 
        description: 'Complete advanced solutions portfolio'
      }
    ]
  },
  {
    name: 'All Services',
    href: '/comprehensive-services-showcase-2025',
    icon: <Globe className="w-5 h-5" />,
    description: 'Complete portfolio of all technology services',
    badge: 'Showcase',
    featured: true,
    children: [
      { name: 'View All Services', href: '/comprehensive-services-showcase-2025', description: 'Complete services portfolio' },
      { name: 'Ultimate 2035 Futuristic', href: '/ultimate-2035-futuristic-services-showcase', description: 'Revolutionary future technology', featured: true },
      { name: 'Ultimate 2025 Micro SAAS', href: '/ultimate-2025-micro-saas-showcase', description: 'Latest innovative services', featured: true },
      { name: 'Service Categories', href: '/comprehensive-services-showcase-2025', description: 'Browse by category' },
      { name: 'Pricing Comparison', href: '/comprehensive-services-showcase-2025', description: 'Compare service costs' },
      { name: 'Service Search', href: '/comprehensive-services-showcase-2025', description: 'Find specific services' },
      { name: 'Market Pricing', href: '/market-pricing', description: 'Average market prices & references' },
      { name: 'Latest Innovations', href: '/revolutionary-2025-services-showcase', description: 'Cutting-edge solutions' },
      { name: '2026 Services', href: '/revolutionary-2026-services', description: 'Next generation solutions' },
      { name: '2027 Services', href: '/revolutionary-2027-services-showcase', description: 'Future-ready services' },
      { name: 'Ultimate 2026', href: '/ultimate-2026-services-showcase', description: 'Premium service collection' },
      { name: 'Enterprise Solutions', href: '/enterprise-solutions-showcase', description: 'Enterprise-grade solutions' },
      { name: 'Innovative Business Solutions', href: '/innovative-business-solutions', description: 'Business transformation services' }
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-62b6
    ]
  },
  {
    name: 'Resources',
    href: '/resources',
    icon: <BookOpen className="w-5 h-5" />,
    description: 'Knowledge, training, and support resources',
    category: 'resources',
    children: [
<<<<<<< HEAD
      { name: 'Blog', href: '/blog', description: 'Insights and updates' },
      { name: 'Case Studies', href: '/case-studies', description: 'Proven results' },
      { name: 'Developer', href: '/developer', description: 'Docs and SDKs' },
      { name: 'API Docs', href: '/api-documentation', description: 'API reference' },
      { name: 'Services Advertising', href: '/services-advertising', description: 'Features, benefits and market pricing links' }
    ]
  },
  {
    name: 'Contact',
    href: '/contact',
    icon: <Phone className="w-5 h-5" />,
    description: 'Talk to our team',
    featured: true,
    children: [
      { name: 'Contact Sales', href: '/contact', description: 'Get a quote' },
      { name: 'Support', href: '/support', description: 'Help center' }
    ]
  },
  {
    name: 'Services',
    href: '/services',
    icon: <Grid className="w-5 h-5" />,
    description: 'Browse by category',
    badge: 'New',
    children: [
      { name: 'AI & Data', href: '/services#ai', description: 'AI, data, ML services' },
      { name: 'Developer Tools', href: '/services#developer-tools', description: 'Dev productivity & tooling' },
      { name: 'Cloud & FinOps', href: '/services#cloud', description: 'Cloud, cost, platform' },
      { name: 'Observability', href: '/services#observability', description: 'Monitoring & telemetry' },
      { name: 'Developer Tools', href: '/services#developer-tools', description: 'Developer productivity' },
      { name: 'Training & Education', href: '/training', description: 'Learning and R&D' },
      { name: 'SEO Automation Suite', href: '/seo-automation-suite', description: 'Technical SEO automation' },
      { name: 'IT Asset Discovery Agent', href: '/it-asset-discovery-agent', description: 'Agentless discovery' },
      { name: 'Managed Postgres HA', href: '/managed-postgres-ha', description: 'HA Postgres ops' },
      { name: 'Micro SAAS', href: '/micro-saas', description: 'Business tools and automation' },
      { name: 'DORA Metrics Dashboard', href: '/dora-metrics-dashboard', description: 'DevOps performance analytics' },
      { name: 'Kubernetes Cost Guardrails', href: '/kubernetes-cost-guardrails', description: 'Policy-driven cost controls' },
      { name: 'OpenTelemetry Quickstart', href: '/opentelemetry-quickstart', description: 'Traces, metrics, logs in days' },
      { name: 'API Usage Billing Meter', href: '/api-usage-billing-meter', description: 'Metered billing for APIs' },
      { name: 'Data Quality Monitor', href: '/data-quality-monitor', description: 'Freshness and anomaly checks' },
      { name: 'Consent & Cookie Manager', href: '/consent-cookie-manager', description: 'GDPR/CCPA consent' },
      { name: 'Edge Redirect Manager', href: '/edge-redirect-manager', description: 'Safe redirects at edge' }
    ]
  },
  {
    name: 'Solutions',
    href: '/solutions',
    icon: <Shield className="w-5 h-5" />,
    description: 'Industry-specific solutions',
    children: [
      { name: 'Enterprise', href: '/solutions/enterprise', description: 'Large-scale deployments' },
      { name: 'Healthcare', href: '/solutions/healthcare', description: 'HIPAA-compliant solutions' },
      { name: 'Financial Services', href: '/solutions/financial', description: 'Fintech & banking' },
      { name: 'Manufacturing', href: '/solutions/manufacturing', description: 'Industry 4.0 & IoT' },
      { name: 'Retail', href: '/solutions/retail', description: 'E-commerce & omnichannel' },
      { name: 'Government', href: '/solutions/government', description: 'Public sector & compliance' },
      { name: 'Education', href: '/solutions/education', description: 'EdTech & learning platforms' },
      { name: 'Energy & Utilities', href: '/solutions/energy', description: 'Smart grid & sustainability' },
      { name: 'Transportation', href: '/solutions/transportation', description: 'Logistics & mobility' }
    ]
  },
  {
    name: 'Resources',
    href: '/resources',
    icon: <BookOpen className="w-5 h-5" />,
    description: 'Documentation & support',
    children: [
      { name: 'Documentation', href: '/resources/documentation', description: 'Technical guides & APIs' },
      { name: 'Case Studies', href: '/resources/case-studies', description: 'Success stories & ROI' },
      { name: 'Blog', href: '/blog', description: 'Industry insights & updates' },
      { name: 'Webinars', href: '/webinars', description: 'Live & on-demand sessions' },
      { name: 'Training', href: '/training', description: 'Certification programs' },
      { name: 'Support Center', href: '/support', description: 'Help & troubleshooting' },
      { name: 'API Reference', href: '/resources/api', description: 'Developer documentation' },
      { name: 'Tools', href: '/resources/tools', description: 'Free utilities & calculators' }
=======
      { name: 'Training & Education', href: '/training', description: 'Learning and R&D programs' },
      { name: 'Documentation', href: '/docs', description: 'Technical documentation and guides' },
      { name: 'API Reference', href: '/api', description: 'API documentation and examples' },
      { name: 'White Papers', href: '/white-papers', description: 'Research and insights' },
      { name: 'Webinars', href: '/webinars', description: 'Educational webinars and events' },
      { name: 'Support Center', href: '/support', description: 'Help and support resources' },
      { name: 'Community', href: '/community', description: 'User community and forums' }
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-62b6
    ]
  },
  {
    name: 'Company',
<<<<<<< HEAD
    href: '/company',
    icon: <Building className="w-5 h-5" />,
    description: 'About Zion Tech Group',
    children: [
      { name: 'About Us', href: '/about', description: 'Our story & mission' },
      { name: 'Leadership', href: '/leadership', description: 'Executive team' },
      { name: 'Careers', href: '/careers', description: 'Join our team' },
      { name: 'Partners', href: '/partners', description: 'Partnership opportunities' },
      { name: 'News', href: '/news', description: 'Company updates' },
      { name: 'Press', href: '/press', description: 'Media resources' },
      { name: 'Contact', href: '/contact', description: 'Get in touch' },
      { name: 'Locations', href: '/locations', description: 'Global presence' }
=======
    href: '/about',
    icon: <Building className="w-5 h-5" />,
    description: 'About Zion Tech Group and company information',
    category: 'company',
    children: [
      { name: 'About Us', href: '/about', description: 'Company overview and mission' },
      { name: 'Leadership', href: '/leadership', description: 'Executive team and leadership' },
      { name: 'Careers', href: '/careers', description: 'Job opportunities and culture' },
      { name: 'Partners', href: '/partners', description: 'Partnership opportunities' },
      { name: 'Investors', href: '/investors', description: 'Investor information' },
      { name: 'News & Events', href: '/news', description: 'Company news and events' },
      { name: 'Contact', href: '/contact', description: 'Get in touch with us' }
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-62b6
    ]
  }
];

<<<<<<< HEAD
const UltraFuturisticNavigation2035: React.FC = () => {
=======
const contactItems = [
  { name: 'Call +1 302 464 0950', href: 'tel:+13024640950', icon: <Phone className="w-4 h-4" />, primary: true },
  { name: 'Email kleber@ziontechgroup.com', href: 'mailto:kleber@ziontechgroup.com', icon: <Mail className="w-4 h-4" /> },
  { name: '364 E Main St STE 1008 Middletown DE 19709', href: '#', icon: <MapPin className="w-4 h-4" /> }
];

export default function UltraFuturisticNavigation2035() {
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-62b6
  const [isOpen, setIsOpen] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);
  const [searchQuery, setSearchQuery] = useState('');

  const toggleDropdown = (name: string) => {
    setActiveDropdown(activeDropdown === name ? null : name);
  };

  const closeAllDropdowns = () => {
    setActiveDropdown(null);
    setIsOpen(false);
  };

<<<<<<< HEAD
  const handleMenuClick = () => {
    setIsOpen(!isOpen);
    if (isOpen) {
      closeDropdowns();
    }
  };

  return (
    <nav className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
      isScrolled ? 'bg-black/95 backdrop-blur-md shadow-2xl' : 'bg-transparent'
    }`}>
      {/* Top Contact Bar */}
      <div className="bg-gradient-to-r from-cyan-900/80 via-purple-900/80 to-pink-900/80 backdrop-blur-sm border-b border-cyan-500/20">
        <div className="container mx-auto px-4 py-2">
          <div className="flex items-center justify-between text-sm">
            <div className="flex items-center space-x-6 text-cyan-300">
              <a href={`tel:${contactInfo.mobile}`} className="flex items-center gap-2 hover:text-cyan-200 transition-colors">
                <Phone className="w-4 h-4" />
                <span className="hidden sm:inline">{contactInfo.mobile}</span>
              </a>
              <a href={`mailto:${contactInfo.email}`} className="flex items-center gap-2 hover:text-cyan-200 transition-colors">
                <Mail className="w-4 h-4" />
                <span className="hidden sm:inline">{contactInfo.email}</span>
              </a>
              <div className="hidden md:flex items-center gap-2 text-pink-300">
                <MapPin className="w-4 h-4" />
                <span className="text-xs">{contactInfo.address}</span>
              </div>
            </div>
            
            <div className="flex items-center space-x-4">
              <Link href="/market-pricing" className="text-cyan-300 hover:text-white transition-colors text-sm">
                Market Pricing
              </Link>
              <Link href="/services-advertising" className="text-purple-300 hover:text-white transition-colors text-sm">
                Services Advertising
              </Link>
              <Link href="/get-started" className="bg-gradient-to-r from-cyan-500 to-blue-500 text-white px-4 py-1 rounded-full text-sm hover:from-cyan-600 hover:to-blue-600 transition-all duration-200 hover:scale-105">
                Get Started
              </Link>
            </div>
=======
  const filteredNavigationItems = navigationItems.filter(item =>
    item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
    item.description?.toLowerCase().includes(searchQuery.toLowerCase()) ||
    item.children?.some(child => 
      child.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
      child.description?.toLowerCase().includes(searchQuery.toLowerCase())
    )
  );

  return (
    <nav className="bg-black/20 backdrop-blur-xl border-b border-white/10 sticky top-0 z-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* Logo */}
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            className="flex items-center space-x-3"
          >
            <div className="w-10 h-10 bg-gradient-to-r from-cyan-400 via-blue-500 to-purple-600 rounded-xl flex items-center justify-center">
              <span className="text-white font-bold text-lg">Z</span>
            </div>
            <div className="hidden sm:block">
              <span className="text-white font-bold text-xl">ZionTech Group</span>
              <div className="text-xs text-cyan-400">Future of Technology</div>
            </div>
          </motion.div>

          {/* Desktop Navigation */}
          <div className="hidden lg:flex items-center space-x-1">
            {filteredNavigationItems.map((item) => (
              <div key={item.name} className="relative group">
                <button
                  onClick={() => toggleDropdown(item.name)}
                  className={`flex items-center space-x-2 px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 ${
                    activeDropdown === item.name
                      ? 'text-cyan-400 bg-cyan-400/10 border border-cyan-400/20'
                      : 'text-gray-300 hover:text-cyan-400 hover:bg-white/5'
                  }`}
                >
                  {item.icon}
                  <span>{item.name}</span>
                  {item.badge && (
                    <span className="px-2 py-1 text-xs bg-gradient-to-r from-cyan-500 to-blue-500 text-white rounded-full">
                      {item.badge}
                    </span>
                  )}
                  <ChevronDown className={`w-4 h-4 transition-transform duration-300 ${
                    activeDropdown === item.name ? 'rotate-180' : ''
                  }`} />
                </button>

                {/* Dropdown Menu */}
                <AnimatePresence>
                  {activeDropdown === item.name && (
                    <motion.div
                      initial={{ opacity: 0, y: 10, scale: 0.95 }}
                      animate={{ opacity: 1, y: 0, scale: 1 }}
                      exit={{ opacity: 0, y: 10, scale: 0.95 }}
                      transition={{ duration: 0.2 }}
                      className="absolute top-full left-0 mt-2 w-80 bg-black/90 backdrop-blur-xl border border-white/10 rounded-xl shadow-2xl z-50"
                    >
                      <div className="p-4">
                        <div className="mb-3">
                          <h3 className="text-white font-semibold text-lg">{item.name}</h3>
                          <p className="text-gray-400 text-sm">{item.description}</p>
                        </div>
                        <div className="space-y-1">
                          {item.children?.map((child) => (
                            <Link
                              key={child.name}
                              href={normalizeHref(child.href)}
                              onClick={closeAllDropdowns}
                              className={`flex items-start space-x-3 p-3 rounded-lg transition-all duration-300 ${
                                child.featured
                                  ? 'bg-gradient-to-r from-cyan-500/10 to-blue-500/10 border border-cyan-400/20'
                                  : 'hover:bg-white/5'
                              }`}
                            >
                              <div className="flex-shrink-0 mt-1">
                                {child.featured ? (
                                  <Star className="w-4 h-4 text-yellow-400" />
                                ) : (
                                  <ArrowRight className="w-4 h-4 text-gray-400" />
                                )}
                              </div>
                              <div className="flex-1 min-w-0">
                                <p className={`text-sm font-medium ${
                                  child.featured ? 'text-cyan-400' : 'text-white'
                                }`}>
                                  {child.name}
                                </p>
                                <p className="text-gray-400 text-xs mt-1">{child.description}</p>
                              </div>
                            </Link>
                          ))}
                        </div>
                      </div>
                    </motion.div>
                  )}
                </AnimatePresence>
              </div>
            ))}
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-62b6
          </div>

          {/* Contact and Actions */}
          <div className="hidden lg:flex items-center space-x-4">
            {/* Search */}
            <div className="relative">
              <input
                type="text"
                placeholder="Search services..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="w-64 px-4 py-2 bg-white/5 border border-white/10 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent"
              />
              <Search className="absolute right-3 top-2.5 w-4 h-4 text-gray-400" />
            </div>

            {/* Contact Button */}
            <Link
              href="/contact"
              className="bg-gradient-to-r from-cyan-500 to-blue-500 text-white px-6 py-2 rounded-lg hover:from-cyan-600 hover:to-blue-600 transition-all duration-300 text-sm font-medium"
            >
              Contact Us
            </Link>
          </div>

          {/* Mobile Menu Button */}
          <button
            className="lg:hidden text-white p-2"
            onClick={() => setIsOpen(!isOpen)}
            aria-controls="mobile-navigation"
            aria-expanded={isOpen}
            aria-label={isOpen ? 'Close menu' : 'Open menu'}
          >
            {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
        </div>
      </div>

<<<<<<< HEAD
      {/* Main Navigation */}
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between h-20">
          {/* Logo */}
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.6 }}
            className="flex items-center space-x-3"
          >
            <Link href="/" className="flex items-center space-x-3 group">
              <div className="w-12 h-12 bg-gradient-to-r from-cyan-500 via-purple-500 to-pink-500 rounded-2xl flex items-center justify-center text-white font-bold text-xl shadow-lg group-hover:shadow-cyan-500/25 transition-all duration-300 group-hover:scale-110">
                Z
              </div>
              <div className="hidden sm:block">
                <div className="text-xl font-bold text-white group-hover:text-cyan-300 transition-colors">
                  Zion Tech Group
                </div>
                <div className="text-xs text-cyan-400">Future Technology Solutions</div>
              </div>
            </Link>
          </motion.div>

          {/* Desktop Navigation */}
          <div className="hidden lg:flex items-center space-x-8">
            {navigationItems.map((item) => (
              <div key={item.name} className="relative group">
                <button
                  onClick={() => toggleDropdown(item.name)}
                  className="flex items-center space-x-2 text-white hover:text-cyan-300 transition-colors duration-200 py-2 px-3 rounded-lg hover:bg-white/5"
                >
                  {item.icon}
                  <span className="font-medium">{item.name}</span>
                  {item.badge && (
                    <span className="bg-gradient-to-r from-cyan-500 to-blue-500 text-white text-xs px-2 py-1 rounded-full">
                      {item.badge}
                    </span>
                  )}
                  <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${
                    activeDropdown === item.name ? 'rotate-180' : ''
                  }`} />
                </button>

                {/* Dropdown Menu */}
                <AnimatePresence>
                  {activeDropdown === item.name && (
                    <motion.div
                      initial={{ opacity: 0, y: 10, scale: 0.95 }}
                      animate={{ opacity: 1, y: 0, scale: 1 }}
                      exit={{ opacity: 0, y: 10, scale: 0.95 }}
                      transition={{ duration: 0.2 }}
                      className="absolute top-full left-0 mt-2 w-80 bg-black/95 backdrop-blur-md border border-cyan-500/20 rounded-2xl shadow-2xl shadow-cyan-500/10 overflow-hidden"
                    >
                      <div className="p-6">
                        <div className="mb-4">
                          <h3 className="text-lg font-semibold text-white mb-2">{item.name}</h3>
                          <p className="text-sm text-gray-400">{item.description}</p>
                        </div>
                        
                        <div className="space-y-3">
                          {item.children?.map((child) => (
                            <Link
                              key={child.name}
                              href={normalizeHref(child.href)}
                              onClick={closeDropdowns}
                              className="flex items-start space-x-3 p-3 rounded-lg hover:bg-white/5 transition-colors duration-200 group"
                            >
                              <div className="w-2 h-2 bg-cyan-400 rounded-full mt-2 group-hover:bg-cyan-300 transition-colors"></div>
                              <div className="flex-1">
                                <div className="text-white group-hover:text-cyan-300 transition-colors font-medium">
                                  {child.name}
                                </div>
                                <div className="text-sm text-gray-400 mt-1">
                                  {child.description}
                                </div>
                              </div>
                              <ArrowRight className="w-4 h-4 text-gray-500 group-hover:text-cyan-400 transition-colors opacity-0 group-hover:opacity-100" />
                            </Link>
                          ))}
                        </div>
                      </div>
                    </motion.div>
                  )}
                </AnimatePresence>
              </div>
            ))}
          </div>

          {/* Right Side Actions */}
          <div className="hidden lg:flex items-center space-x-4">
            <Link href="/quote" className="text-white hover:text-cyan-300 transition-colors">
              Get Quote
            </Link>
            <Link href="/demo" className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-6 py-2 rounded-full hover:from-purple-600 hover:to-pink-600 transition-all duration-200 hover:scale-105">
              Book Demo
            </Link>
          </div>

          {/* Mobile Menu Button */}
          <button
            onClick={handleMenuClick}
            className="lg:hidden p-2 text-white hover:text-cyan-300 transition-colors"
            aria-label="Toggle mobile menu"
          >
            {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
        </div>
      </div>

      {/* Mobile Navigation */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3 }}
            className="lg:hidden bg-black/95 backdrop-blur-md border-t border-cyan-500/20 overflow-hidden"
          >
            <div className="container mx-auto px-4 py-6">
              <div className="space-y-6">
                {navigationItems.map((item) => (
                  <div key={item.name}>
                    <button
                      onClick={() => toggleDropdown(item.name)}
                      className="flex items-center justify-between w-full text-left text-white hover:text-cyan-300 transition-colors py-3 px-4 rounded-lg hover:bg-white/5"
                    >
                      <div className="flex items-center space-x-3">
                        {item.icon}
                        <span className="font-medium">{item.name}</span>
                        {item.badge && (
                          <span className="bg-gradient-to-r from-cyan-500 to-blue-500 text-white text-xs px-2 py-1 rounded-full">
                            {item.badge}
                          </span>
                        )}
                      </div>
                      <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${
=======
        {/* Mobile Navigation */}
        <AnimatePresence>
          {isOpen && (
            <motion.div
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: 'auto' }}
              exit={{ opacity: 0, height: 0 }}
              className="lg:hidden border-t border-white/10"
              id="mobile-navigation"
            >
              <div className="py-4 space-y-4">
                {/* Mobile Search */}
                <div className="relative">
                  <input
                    type="text"
                    placeholder="Search services..."
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    className="w-full px-4 py-2 bg-white/5 border border-white/10 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent"
                  />
                  <Search className="absolute right-3 top-2.5 w-4 h-4 text-gray-400" />
                </div>

                {/* Mobile Navigation Items */}
                {filteredNavigationItems.map((item) => (
                  <div key={item.name} className="space-y-2">
                    <button
                      onClick={() => toggleDropdown(item.name)}
                      className={`flex items-center justify-between w-full text-left px-4 py-3 rounded-lg transition-all duration-300 ${
                        activeDropdown === item.name
                          ? 'bg-cyan-400/20 text-cyan-400'
                          : 'text-gray-300 hover:bg-white/10'
                      }`}
                    >
                      <div className="flex items-center space-x-3">
                        {item.icon}
                        <div>
                          <span className="font-medium">{item.name}</span>
                          {item.badge && (
                            <span className="ml-2 px-2 py-1 text-xs bg-gradient-to-r from-cyan-500 to-blue-500 text-white rounded-full">
                              {item.badge}
                            </span>
                          )}
                        </div>
                      </div>
                      <ChevronDown className={`w-4 h-4 transition-transform duration-300 ${
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-62b6
                        activeDropdown === item.name ? 'rotate-180' : ''
                      }`} />
                    </button>

<<<<<<< HEAD
                    {activeDropdown === item.name && (
                      <motion.div
                        initial={{ opacity: 0, y: -10 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -10 }}
                        transition={{ duration: 0.2 }}
                        className="ml-8 mt-2 space-y-2"
                      >
                        {item.children?.map((child) => (
                          <Link
                            key={child.name}
                            href={normalizeHref(child.href)}
                            onClick={() => {
                              setIsOpen(false);
                              closeDropdowns();
                            }}
                            className="block text-gray-300 hover:text-cyan-300 transition-colors py-2 px-4 rounded-lg hover:bg-white/5"
                          >
                            <div className="font-medium">{child.name}</div>
                            <div className="text-sm text-gray-500 mt-1">{child.description}</div>
                          </Link>
                        ))}
                      </motion.div>
                    )}
                  </div>
                ))}

                <div className="pt-6 border-t border-cyan-500/20">
                  <div className="space-y-3">
                    <Link
                      href="/quote"
                      onClick={() => setIsOpen(false)}
                      className="block text-white hover:text-cyan-300 transition-colors py-2 px-4 rounded-lg hover:bg-white/5"
                    >
                      Get Quote
                    </Link>
                    <Link
                      href="/demo"
                      onClick={() => setIsOpen(false)}
                      className="block bg-gradient-to-r from-purple-500 to-pink-500 text-white px-6 py-3 rounded-full text-center hover:from-purple-600 hover:to-pink-600 transition-all duration-200"
                    >
                      Book Demo
                    </Link>
=======
                    {/* Mobile Dropdown */}
                    <AnimatePresence>
                      {activeDropdown === item.name && (
                        <motion.div
                          initial={{ opacity: 0, height: 0 }}
                          animate={{ opacity: 1, height: 'auto' }}
                          exit={{ opacity: 0, height: 0 }}
                          className="ml-4 space-y-1"
                        >
                          {item.children?.map((child) => (
                            <Link
                              key={child.name}
                              href={normalizeHref(child.href)}
                              onClick={closeAllDropdowns}
                              className={`block px-4 py-2 rounded-lg transition-all duration-300 ${
                                child.featured
                                  ? 'bg-gradient-to-r from-cyan-500/10 to-blue-500/10 text-cyan-400'
                                  : 'text-gray-400 hover:text-white hover:bg-white/5'
                              }`}
                            >
                              <div className="flex items-center space-x-2">
                                {child.featured && <Star className="w-3 h-3 text-yellow-400" />}
                                <span className="text-sm">{child.name}</span>
                              </div>
                              <p className="text-xs mt-1 opacity-75">{child.description}</p>
                            </Link>
                          ))}
                        </motion.div>
                      )}
                    </AnimatePresence>
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-62b6
                  </div>
                ))}

                {/* Mobile Contact Info */}
                <div className="pt-4 border-t border-white/10 space-y-2">
                  {contactItems.map((item) => (
                    <a
                      key={item.name}
                      href={item.href}
                      className={`flex items-center space-x-3 px-4 py-2 rounded-lg transition-all duration-300 ${
                        item.primary
                          ? 'bg-gradient-to-r from-cyan-500 to-blue-500 text-white'
                          : 'text-cyan-400 hover:bg-white/10'
                      }`}
                      onClick={closeAllDropdowns}
                    >
                      {item.icon}
                      <span className="text-sm">{item.name}</span>
                    </a>
                  ))}
                </div>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </nav>
  );
}