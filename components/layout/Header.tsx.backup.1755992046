import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { Menu, X, ChevronDown, Zap, Globe, Shield } from 'lucide-react';

const Header = () => {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [isProductDropdownOpen, setIsProductDropdownOpen] = useState(false);
  const [isSolutionsDropdownOpen, setIsSolutionsDropdownOpen] = useState(false);
  const router = useRouter();

  useEffect(() => {
    if (typeof window === 'undefined') return;
    
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 20);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Close mobile menu when route changes
  useEffect(() => {
    setIsMobileMenuOpen(false);
    setIsProductDropdownOpen(false);
  }, [router.pathname]);

  // Close dropdown when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (isProductDropdownOpen) {
        setIsProductDropdownOpen(false);
      }
    };

    document.addEventListener('click', handleClickOutside);
    return () => document.removeEventListener('click', handleClickOutside);
  }, [isProductDropdownOpen]);

  const navigation = [
    { name: 'Product', href: '#', hasDropdown: true },
<<<<<<< HEAD
    { name: 'Services', href: '/services' },
    { name: 'Micro SaaS', href: '/micro-saas' },
=======
    { name: 'Solutions', href: '/services' },
    { name: 'Micro SaaS', href: '/micro-saas-services' },
>>>>>>> origin/cursor/enhance-app-with-micro-saas-and-deploy-dfdd
    { name: 'Resources', href: '/resources' },
    { name: 'Company', href: '/about' },
    { name: 'Pricing', href: '/pricing' },
    { name: 'Compare', href: '/pricing-comparison' },
  ];

  const productDropdown = [
<<<<<<< HEAD
    { name: 'Social Media Analytics', href: '/services', description: 'AI-powered social media performance tracking' },
    { name: 'SEO Content Optimization', href: '/services', description: 'AI-driven content optimization for better rankings' },
    { name: 'Email Marketing Automation', href: '/services', description: 'Intelligent email automation with AI segmentation' },
    { name: 'Customer Feedback Platform', href: '/services', description: 'AI-powered feedback collection and analysis' },
    { name: 'Business Intelligence', href: '/services', description: 'Real-time BI dashboards and reporting' },
    { name: 'AI Chatbot Builder', href: '/services', description: 'No-code AI chatbot platform' },
=======
    { name: 'AI Code Assistant', href: '/ai-assistant', description: 'Intelligent code completion and suggestions' },
    { name: 'Cloud Platform', href: '/cloud-platform', description: 'Scalable cloud infrastructure' },
    { name: 'Automation Hub', href: '/automation', description: 'AI-powered workflow automation' },
    { name: 'Analytics', href: '/analytics', description: 'Real-time insights and reporting' },
    { name: 'Micro SaaS Services', href: '/micro-saas-services', description: 'Professional business solutions' },
>>>>>>> origin/cursor/enhance-app-with-micro-saas-and-deploy-dfdd
  ];

  const isActive = (href: string) => router.pathname === href;

  return (
    <header
      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-500 ${
        isScrolled
          ? 'bg-black/90 backdrop-blur-2xl border-b border-white/20 shadow-2xl shadow-black/50'
          : 'bg-transparent'
      }`}
      role="banner"
    >
      {/* Futuristic Background Glow */}
      {isScrolled && (
        <div className="absolute inset-0 bg-gradient-to-r from-blue-500/5 via-purple-500/5 to-cyan-500/5" />
      )}

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-16 lg:h-20">
          {/* Enhanced Logo */}
          <Link href="/" className="flex items-center space-x-3 group">
            <div className="relative">
              <div className="w-10 h-10 bg-gradient-to-br from-blue-500 via-purple-500 to-cyan-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-all duration-300 shadow-lg group-hover:shadow-2xl group-hover:shadow-blue-500/25">
                <span className="text-white font-bold text-xl">Z</span>
              </div>
              <div className="absolute -inset-1 bg-gradient-to-r from-blue-500 via-purple-500 to-cyan-500 rounded-xl blur opacity-0 group-hover:opacity-75 transition-opacity duration-300 -z-10" />
              {/* Animated border */}
              <div className="absolute inset-0 rounded-xl bg-gradient-to-r from-blue-500 via-purple-500 to-cyan-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300 blur-sm" />
            </div>
            <div className="flex flex-col">
              <span className="text-xl font-bold text-white group-hover:text-transparent group-hover:bg-clip-text group-hover:bg-gradient-to-r group-hover:from-blue-400 group-hover:to-purple-400 transition-all duration-300">
                Zion Tech
              </span>
              <span className="text-xs text-gray-400 group-hover:text-blue-400 transition-colors duration-300">
                Group
              </span>
            </div>
          </Link>

          {/* Desktop Navigation */}
          <nav className="hidden lg:flex items-center space-x-1" role="navigation" aria-label="Main navigation">
            {navigation.map((item) => (
              <div key={item.name} className="relative">
                {item.hasDropdown ? (
                  <div className="relative">
                    <button
                      onClick={() => {
                        if (item.name === 'Product') {
                          setIsProductDropdownOpen(!isProductDropdownOpen);
                          setIsSolutionsDropdownOpen(false);
                        } else if (item.name === 'Solutions') {
                          setIsSolutionsDropdownOpen(!isSolutionsDropdownOpen);
                          setIsProductDropdownOpen(false);
                        }
                      }}
                      className="flex items-center space-x-1 px-4 py-2 text-sm font-medium text-gray-300 hover:text-white transition-colors duration-200 rounded-lg hover:bg-white/5"
                    >
                      {item.name}
                      <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${
                        (item.name === 'Product' && isProductDropdownOpen) || 
                        (item.name === 'Solutions' && isSolutionsDropdownOpen) ? 'rotate-180' : ''
                      }`} />
                    </button>
                    
                    {item.name === 'Product' && isProductDropdownOpen && (
                      <div className="absolute top-full left-0 mt-2 w-80 bg-black/90 backdrop-blur-xl border border-white/10 rounded-xl shadow-2xl p-4">
                        <div className="grid gap-3">
                          {productDropdown.map((product) => (
                            <Link
                              key={product.name}
                              href={product.href}
                              className="flex items-center p-3 rounded-xl hover:bg-gradient-to-r hover:from-blue-500/10 hover:to-purple-500/10 transition-all duration-300 group hover:scale-105"
                              onClick={() => setIsProductDropdownOpen(false)}
                              role="menuitem"
                            >
                              <div className="text-2xl mr-3 group-hover:scale-110 transition-transform duration-300">
                                {product.icon}
                              </div>
                              <div className="flex-1">
                                <div className="font-medium text-white mb-1 group-hover:text-blue-400 transition-colors duration-300">
                                  {product.name}
                                </div>
                                <div className="text-sm text-gray-400 group-hover:text-gray-300 transition-colors duration-300">
                                  {product.description}
                                </div>
                              </div>
                            </Link>
                          ))}
                        </div>
                      </div>
                    )}

                    {isSaasToolsDropdownOpen && (
                      <div className="absolute top-full left-0 mt-2 w-80 bg-black/90 backdrop-blur-xl border border-white/10 rounded-xl shadow-2xl p-4">
                        <div className="grid gap-3">
                          {saasToolsDropdown.map((tool) => (
                            <Link
                              key={tool.name}
                              href={tool.href}
                              className="flex flex-col p-3 rounded-lg hover:bg-white/5 transition-colors duration-200"
                              onClick={() => setIsSaasToolsDropdownOpen(false)}
                            >
                              <div className="font-medium text-white mb-1">{tool.name}</div>
                              <div className="text-sm text-gray-400">{tool.description}</div>
                            </Link>
                          ))}
                        </div>
                      </div>
                    )}

                    {item.name === 'Solutions' && isSolutionsDropdownOpen && (
                      <div className="absolute top-full left-0 mt-2 w-80 bg-black/90 backdrop-blur-xl border border-white/10 rounded-xl shadow-2xl p-4">
                        <div className="grid gap-3">
                          {solutionsDropdown.map((solution) => (
                            <Link
                              key={solution.name}
                              href={solution.href}
                              className="flex flex-col p-3 rounded-lg hover:bg-white/5 transition-colors duration-200"
                              onClick={() => setIsSolutionsDropdownOpen(false)}
                            >
                              <div className="font-medium text-white mb-1">{solution.name}</div>
                              <div className="text-sm text-gray-400">{solution.description}</div>
                            </Link>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                ) : (
                  <Link
                    href={item.href}
                    className={`px-4 py-2 text-sm font-medium transition-all duration-300 rounded-lg relative group ${
                      isActive(item.href)
                        ? 'text-blue-400 bg-gradient-to-r from-blue-500/20 to-purple-500/20'
                        : 'text-gray-300 hover:text-white hover:bg-white/10'
                    }`}
                  >
                    {item.name}
                    {/* Hover glow effect */}
                    <div className="absolute inset-0 rounded-lg bg-gradient-to-r from-blue-500/20 to-purple-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 blur-sm" />
                  </Link>
                )}
              </div>
            ))}
          </nav>

          {/* CTA Buttons */}
          <div className="hidden lg:flex items-center space-x-3">
            <Link
              href="/contact"
              className="px-4 py-2 text-sm font-medium text-gray-300 hover:text-white transition-colors duration-300 rounded-lg hover:bg-white/10"
            >
              Contact
            </Link>
            <Link
              href="/micro-saas"
              className="px-6 py-2 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-medium rounded-lg transition-all duration-300 hover:scale-105 hover:shadow-lg hover:shadow-blue-500/25"
            >
              Get Started
            </Link>
          </div>

          {/* Mobile Menu Button */}
          <button
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            className="lg:hidden p-2 rounded-lg text-gray-300 hover:text-white hover:bg-white/10 transition-colors duration-200"
          >
            {isMobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
        </div>
      </div>

        {/* Mobile Navigation */}
        {isMobileMenuOpen && (
          <div className="lg:hidden">
            <div className="px-4 pt-4 pb-6 space-y-2 bg-black/90 backdrop-blur-xl rounded-xl mt-2 border border-white/10 shadow-2xl">
              {navigation.map((item) => (
                <div key={item.name}>
                  {item.hasDropdown ? (
                    <div className="space-y-2">
                      <div className="px-4 py-3 text-base font-medium text-white">
                        {item.name}
                      </div>
                      <div className="pl-4 space-y-2">
                        {item.name === 'Product' && productDropdown.map((product) => (
                          <Link
                            key={product.name}
                            href={product.href}
                            className="block px-4 py-2 rounded-lg text-sm text-gray-300 hover:text-white hover:bg-white/5 transition-colors duration-200"
                            onClick={() => setIsMobileMenuOpen(false)}
                          >
                            <div className="font-medium">{product.name}</div>
                            <div className="text-xs text-gray-500">{product.description}</div>
                          </Link>
                        ))}
                        {item.name === 'Solutions' && solutionsDropdown.map((solution) => (
                          <Link
                            key={solution.name}
                            href={solution.href}
                            className="block px-4 py-2 rounded-lg text-sm text-gray-300 hover:text-white hover:bg-white/5 transition-colors duration-200"
                            onClick={() => setIsMobileMenuOpen(false)}
                          >
                            <div className="font-medium">{solution.name}</div>
                            <div className="text-xs text-gray-500">{solution.description}</div>
                          </Link>
                        ))}
                      </div>
                    </div>
                  </div>
                ) : (
                  <Link
                    href={item.href}
                    className={`block px-4 py-2 text-base font-medium rounded-lg transition-colors duration-200 ${
                      isActive(item.href)
                        ? 'text-blue-400 bg-blue-500/10'
                        : 'text-gray-300 hover:text-white hover:bg-white/10'
                    }`}
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    {item.name}
                  </Link>
                )}
              </div>
            ))}
            
            {/* Mobile CTA */}
            <div className="pt-4 border-t border-white/20">
              <Link
                href="/contact"
                className="block px-4 py-3 text-center text-gray-300 hover:text-white transition-colors duration-200 rounded-lg hover:bg-white/10 mb-3"
                onClick={() => setIsMobileMenuOpen(false)}
              >
                Contact Us
              </Link>
              <Link
                href="/micro-saas"
                className="block px-4 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-medium rounded-lg text-center transition-all duration-300 hover:scale-105"
                onClick={() => setIsMobileMenuOpen(false)}
              >
                Get Started
              </Link>
            </div>
          </div>
        </div>
      )}
    </header>
  );
};

export default Header;