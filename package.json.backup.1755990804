{
  "name": "project",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "dev": "node scripts/simple-dev-server.cjs",
    "build": "next build --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint --no-lint",
    "start": "node simple-server.js",
    "dev:next": "next dev --port 3001",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "format": "prettier --write .",
    "test": "jest --passWithNoTests",
    "test:coverage": "jest --coverage --passWithNoTests",
    "maintain": "node scripts/zion-app-maintainer.cjs",
    "automate": "node scripts/complete-zion-automation.cjs",
    "improve": "node automation/continuous-improvement.js",
    "health": "curl -s http://localhost:3006/api/health",
    "status": "node scripts/zion-app-maintainer.cjs",
    "prepare": "husky",
    "analyze": "ANALYZE=true npm run build",
    "build:optimized": "NEXT_DISABLE_CSS_INLINE=true SKIP_TYPE_CHECK=true npm run build"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "dependencies": {
    "@chakra-ui/react": "^3.22.0",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@opentelemetry/context-async-hooks": "^2.0.1",
    "@opentelemetry/core": "^2.0.1",
    "@opentelemetry/instrumentation": "^0.203.0",
    "@opentelemetry/sdk-trace-base": "^2.0.1",
    "@sentry/nextjs": "^9.40.0",
    "@slack/bolt": "^4.4.0",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.52.0",
    "@swc/helpers": "^0.5.17",
    "@types/react": "^19.0.0",
    "@types/react-dom": "^19.0.0",
    "@types/socket.io": "^3.0.1",
    "@types/socket.io-client": "^1.4.36",
    "async": "^3.2.5",
    "cors": "^2.8.5",
    "ethers": "^6.15.0",
    "express": "^5.1.0",
    "framer-motion": "^12.23.6",
    "i18next": "^25.3.2",
    "lucide-react": "^0.525.0",
    "next": "^15.4.1",
    "next-auth": "^4.24.11",
    "node-cron": "^4.2.1",
    "node-fetch": "^3.3.2",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-i18next": "^15.6.0",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "styled-jsx": "^5.1.7",
    "winston": "^3.17.0",
    "ws": "^8.18.3",
    "zod": "^4.0.5"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/node": "20.19.8",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@typescript-eslint/eslint-plugin": "^8.37.0",
    "@typescript-eslint/parser": "^8.37.0",
    "@vitest/ui": "^3.2.4",
    "chokidar": "^4.0.3",
    "eslint": "^9.31.0",
    "eslint-config-next": "^15.4.3",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "husky": "^9.1.7",
    "jest": "^30.0.4",
    "jest-environment-jsdom": "^30.0.4",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.2",
    "minimatch": "^10.0.3",
    "pm2": "^6.0.8",
    "prettier": "^3.6.2",
    "typescript": "5.8.3",
    "vitest": "^3.2.4"
  },
  "peerDependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "overrides": {
    "superagent": "^9.0.0",
    "valtio": "^2.1.5"
  },
  "engines": {
    "node": ">=18.17.0"
  },
  "description": "[![Netlify Status](https://api.netlify.com/api/v1/badges/ziontechgroup.com/deploy-status)](https://app.netlify.com/sites/ziontechgroup.com/deploys)",
  "main": "babel.config.js",
  "directories": {
    "doc": "docs",
    "test": "tests"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Zion-Holdings/zion.app.git"
  },
  "bugs": {
    "url": "https://github.com/Zion-Holdings/zion.app/issues"
  },
  "homepage": "https://github.com/Zion-Holdings/zion.app#readme",
  "engines": {
    "node": ">=20.18.1",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "pm2:start": "node -e \"const fs=require('fs');fs.mkdirSync('automation/logs',{recursive:true})\" && pm2 start ecosystem.config.cjs --update-env",
    "pm2:stop": "pm2 stop ecosystem.config.cjs || true",
    "pm2:restart": "node -e \"const fs=require('fs');fs.mkdirSync('automation/logs',{recursive:true})\" && (pm2 restart ecosystem.config.cjs || pm2 start ecosystem.config.cjs --update-env)",
    "pm2:status": "pm2 status",
    "pm2:logs": "pm2 logs --lines 200",
    "pm2:fastads:start": "node -e \"const fs=require('fs');fs.mkdirSync('automation/logs',{recursive:true})\" && pm2 start ecosystem.fast-ads.local.cjs --update-env",
    "pm2:fastads:restart": "node -e \"const fs=require('fs');fs.mkdirSync('automation/logs',{recursive:true})\" && (pm2 restart ecosystem.fast-ads.local.cjs || pm2 start ecosystem.fast-ads.local.cjs --update-env)",
    "pm2:fastads:stop": "pm2 stop ecosystem.fast-ads.local.cjs || true",
    "pm2:cron:start": "node -e \"const fs=require('fs');fs.mkdirSync('automation/logs',{recursive:true})\" && pm2 start ecosystem.cron.local.cjs --update-env",
    "pm2:cron:restart": "node -e \"const fs=require('fs');fs.mkdirSync('automation/logs',{recursive:true})\" && (pm2 restart ecosystem.cron.local.cjs || pm2 start ecosystem.cron.local.cjs --update-env)",
    "pm2:cron:stop": "pm2 stop ecosystem.cron.local.cjs || true",
    "pm2:bootstrap:logrotate": "pm2 install pm2-logrotate || true && pm2 set pm2-logrotate:max_size 10M && pm2 set pm2-logrotate:retain 30 && pm2 set pm2-logrotate:compress true && pm2 set pm2-logrotate:workerInterval 60 && pm2 set pm2-logrotate:rotateInterval '0 0 * * *'",
    "functions:run": "node scripts/run-netlify-functions-locally.cjs",
    "functions:run:execute": "node scripts/run-netlify-functions-locally.cjs --execute",
    "front:advertise": "node automation/front-index-advertiser.cjs",
    "deps:maintain": "node automation/dependency-update-orchestrator.cjs",
    "deps:cron:start": "bash automation/dependency-maintenance-cron.sh",
    "sitemap": "node scripts/generate-sitemap.mjs",
    "homepage:update": "node automation/homepage-updater.cjs",
    "dev": "NODE_OPTIONS=--openssl-legacy-provider next dev",
    "build": "NODE_OPTIONS=--openssl-legacy-provider next build",
    "export": "NODE_OPTIONS=--openssl-legacy-provider next build && next export",
    "start": "next start",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "type-check": "tsc --noEmit",
    "prepare": "husky install",
    "homepage:update": "node automation/homepage-autonomous-updater.cjs",
    "fix:all": "npm run lint -- --fix || true && node fix_typescript_syntax_errors.cjs || true && node fix_all_typescript_errors.cjs || true && node final_fix.cjs || true",
    "netlify:check": "node automation/netlify-monitor.cjs check",
    "netlify:fix": "node automation/netlify-monitor.cjs fix-if-failing",
    "netlify:cron:start": "bash automation/netlify-monitor-cron.sh start",
    "netlify:cron:stop": "bash automation/netlify-monitor-cron.sh stop",
    "netlify:cron:status": "bash automation/netlify-monitor-cron.sh status",
    "autonomous": "node automation/launch-enhanced-autonomous-system.js",
    "autonomous:dev": "nodemon automation/launch-enhanced-autonomous-system.js",
    "autonomous:status": "node automation/launch-autonomous-systems-clean.js status",
    "linkedin:run": "ts-node scripts/linkedin-automation.ts run",
    "linkedin:cron": "ts-node scripts/linkedin-automation.ts cron",
    "linkedin:generate": "ts-node scripts/linkedin-automation.ts generate",
    "linkedin:start": "npm run linkedin:cron",
    "linkedin:test": "ts-node scripts/test-linkedin-automation.ts",
    "mcp:start": "node mcp-automation-system.js",
    "mcp:client": "node mcp-client-integration.js",
    "mcp:orchestrator": "node automation/mcp-integration-orchestrator.js",
    "mcp:enhance": "node automation/mcp-integration-orchestrator.js enhance",
    "mcp:workflow": "node automation/mcp-integration-orchestrator.js workflow",
    "mcp:report": "node automation/mcp-integration-orchestrator.js report",
    "mcp:setup-cron": "node automation/mcp-integration-orchestrator.js setup-cron",
    "mcp:daily": "node automation/mcp-integration-orchestrator.js daily-workflow",
    "mcp:weekly": "node automation/mcp-integration-orchestrator.js weekly-audit",
    "mcp:monitor": "node automation/mcp-integration-orchestrator.js performance-monitor",
    "mcp:status": "node automation/mcp-integration-orchestrator.js status",
    "mcp:test": "node simple-mcp-test.js",
    "google-docs:start": "node automation/launch-google-docs-automation.js",
    "google-docs:dev": "nodemon automation/launch-google-docs-automation.js",
    "google-docs:status": "node automation/check-google-docs-status.js",
    "google-docs:report": "node automation/generate-google-docs-report.js",
    "google-docs:test": "node automation/test-google-docs-automation.js",
    "cursor:memory": "node run-cursor-memory-automation.js && node automation/cursor-rules-generator.cjs",
    "cursor:memory:dev": "nodemon run-cursor-memory-automation.js",
    "cursor:memory:config": "node -e \"console.log(JSON.stringify(require('./cursor-memory-config.json'), null, 2))\"",
    "cursor:memory:status": "node -e \"const fs = require('fs'); const path = './cursor-memory/memory-summary.json'; try { const data = JSON.parse(fs.readFileSync(path, 'utf8')); console.log('Memory Status:'); console.log('- Total entries:', data.totalEntries); console.log('- Categories:', Object.keys(data.categories).length); console.log('- High confidence:', data.confidenceDistribution.high); } catch(e) { console.log('No memory data found'); }\"",
    "automation:factory": "node automation/automation-factory.cjs generate",
    "automation:factory:dev": "nodemon automation/ultimate-automation-factory-system.js",
    "automation:orchestrator": "node automation/intelligent-orchestrator.cjs continuous",
    "automation:dashboard": "node automation/automation-dashboard.cjs start",
    "ai:research": "node automation/ai-trends-researcher.cjs",
    "ai:innovate": "node automation/innovation-orchestrator.cjs",
    "ai:cron:start": "bash automation/ai-trends-cron.sh start",
    "ai:cron:run": "bash automation/ai-trends-cron.sh run",
    "ai:cron:stop": "bash automation/ai-trends-cron.sh stop",
    "ai:cron:status": "bash automation/ai-trends-cron.sh status",
    "automation:all": "node automation/launch-all-automation.cjs start",
    "automation:status": "node automation/launch-all-automation.cjs start",
    "automation:report": "node automation/launch-all-automation.cjs report",
    "intelligence:start": "node automation/app-intelligence-enhancer.cjs",
    "intelligence:watch": "node automation/app-intelligence-enhancer.cjs continuous",
    "automation:git-sync": "node automation/git-sync.cjs",
    "git:sync": "node automation/advanced-git-sync.cjs",
    "git:sync:enhanced": "node automation/enhanced-git-sync-orchestrator.cjs",
    "git:health": "node automation/enhanced-git-sync-orchestrator.cjs health-check",
    "git:resolve": "node automation/enhanced-git-sync-orchestrator.cjs resolve-conflicts",
    "git:cleanup": "node automation/enhanced-git-sync-orchestrator.cjs cleanup-locks",
    "git:status": "node automation/enhanced-git-sync-orchestrator.cjs status",
    "git:report": "node automation/enhanced-git-sync-orchestrator.cjs report",
    "navigation:ai": "node automation/ai-navigation-optimizer.cjs",
    "navigation:ml": "node automation/ml-navigation-predictor.cjs",
    "navigation:neural": "node automation/neural-navigation-network.cjs",
    "navigation:ai:all": "npm run navigation:ai && npm run navigation:ml && npm run navigation:neural",
    "navigation:autonomous": "node automation/autonomous-navigation-launcher.cjs",
    "navigation:cron": "bash automation/navigation-cron-system.sh",
    "navigation:cron:start": "bash automation/navigation-cron-system.sh start",
    "navigation:cron:stop": "bash automation/navigation-cron-system.sh stop",
    "navigation:cron:restart": "bash automation/navigation-cron-system.sh restart",
    "navigation:cron:status": "bash automation/navigation-cron-system.sh status",
    "navigation:launch": "npm run navigation:autonomous & npm run navigation:cron:start",
    "automation:improvement": "node automation/continuous-automation-improvement-system.js",
    "automation:guardian": "node automation/automation-guardian-10min.cjs",
    "automation:cloud": "node automation/cloud-autonomous-orchestrator.cjs",
    "automation:discover": "node automation/auto-discovery-runner.cjs",
    "redundancy:start": "node automation/redundancy/master-redundancy-orchestrator.cjs start",
    "redundancy:stop": "node automation/redundancy/master-redundancy-orchestrator.cjs stop",
    "redundancy:status": "node automation/redundancy/master-redundancy-orchestrator.cjs status",
    "redundancy:health": "node automation/redundancy/master-redundancy-orchestrator.cjs health",
    "redundancy:report": "node automation/redundancy/master-redundancy-orchestrator.cjs report",
    "redundancy:pm2:start": "node automation/redundancy/pm2-redundancy-manager.cjs start",
    "redundancy:pm2:stop": "node automation/redundancy/pm2-redundancy-manager.cjs stop",
    "redundancy:pm2:status": "node automation/redundancy/pm2-redundancy-manager.cjs status",
    "redundancy:github:start": "node automation/redundancy/github-actions-redundancy.cjs start",
    "redundancy:github:stop": "node automation/redundancy/github-actions-redundancy.cjs stop",
    "redundancy:github:status": "node automation/redundancy/github-actions-redundancy.cjs status",
    "redundancy:netlify:start": "node automation/redundancy/netlify-functions-redundancy.cjs start",
    "redundancy:netlify:stop": "node automation/redundancy/netlify-functions-redundancy.cjs stop",
    "redundancy:netlify:status": "node automation/redundancy/netlify-functions-redundancy.cjs status",
    "redundancy:test": "node automation/redundancy/pm2-redundancy-sync.cjs && node automation/redundancy/marketing-sync-redundancy.cjs",
    "redundancy:restart": "./automation/start-redundancy-system.sh restart",
    "redundancy:logs": "./automation/start-redundancy-system.sh logs",
    "redundancy:system": "node automation/redundancy-automation-system.cjs",
    "redundancy:git-sync": "node automation/redundancy-git-sync.cjs",
    "redundancy:build": "node automation/redundancy-build-monitor.cjs",
    "redundancy:pm2:legacy": "pm2 start ecosystem.redundancy.cjs",
    "redundancy:pm2:legacy:stop": "pm2 stop ecosystem.redundancy.cjs",
    "redundancy:pm2:legacy:restart": "pm2 restart ecosystem.redundancy.cjs",
    "redundancy:pm2:legacy:status": "pm2 status",
    "automation:improvement:dev": "nodemon automation/continuous-automation-improvement-system.js",
    "automation:coordinator": "node automation/master-automation-coordinator.js",
    "automation:coordinator:dev": "nodemon automation/master-automation-coordinator.js",
    "automation:restart": "node automation/restart-all-automation.js",
    "automation:enhance": "node automation/enhance-all-automation.js",
    "automation:beautify": "node automation/beautify-ui.cjs",
    "autonomous:start": "node automation/autonomous-system-manager.cjs start",
    "autonomous:stop": "node automation/autonomous-system-manager.cjs stop",
    "autonomous:restart": "node automation/launch-autonomous-systems-clean.js restart",
    "autonomous:factory": "node automation/autonomous-error-monitoring-factory.js",
    "autonomous:orchestrator": "node automation/autonomous-automation-orchestrator.js",
    "autonomous:cron": "bash automation/autonomous-error-cron-system.sh run",
    "autonomous:cron:start": "bash automation/autonomous-error-cron-system.sh start",
    "autonomous:cron:stop": "bash automation/autonomous-error-cron-system.sh stop",
    "autonomous:cron:status": "bash automation/autonomous-error-cron-system.sh status",
    "autonomous:cron:fix": "bash automation/autonomous-error-cron-system.sh fix",
    "autonomous:all": "npm run autonomous:start & npm run autonomous:cron:start",
    "design:start": "node automation/launch-design-improvement-automation.js start",
    "design:navigation": "node automation/launch-design-improvement-automation.js navigation",
    "design:layout": "node automation/launch-design-improvement-automation.js layout",
    "design:visual": "node automation/launch-design-improvement-automation.js visual-design",
    "design:cycle": "node automation/launch-design-improvement-automation.js cycle",
    "design:status": "node automation/launch-design-improvement-automation.js status",
    "design:stop": "node automation/launch-design-improvement-automation.js stop",
    "design:all": "npm run design:layout && npm run design:navigation && npm run design:visual",
    "syntax:start": "node automation/syntax-fix-launcher.js start",
    "syntax:start:monitor": "node automation/syntax-fix-launcher.js start monitor",
    "syntax:start:orchestrator": "node automation/syntax-fix-launcher.js start orchestrator",
    "syntax:start:continuous": "node automation/syntax-fix-launcher.js start continuous",
    "syntax:stop": "node automation/syntax-fix-launcher.js stop",
    "syntax:status": "node automation/syntax-fix-launcher.js status",
    "syntax:quick-fix": "node automation/syntax-fix-launcher.js quick-fix",
    "syntax:build-check": "node automation/syntax-fix-launcher.js build-check",
    "syntax:monitor": "node automation/syntax-error-monitor.js",
    "syntax:monitor:watch": "node automation/syntax-error-monitor.js --watch",
    "syntax:orchestrator": "node automation/syntax-fix-orchestrator.js",
    "syntax:orchestrator:watch": "node automation/syntax-fix-orchestrator.js --watch",
    "syntax:continuous": "node automation/continuous-syntax-fix.js",
    "syntax:continuous:watch": "node automation/continuous-syntax-fix.js --watch",
    "syntax:all": "npm run syntax:start & npm run syntax:monitor & npm run syntax:orchestrator & npm run syntax:continuous",
    "linting:factory": "node automation/linting-autonomous-agents-factory.js",
    "linting:factory:dev": "nodemon automation/linting-autonomous-agents-factory.js",
    "linting:cron": "node automation/linting-cron-automation.js",
    "linting:cron:dev": "nodemon automation/linting-cron-automation.js",
    "linting:watcher": "node automation/linting-file-watcher.js",
    "linting:watcher:dev": "nodemon automation/linting-file-watcher.js",
    "linting:orchestrator": "node automation/lint-automation-manager.cjs start",
    "linting:orchestrator:dev": "nodemon automation/lint-automation-manager.cjs",
    "linting:all": "npm run linting:factory & npm run linting:cron & npm run linting:watcher & npm run linting:orchestrator",
    "linting:start": "npm run linting:orchestrator continuous",
    "linting:status": "npm run linting:orchestrator status",
    "linting:check": "npm run linting:orchestrator check",
    "linting:fix": "node automation/lint-error-fixer.cjs all",
    "healing:scan": "node automation/automation-error-scanner.cjs",
    "healing:fix": "node automation/automation-error-fixer.cjs",
    "healing:start": "node automation/self-healing-orchestrator.cjs",
    "healing:cron:start": "bash automation/self-healing-cron.sh start",
    "healing:cron:stop": "bash automation/self-healing-cron.sh stop",
    "healing:cron:status": "bash automation/self-healing-cron.sh status",
    "design:orchestrator": "node automation/design-orchestrator.cjs",
    "design:cron:start": "bash automation/design-cron.sh",
    "design:analyze": "node automation/design-analyzer.cjs && node automation/design-factory.cjs",
    "diversify": "node automation/diversification-orchestrator.cjs",
    "responsive:start": "node automation/responsive-content-orchestrator.cjs",
    "responsive:cron:start": "bash automation/responsive-content-cron.sh",
    "responsive:analyze": "node automation/responsive-content-analyzer.cjs && node automation/responsive-content-factory.cjs",
    "variation:start": "node automation/variation-orchestrator.cjs",
    "variation:analyze": "node automation/variation-analyzer.cjs && node automation/variation-factory.cjs",
    "monetization:start": "node automation/monetization-orchestrator.cjs",
    "monetization:cron:start": "bash automation/monetization-cron.sh",
    "monetization:analyze": "node automation/monetization-analyzer.cjs && node automation/monetization-factory.cjs",
    "frontend-sync:start": "node automation/frontend-sync-orchestrator.cjs",
    "frontend-sync:cron:start": "bash automation/frontend-sync-cron.sh",
    "frontend-sync:analyze": "node automation/frontend-sync-analyzer.cjs && node automation/frontend-sync-factory.cjs",
    "saas:start": "node automation/saas-services-orchestrator.cjs",
    "saas:cron:start": "bash automation/saas-services-cron.sh",
    "saas:analyze": "node automation/saas-services-analyzer.cjs && node automation/saas-services-factory.cjs",
    "homepage-promo:start": "node automation/homepage-promo-orchestrator.cjs",
    "homepage-promo:cron:start": "bash automation/homepage-promo-cron.sh",
    "homepage-promo:analyze": "node automation/homepage-promo-analyzer.cjs && node automation/homepage-promo-factory.cjs",
    "feature-marketing:start": "node automation/feature-marketing-orchestrator.cjs",
    "feature-marketing:cron:start": "bash automation/feature-marketing-cron.sh",
    "feature-marketing:analyze": "node automation/feature-marketing-analyzer.cjs && node automation/feature-marketing-factory.cjs",
    "linkedin:marketing:start": "node automation/linkedin-marketing-orchestrator.cjs",
    "linkedin:marketing:cron:start": "bash automation/linkedin-marketing-cron.sh",
    "linkedin:marketing:analyze": "node automation/linkedin-marketing-analyzer.cjs && node automation/linkedin-marketing-factory.cjs",
    "cursor:chat:start": "node automation/cursor-chat-orchestrator.cjs",
    "cursor:chat:cron:start": "bash automation/cursor-chat-cron.sh",
    "cursor:chat:analyze": "node automation/cursor-chat-analyzer.cjs && node automation/cursor-chat-factory.cjs",
    "links:start": "node automation/site-link-orchestrator.cjs",
    "links:cron:start": "bash automation/site-link-cron.sh",
    "links:scan": "node automation/site-link-crawler.cjs && node automation/site-link-fixer.cjs",
    "layout:audit": "node automation/layout-crawler.cjs",
    "layout:fix": "node automation/layout-fixer.cjs",
    "layout:agents": "node automation/agent-factory-suggester.cjs",
    "layout:run": "npm run layout:audit && npm run layout:fix && npm run layout:agents",
    "footer:inject": "node automation/footer-injector.cjs",
    "footer:cron": "bash automation/footer-cron.sh start",
    "promo:start": "node automation/site-promo-orchestrator.cjs",
    "promo:cron:start": "bash automation/site-promo-cron.sh",
    "promo:scan": "node automation/site-promo-analyzer.cjs && node automation/homepage-promo-applier.cjs",
    "spec-dev:start": "node automation/spec-dev-orchestrator.cjs",
    "spec-dev:cron:start": "bash automation/spec-dev-cron.sh",
    "spec-dev:scan": "node automation/spec-dev-chat-fetcher.cjs && node automation/spec-dev-site-crawler.cjs && node automation/spec-dev-analyzer.cjs && node automation/spec-dev-factory.cjs",
    "linkedin:pro:start": "node automation/linkedin-pro-orchestrator.cjs",
    "linkedin:pro:cron:start": "bash automation/linkedin-pro-cron.sh",
    "linkedin:pro:analyze": "node automation/linkedin-pro-analyzer.cjs && node automation/linkedin-pro-factory.cjs",
    "instagram:marketing:start": "node automation/instagram-marketing-orchestrator.cjs",
    "instagram:marketing:cron:start": "bash automation/instagram-marketing-cron.sh",
    "instagram:marketing:analyze": "node automation/instagram-marketing-analyzer.cjs && node automation/instagram-marketing-factory.cjs",
    "alignment:start": "node automation/alignment-orchestrator.cjs",
    "alignment:cron:start": "bash automation/alignment-cron.sh",
    "alignment:scan": "node automation/chat-fetcher.cjs && (node automation/google-doc-fetcher.cjs || true) && node automation/alignment-crawler.cjs && node automation/alignment-analyzer.cjs && node automation/alignment-factory.cjs && node automation/alignment-dev-factory.cjs",
    "maintenance:run": "node automation/site-maintenance-orchestrator.cjs",
    "maintenance:cron:start": "bash automation/site-maintenance-cron.sh start",
    "maintenance:cron:stop": "bash automation/site-maintenance-cron.sh stop",
    "maintenance:cron:status": "bash automation/site-maintenance-cron.sh status",
    "maintenance:cron:run": "bash automation/site-maintenance-cron.sh run",
    "health:start": "node automation/auto-health-monitor/index.mjs",
    "health:dev": "nodemon automation/auto-health-monitor/index.mjs",
    "automation:all:plus": "npm run automation:all & npm run health:start",
    "automation:pm2": "npm run pm2:start && npm run pm2:bootstrap:logrotate && pm2 save",
    "automation:pm2:restart": "npm run pm2:restart && npm run pm2:bootstrap:logrotate && pm2 save",
    "automation:pm2:status": "npm run pm2:status",
    "automation:pm2:logs": "npm run pm2:logs",
    "automation:pm2:report": "node scripts/pm2-schedulers-report.cjs",
    "automation:pm2:autostart": "node scripts/pm2-autostart.cjs",
    "automation:pm2:resurrect": "node scripts/pm2-resurrect-hook.cjs",
    "automation:pm2:fastads": "npm run pm2:fastads:start && npm run pm2:bootstrap:logrotate && pm2 save",
    "automation:pm2:cron": "npm run pm2:cron:start && npm run pm2:bootstrap:logrotate && pm2 save",
    "postautomation": "npm run automation:git-sync",
    "lint:staged": "lint-staged",
    "ui-evolution:start": "node automation/ui-evolution-launcher.js start",
    "ui-evolution:once": "node automation/ui-evolution-launcher.js once",
    "ui-evolution:analyze": "node automation/ui-evolution-launcher.js analyze",
    "ui-evolution:factory": "node automation/ui-evolution-launcher.js factory",
    "ui-evolution:beautify": "node automation/ui-evolution-launcher.js beautify",
    "ui-evolution:dashboard": "node automation/ui-evolution-launcher.js dashboard",
    "meta:factory": "node automation/autonomous-meta-factory.cjs",
    "meta:orchestrator": "node automation/autonomous-meta-orchestrator.cjs",
    "meta:cron:start": "bash automation/autonomous-meta-cron.sh",
    "venture:start": "node automation/venture-orchestrator.cjs continuous",
    "venture:once": "node automation/venture-orchestrator.cjs once",
    "venture:analyze": "node automation/venture-services-analyzer.cjs && node automation/venture-services-factory.cjs && node automation/ads-generator.cjs && node automation/service-sales-agents-factory.cjs",
    "venture:cron:start": "bash automation/venture-cron.sh start",
    "venture:cron:stop": "bash automation/venture-cron.sh stop",
    "venture:cron:status": "bash automation/venture-cron.sh status",
    "venture:report": "node automation/venture-orchestrator.cjs report",
    "frontend-sync:autonomous:start": "node automation/launch-frontend-sync-autonomous.js",
    "frontend-sync:autonomous:once": "node automation/frontend-sync-autonomous-orchestrator.cjs once 0",
    "frontend-sync:autonomous:cron": "bash automation/frontend-sync-autonomous-cron.sh",
    "git:sync": "node automation/advanced-git-sync.cjs",
    "git:pull": "node automation/git-pull-rebase.cjs",
    "git:cron:start": "bash automation/git-sync-cron.sh start",
    "git:cron:stop": "bash automation/git-sync-cron.sh stop",
    "git:cron:status": "bash automation/git-sync-cron.sh status",
    "sync-health:run": "node automation/sync-health-check.cjs --fix",
    "sync-health:cron:start": "bash automation/sync-health-cron.sh start",
    "sync-health:cron:stop": "bash automation/sync-health-cron.sh stop",
    "sync-health:cron:status": "bash automation/sync-health-cron.sh status",
    "sync:all:start": "npm run git:cron:start && npm run sync-health:cron:start",
    "git:health": "node automation/git-health.cjs --fast",
    "git:health:fix": "node automation/git-health.cjs --fast --fix",
    "git:health:deep": "node automation/git-health.cjs --deep",
    "git:health:cron": "bash automation/git-health-cron.sh",
    "conflicts:check": "bash scripts/check-merge-conflicts.sh",
    "conflicts:watch": "watch -n 30 bash scripts/check-merge-conflicts.sh || true",
    "conflicts:cron:start": "bash automation/merge-conflict-cron.sh start",
    "conflicts:cron:stop": "bash automation/merge-conflict-cron.sh stop",
        "conflicts:cron:status": "bash automation/merge-conflict-cron.sh status",
    "content:blog:once": "node automation/blog-automation-orchestrator.cjs",
    "content:blog:cron:start": "bash automation/blog-automation-cron.sh start",
    "content:blog:cron:stop": "bash automation/blog-automation-cron.sh stop",
    "content:blog:cron:status": "bash automation/blog-automation-cron.sh status"
   },
=======
    "home:update": "node automation/homepage-updater.cjs"
=======
    "homepage:update": "node automation/homepage-auto-updater.cjs"
  },
  "dependencies": {
    "@google-analytics/data": "^5.2.0",
    "@google/generative-ai": "^0.24.1",
    "@magneticwatermelon/mcp-toolkit": "^1.1.4",
    "@modelcontextprotocol/sdk": "^1.17.1",
    "@modelcontextprotocol/server-filesystem": "^2025.7.29",
    "@modelcontextprotocol/server-memory": "^2025.8.4",
    "@modelcontextprotocol/server-sequential-thinking": "^2025.7.1",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.39.0",
    "@types/react-datepicker": "^6.2.0",
    "autoprefixer": "^10.4.21",
    "axios": "^1.11.0",
    "chalk": "^5.5.0",
    "cheerio": "^1.1.2",
    "child_process": "^1.0.2",
    "chokidar": "^4.0.3",
    "cron-parser": "^5.3.0",
    "events": "^3.3.0",
    "formidable": "3.5.4",
    "framer-motion": "^6.5.1",
    "fs": "^0.0.1-security",
    "fs-extra": "^11.3.1",
    "glob": "^11.0.3",
    "https": "^1.0.0",
    "import-fresh": "^3.3.1",
    "js-yaml": "^4.1.0",
    "jsdom": "^24.1.0",
    "lucide-react": "^0.536.0",
    "next": "^13.5.6",
    "node-cron": "^4.2.1",
    "openai": "^5.11.0",
    "path": "^0.12.7",
    "postcss": "^8.4.32",
    "react": "18.2.0",
    "react-datepicker": "^8.4.0",
    "react-dom": "^17.0.2",
    "resend": "^4.0.0",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/js": "^9.32.0",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^14.3.1",
    "@types/node": "24.2.1",
    "@types/node-cron": "^3.0.11",
    "@types/react": "18.3.23",
    "@types/react-dom": "^18.3.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "autoprefixer": "^10.4.16",
    "eslint": "^8.57.0",
    "eslint-config-next": "^15.0.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.4",
    "postcss": "^8.4.32",
    "tailwindcss": "^3.4.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2"
  },
  "lint-staged": {
    "**/*.{js,jsx,ts,tsx}": [
      "eslint --fix"
    ]
  }
}
