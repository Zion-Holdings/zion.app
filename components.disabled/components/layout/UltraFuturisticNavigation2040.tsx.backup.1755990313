import React, { useState, useEffect, useRef, useCallback } from 'react';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { motion, AnimatePresence } from 'framer-motion';
import { 
<<<<<<< HEAD
  Menu, ChevronDown, X, Phone, Mail, MapPin, ArrowRight,
  Brain, Rocket, Target, Atom, Shield,
  DollarSign, BarChart3, Globe, Star, Sparkles, 
  Grid, List, TrendingUp, 
  Calendar, Calculator, GraduationCap,
  Cpu, Cloud, Settings, Monitor, Palette, Network, Layers, Code, Heart, ShoppingCart, Clock, MessageCircle, HelpCircle, Building,
  Zap, Infinity, Eye, Heart as HeartIcon, Code as CodeIcon, Palette as PaletteIcon,
  BookOpen, FileText, Handshake, Users, Wrench, Dna, Car
=======
  Menu, X, Search, ChevronDown, Zap, Globe, Lock, 
  Phone, Mail, MapPin, ArrowRight, Star, Users, Award,
  Command, Filter, TrendingUp
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-e6d1
} from 'lucide-react';

interface NavigationItem {
  label: string;
  href?: string;
  children?: NavigationItem[];
  icon?: React.ReactNode;
  description?: string;
  featured?: boolean;
  badge?: string;
}

// Memoized navigation items for better performance
const navigationItems: NavigationItem[] = [
  {
    label: 'Home',
    href: '/',
    icon: <Home className="w-4 h-4" />,
    neonColor: 'shadow-cyan-400/50'
  },
  {
    label: 'Services',
    children: [
      {
        label: 'AI & Machine Learning',
        href: '/ai-services',
        icon: <Star className="w-4 h-4" />,
        description: 'Advanced AI solutions for enterprise'
      },
      {
        label: 'Quantum Computing',
        href: '/quantum-services',
        icon: <Zap className="w-4 h-4" />,
        description: 'Next-generation quantum solutions'
      },
      {
        label: 'Space Technology',
        href: '/space-tech',
        icon: <Star className="w-4 h-4" />,
        description: 'Innovative space solutions'
      },
      {
        label: 'Cybersecurity',
        href: '/cybersecurity',
        icon: <Lock className="w-4 h-4" />,
        description: 'Enterprise security solutions'
      },
      {
        label: 'Cloud Solutions',
        href: '/cloud-platform',
        icon: <Globe className="w-4 h-4" />,
        description: 'Scalable cloud infrastructure'
      },
      {
        label: 'Micro SaaS',
        href: '/micro-saas',
        icon: <Star className="w-4 h-4" />,
        description: 'Rapid deployment SaaS solutions'
      },
      {
        label: '2046 Services Showcase',
        href: '/services-2046-showcase',
        icon: <Star className="w-4 h-4" />,
        description: 'Revolutionary 2046 technology showcase'
      },
      {
        label: 'View All Services',
        href: '/services',
        icon: <Briefcase className="w-4 h-4" />,
        description: 'Explore our comprehensive technology solutions',
        badge: 'New',
        neonColor: 'shadow-blue-400/50',
        children: [
          {
            label: 'Comprehensive 2040 Showcase',
            href: '/comprehensive-2040-services-showcase',
            icon: <Star className="w-4 h-4" />,
            description: 'All our revolutionary services in one place',
            featured: true,
            neonColor: 'shadow-yellow-400/50'
          },
          {
            label: 'AI & Machine Learning',
            href: '/services?category=ai-ml',
            icon: <Brain className="w-4 h-4" />,
            description: 'Advanced AI solutions for enterprise',
            featured: true,
            neonColor: 'shadow-purple-400/50'
          },
          {
            label: 'Quantum Computing',
            href: '/services?category=quantum',
            icon: <Atom className="w-4 h-4" />,
            description: 'Next-generation quantum solutions',
            featured: true,
            neonColor: 'shadow-blue-400/50'
          },
          {
            label: 'Space Technology',
            href: '/services?category=space-tech',
            icon: <Rocket className="w-4 h-4" />,
            description: 'Innovative space tech applications',
            featured: true,
            neonColor: 'shadow-pink-400/50'
          },
      {
        label: 'Quantum Cybersecurity 2045',
        href: '/quantum-cybersecurity-platform-2045',
        icon: <Shield className="w-4 h-4" />,
        color: 'from-red-500 to-orange-500'
      },
      { 
        name: 'Brain-Computer Interface', 
        href: '/brain-computer-interface-2040', 
        description: 'Neural interface technology',
        icon: <Brain className="w-4 h-4" />,
        color: 'from-pink-500 to-purple-500'
      },
      { 
        name: 'AI Autonomous Research 2041', 
        href: '/ai-autonomous-research-2041', 
        description: 'Autonomous AI research systems',
        icon: <Brain className="w-4 h-4" />,
        color: 'from-emerald-500 to-teal-500'
      },
      { 
        name: 'AI Content Personalization 2041', 
        href: '/ai-content-personalization-2041', 
        description: 'Conscious content personalization',
        icon: <Brain className="w-4 h-4" />,
        color: 'from-pink-500 to-purple-500'
      },
      { 
        name: 'AI Ethics & Governance 2041', 
        href: '/ai-ethics-governance-2041', 
        description: 'Ethical AI governance',
        icon: <Shield className="w-4 h-4" />,
        color: 'from-green-500 to-blue-500'
      },
      { 
        name: 'AI Autonomous Ecosystem 2041', 
        href: '/ai-autonomous-ecosystem-2041', 
        description: 'Autonomous AI ecosystems',
        icon: <Network className="w-4 h-4" />,
        color: 'from-indigo-500 to-purple-500'
      },
      { 
        name: 'AI Predictive Maintenance 2041', 
        href: '/ai-predictive-maintenance-2041', 
        description: 'Predictive maintenance AI',
        icon: <Wrench className="w-4 h-4" />,
        color: 'from-orange-500 to-red-500'
      },
      { 
        name: 'AI Customer Success 2041', 
        href: '/ai-customer-success-2041', 
        description: 'Customer success AI',
        icon: <Users className="w-4 h-4" />,
        color: 'from-blue-500 to-cyan-500'
      },
      { 
        name: 'AI Sales Intelligence 2041', 
        href: '/ai-sales-intelligence-2041', 
        description: 'Sales intelligence AI',
        icon: <TrendingUp className="w-4 h-4" />,
        color: 'from-emerald-500 to-teal-500'
      },
      { 
        name: 'Quantum Internet Security 2041', 
        href: '/quantum-internet-security-2041', 
        description: 'Quantum internet security',
        icon: <Shield className="w-4 h-4" />,
        color: 'from-red-500 to-orange-500'
      },
      { 
        name: 'Quantum Cloud Infrastructure 2041', 
        href: '/quantum-cloud-infrastructure-2041', 
        description: 'Quantum cloud infrastructure',
        icon: <Cloud className="w-4 h-4" />,
        color: 'from-cyan-500 to-blue-500'
      },
      { 
        name: 'Quantum Bio-Computing 2041', 
        href: '/quantum-bio-computing-2041', 
        description: 'Quantum bio-computing',
        icon: <Dna className="w-4 h-4" />,
        color: 'from-green-500 to-emerald-500'
      },
      { 
        name: 'Autonomous Vehicle AI 2040', 
        href: '/autonomous-vehicle-ai-2040', 
        description: 'Autonomous vehicle AI',
        icon: <Car className="w-4 h-4" />,
        color: 'from-blue-500 to-indigo-500'
      },
      { 
        name: 'Quantum Materials Discovery 2040', 
        href: '/quantum-materials-discovery-2040', 
        description: 'Quantum materials discovery',
        icon: <Atom className="w-4 h-4" />,
        color: 'from-purple-500 to-pink-500'
      },
      { 
        name: 'Quantum Financial Intelligence 2040', 
        href: '/quantum-financial-intelligence-2040', 
        description: 'Quantum financial intelligence',
        icon: <DollarSign className="w-4 h-4" />,
        color: 'from-yellow-500 to-orange-500'
      }
    ]
  },
  {
    label: 'AI Services',
    children: [
      {
        label: 'AI Consciousness',
        href: '/ai-consciousness-evolution-2029',
        icon: <Brain className="w-4 h-4" />,
        description: 'Revolutionary AI consciousness development',
        badge: 'Hot'
      },
      {
        label: 'AI & Machine Learning',
        href: '/ai-services',
        icon: <Brain className="w-4 h-4" />,
        description: 'Advanced AI solutions for enterprise',
        featured: true,
        badge: 'Hot'
      },
      {
        name: 'AI Autonomous Research 2041',
        href: '/ai-autonomous-research-2041',
        description: 'Fully autonomous AI research',
        icon: <CodeIcon className="w-4 h-4" />
      },
      {
        name: 'AI Content Personalization 2041',
        href: '/ai-content-personalization-2041',
        description: 'Consciousness-based content AI',
        icon: <PaletteIcon className="w-4 h-4" />
      },
      {
        name: 'AI Ethics & Governance 2041',
        href: '/ai-ethics-governance-2041',
        description: 'Comprehensive AI ethics framework',
        icon: <Shield className="w-4 h-4" />
      }
    ]
  },
  {
    name: 'Innovative Services 2025',
    href: '/services',
    icon: <Sparkles className="w-5 h-5" />,
    description: 'Cutting-edge innovative technology solutions',
    badge: 'Innovative',
    category: 'innovative',
    color: 'from-yellow-500 to-orange-500',
    children: [
      {
        name: 'Cybersecurity & Threat Intelligence',
        href: '/services#cybersecurity-threat-intelligence',
        description: 'Advanced cybersecurity solutions',
        icon: <Shield className="w-4 h-4" />,
        featured: true
      },
      {
        name: 'Financial Technology & Fintech',
        href: '/services#financial-technology-fintech',
        description: 'Innovative financial solutions',
        icon: <DollarSign className="w-4 h-4" />
      },
      {
        name: 'Healthcare Technology & Healthtech',
        href: '/services#healthcare-technology-healthtech',
        description: 'Advanced healthcare solutions',
        icon: <Heart className="w-4 h-4" />
      },
      {
        name: 'Supply Chain & Logistics',
        href: '/services#supply-chain-logistics',
        description: 'Intelligent supply chain solutions',
        icon: <Network className="w-4 h-4" />
      },
      {
        name: 'Manufacturing & Industry 4.0',
        href: '/services#manufacturing-industry-40',
        description: 'Smart manufacturing solutions',
        icon: <Settings className="w-4 h-4" />
      },
      {
        name: 'Renewable Energy & Sustainability',
        href: '/services#renewable-energy-sustainability',
        description: 'Sustainable energy solutions',
        icon: <Zap className="w-4 h-4" />
      },
      {
        name: 'Education & Training',
        href: '/services#education-training',
        description: 'Innovative learning solutions',
        icon: <GraduationCap className="w-4 h-4" />
      },
      {
        name: 'Government & Public Sector',
        href: '/services#government-public-sector',
        description: 'Government technology solutions',
        icon: <Building className="w-4 h-4" />
      },
      {
        name: 'Transportation & Mobility',
        href: '/services#transportation-mobility',
        description: 'Smart transportation solutions',
        icon: <Globe className="w-4 h-4" />
      },
      {
        name: 'Retail & E-commerce',
        href: '/services#retail-e-commerce',
        description: 'Digital retail solutions',
        icon: <ShoppingCart className="w-4 h-4" />
      },
      {
        name: 'Entertainment & Media',
        href: '/services#entertainment-media',
        description: 'Digital entertainment solutions',
        icon: <Star className="w-4 h-4" />
      },
      {
        name: 'Gaming & Esports',
        href: '/services#gaming-esports',
        description: 'Advanced gaming solutions',
        icon: <Target className="w-4 h-4" />
      },
      {
        name: 'Real Estate & Property',
        href: '/services#real-estate-property',
        description: 'Property technology solutions',
        icon: <Building className="w-4 h-4" />
      },
      {
        name: 'Legal & Compliance',
        href: '/services#legal-compliance',
        description: 'Legal technology solutions',
        icon: <FileText className="w-4 h-4" />
      },
      {
        name: 'Agriculture & Food Technology',
        href: '/services#agriculture-food-technology',
        description: 'Agricultural technology solutions',
        icon: <Heart className="w-4 h-4" />
      },
      {
        name: 'Hospitality & Tourism',
        href: '/services#hospitality-tourism',
        description: 'Hospitality technology solutions',
        icon: <Globe className="w-4 h-4" />
      },
      {
        name: 'Sports & Fitness',
        href: '/services#sports-fitness',
        description: 'Sports technology solutions',
        icon: <Target className="w-4 h-4" />
      },
      {
        name: 'Environmental & Sustainability',
        href: '/services#environmental-sustainability',
        description: 'Environmental technology solutions',
        icon: <Zap className="w-4 h-4" />
      },
      {
        name: 'Research & Development',
        href: '/services#research-development',
        description: 'Research technology solutions',
        icon: <Code className="w-4 h-4" />
      },
      {
        name: 'Biotechnology & Life Sciences',
        href: '/services#biotechnology-life-sciences',
        description: 'Biotechnology solutions',
        icon: <Heart className="w-4 h-4" />
      },
      {
        name: 'Nanotechnology & Materials',
        href: '/services#nanotechnology-materials',
        description: 'Nanotechnology solutions',
        icon: <Atom className="w-4 h-4" />
      },
      {
        name: 'Robotics & Automation',
        href: '/services#robotics-automation',
        description: 'Robotics solutions',
        icon: <Settings className="w-4 h-4" />
      },
      {
        name: 'Blockchain & Web3',
        href: '/services#blockchain-web3',
        description: 'Blockchain technology solutions',
        icon: <Network className="w-4 h-4" />
      },
      {
        name: 'Internet of Things (IoT)',
        href: '/services#internet-of-things-iot',
        description: 'IoT technology solutions',
        icon: <Layers className="w-4 h-4" />
      },
      {
        name: 'Augmented Reality & Virtual Reality',
        href: '/services#augmented-reality-virtual-reality',
        description: 'AR/VR technology solutions',
        icon: <Eye className="w-4 h-4" />
      },
      {
        name: 'Edge Computing & 5G',
        href: '/services#edge-computing-5g',
        description: 'Edge computing solutions',
        icon: <Cpu className="w-4 h-4" />
      }
    ]
  },
  {
    name: 'Quantum Technology',
    href: '/quantum-services',
    icon: <Atom className="w-5 h-5" />,
    description: 'Quantum computing solutions',
    badge: 'Quantum',
    category: 'quantum',
    color: 'from-blue-500 to-cyan-500',
    children: [
      {
        name: 'Quantum Neural Ecosystem 2040',
        href: '/quantum-neural-ecosystem-2040',
        description: 'Quantum-powered neural networks',
        icon: <Atom className="w-4 h-4" />,
        description: 'Next-generation quantum solutions',
        featured: true,
        badge: 'New'
      },
      {
        label: 'Space Technology',
        href: '/space-tech',
        icon: <Satellite className="w-4 h-4" />,
        description: 'Innovative space solutions',
        featured: true
      },
      {
        label: 'Cybersecurity',
        href: '/cybersecurity',
        icon: <Shield className="w-4 h-4" />,
        description: 'Enterprise security solutions',
        featured: true
      },
      {
        label: 'Cloud Solutions',
        href: '/cloud-platform',
        icon: <Cloud className="w-4 h-4" />,
        description: 'Scalable cloud infrastructure',
        featured: true
      },
      {
        label: 'Micro SaaS',
        href: '/micro-saas',
        icon: <Layers className="w-4 h-4" />,
        description: 'Rapid deployment SaaS solutions',
        featured: true
      },
      {
        label: 'IT Infrastructure',
        href: '/it-services',
        icon: <Server className="w-4 h-4" />,
        description: 'Complete IT infrastructure solutions'
      },
      {
        label: 'Data Analytics',
        href: '/data-analytics',
        icon: <BarChart3 className="w-4 h-4" />,
        description: 'Advanced analytics and insights'
      },
      {
        label: 'DevOps & Automation',
        href: '/devops-automation',
        icon: <Command className="w-4 h-4" />,
        description: 'Automated development and operations'
      },
      {
        label: 'Edge Computing',
        href: '/edge-computing-orchestration-platform',
        icon: <Server className="w-4 h-4" />,
        description: 'Distributed computing solutions',
        badge: 'Scalable'
      }
    ]
  },
  {
    label: 'Micro SAAS',
    children: [
      {
        label: 'Enterprise IT',
        href: '/enterprise-solutions-showcase',
        icon: <Globe className="w-4 h-4" />,
        description: 'Complete enterprise IT solutions',
        featured: true
      },
      {
        label: 'Healthcare',
        href: '/healthcare-solutions',
        icon: <Heart className="w-4 h-4" />,
        description: 'Healthcare technology solutions',
        featured: true
      },
      {
        label: 'Financial Services',
        href: '/financial-solutions',
        icon: <BarChart3 className="w-4 h-4" />,
        description: 'Fintech and banking solutions',
        featured: true
      },
      {
        label: 'Manufacturing',
        href: '/manufacturing-ai-solutions',
        icon: <Cpu className="w-4 h-4" />,
        description: 'Smart manufacturing solutions'
      },
      {
        label: 'Retail & E-commerce',
        href: '/retail-technology-solutions',
        icon: <ShoppingCart className="w-4 h-4" />,
        description: 'Digital retail transformation'
      },
      {
        label: 'Education',
        href: '/education-technology',
        icon: <Lightbulb className="w-4 h-4" />,
        description: 'EdTech and learning solutions'
      },
      {
        label: 'Government',
        href: '/government-technology-solutions',
        icon: <ShieldCheck className="w-4 h-4" />,
        description: 'Public sector technology'
      }
    ]
  },
  {
<<<<<<< HEAD
    label: 'About',
    href: '/about',
    icon: <Users className="w-4 h-4" />
  },
  {
    label: 'Contact',
    href: '/contact',
    icon: <Mail className="w-4 h-4" />
  }
];

const contactInfo = {
  phone: '+1 302 464 0950',
  email: 'kleber@ziontechgroup.com',
  address: '364 E Main St STE 1008 Middletown DE 19709'
};

const socialLinks = [
  { name: 'Twitter', href: 'https://twitter.com/ziontechgroup', icon: <Twitter className="w-4 h-4" /> },
  { name: 'LinkedIn', href: 'https://www.linkedin.com/company/ziontechgroup', icon: <Linkedin className="w-4 h-4" /> },
  { name: 'YouTube', href: 'https://youtube.com/@ziontechgroup', icon: <Youtube className="w-4 h-4" /> },
  { name: 'GitHub', href: 'https://github.com/Zion-Holdings', icon: <Github className="w-4 h-4" /> }
];

export default function UltraFuturisticNavigation2040() {
  const [isOpen, setIsOpen] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  const router = useRouter();
  const mobileMenuRef = useRef<HTMLDivElement>(null);
  const searchInputRef = useRef<HTMLInputElement>(null);

  // Accessibility preferences
  useEffect(() => {
    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    setIsReducedMotion(prefersReducedMotion);
  }, []);

  // Scroll effect
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 20);
    };

    window.addEventListener('scroll', handleScroll, { passive: true });
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Close mobile menu on route change
  useEffect(() => {
    setIsMobileMenuOpen(false);
    setActiveDropdown(null);
  }, [router.pathname]);

  // Close mobile menu when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (mobileMenuRef.current && !mobileMenuRef.current.contains(event.target as Node)) {
        setIsMobileMenuOpen(false);
=======
    label: 'Company',
    children: [
      {
        label: 'About Us',
        href: '/about',
        icon: <Users className="w-4 h-4" />,
        description: 'Learn about our mission and team'
      },
      {
        label: 'Careers',
        href: '/careers',
        icon: <Award className="w-4 h-4" />,
        description: 'Join our innovative team'
      },
      {
        label: 'News',
        href: '/news',
        icon: <TrendingUp className="w-4 h-4" />,
        description: 'Latest company updates'
      },
      {
        label: 'Contact',
        href: '/contact',
        icon: <Mail className="w-4 h-4" />,
        description: 'Get in touch with us'
      }
    ]
  }
];

const UltraFuturisticNavigation2040: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);
  const [searchQuery, setSearchQuery] = useState('');
  const [showSearch, setShowSearch] = useState(false);
  const [searchResults, setSearchResults] = useState<any[]>([]);
  const router = useRouter();
  const searchRef = useRef<HTMLDivElement>(null);
  const searchInputRef = useRef<HTMLInputElement>(null);

  // Close dropdowns when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (searchRef.current && !searchRef.current.contains(event.target as Node)) {
        setShowSearch(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

  // Keyboard shortcuts for search
  useEffect(() => {
    const handleKeyDown = (event: KeyboardEvent) => {
      if ((event.metaKey || event.ctrlKey) && event.key === 'k') {
        event.preventDefault();
        setShowSearch(true);
        setTimeout(() => searchInputRef.current?.focus(), 100);
      }
      if (event.key === 'Escape') {
        setShowSearch(false);
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-e6d1
      }
    };

    document.addEventListener('keydown', handleKeyDown);
    return () => document.removeEventListener('keydown', handleKeyDown);
  }, []);

<<<<<<< HEAD
  // Focus management for search
  useEffect(() => {
    if (isSearchOpen && searchInputRef.current) {
      searchInputRef.current.focus();
=======
  // Search functionality
  const handleSearch = async (query: string) => {
    setSearchQuery(query);
    if (query.length < 2) {
      setSearchResults([]);
      return;
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-e6d1
    }

<<<<<<< HEAD
  // Keyboard navigation
  const handleKeyDown = useCallback((event: React.KeyboardEvent, action: () => void) => {
    if (event.key === 'Enter' || event.key === ' ') {
      event.preventDefault();
      action();
    }
  }, []);
=======
    // Simulate search results - in production, this would call an API
    const mockResults = [
      { title: 'AI Consciousness Evolution', url: '/ai-consciousness-evolution', category: 'AI Services' },
      { title: 'Quantum Cybersecurity', url: '/quantum-cybersecurity', category: 'Quantum Services' },
      { title: 'Space Resource Intelligence', url: '/space-resource-intelligence', category: 'Space Tech' },
      { title: 'Autonomous Business Intelligence', url: '/autonomous-business-intelligence', category: 'AI Services' },
    ].filter(result => 
      result.title.toLowerCase().includes(query.toLowerCase()) ||
      result.category.toLowerCase().includes(query.toLowerCase())
    );

    setSearchResults(mockResults);
  };

  const handleSearchResultClick = (url: string) => {
    router.push(url);
    setShowSearch(false);
    setSearchQuery('');
    setSearchResults([]);
  };
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-e6d1

  const toggleMobileMenu = useCallback(() => {
    setIsMobileMenuOpen(prev => !prev);
  }, []);

<<<<<<< HEAD
  const toggleDropdown = useCallback((label: string) => {
    setActiveDropdown(prev => prev === label ? null : label);
  }, []);

  const toggleSearch = useCallback(() => {
    setIsSearchOpen(prev => !prev);
    if (!isSearchOpen) {
      setSearchQuery('');
    }
  }, [isSearchOpen]);

  const handleSearch = useCallback((e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      router.push(`/search?q=${encodeURIComponent(searchQuery.trim())}`);
      setIsSearchOpen(false);
      setSearchQuery('');
    }
  }, [searchQuery, router]);

  const toggleAccessibilityMode = useCallback(() => {
    setIsAccessibilityMode(prev => !prev);
    document.documentElement.classList.toggle('accessibility-mode');
  }, []);

  const toggleHighContrast = useCallback(() => {
    setIsHighContrast(prev => !prev);
    document.documentElement.classList.toggle('high-contrast');
  }, []);

  const navClasses = `fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
    isScrolled 
      ? 'bg-gray-900/95 backdrop-blur-md border-b border-gray-700/50' 
      : 'bg-transparent'
  }`;

  const dropdownVariants = {
    hidden: { opacity: 0, y: -10, scale: 0.95 },
    visible: { opacity: 1, y: 0, scale: 1 }
  };

  return (
    <nav className="fixed top-0 left-0 right-0 z-50 bg-black/80 backdrop-blur-xl border-b border-cyan-500/20">
      {/* Enhanced Top Contact Bar */}
      <div className="bg-gradient-to-r from-cyan-500/10 via-blue-500/10 to-purple-500/10 border-b border-cyan-400/20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-10 text-xs">
            <div className="flex items-center space-x-4 text-cyan-300">
              <a href="tel:+13024640950" className="flex items-center space-x-1 hover:text-cyan-200 transition-colors">
                <Phone className="w-3 h-3" />
                <span>+1 302 464 0950</span>
              </a>
              <a href="mailto:kleber@ziontechgroup.com" className="flex items-center space-x-1 hover:text-cyan-200 transition-colors">
                <Mail className="w-3 h-3" />
                <span>kleber@ziontechgroup.com</span>
              </a>
            </div>
            <div className="flex items-center space-x-4 text-purple-300">
              <span className="flex items-center space-x-1">
                <MapPin className="w-3 h-3" />
                <span>Middletown DE 19709</span>
              </span>
              <span className="px-2 py-1 bg-gradient-to-r from-purple-500/20 to-pink-500/20 border border-purple-400/30 rounded-full text-xs">
                Innovation Leader 2025
              </span>
            </div>
          </div>
        </div>
      </div>

      {/* Main Navigation */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-20">
          {/* Logo */}
          <div className="flex items-center space-x-3">
            <Link href="/" className="flex items-center space-x-3 group">
              <div className="w-10 h-10 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                <Brain className="w-6 h-6 text-white" />
              </div>
              <div className="hidden sm:block">
                <div className="text-xl font-bold bg-gradient-to-r from-cyan-400 to-blue-500 bg-clip-text text-transparent">
                  Zion Tech Group
                </div>
                <div className="text-xs text-gray-400">Innovation 2040</div>
              </div>
            </Link>
          </div>

          {/* Desktop Navigation */}
          <div className="hidden lg:flex items-center space-x-1">
            {navigationItems.map((item) => (
              <div key={item.name} className="relative group">
                <button
                  className={`
                    flex items-center space-x-2 px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300
                    ${item.badge ? 'bg-gradient-to-r ' + item.color + ' text-white' : 'text-gray-300 hover:text-white hover:bg-white/5'}
                  `}
                >
                  {item.icon}
                  <span>{item.name}</span>
                  {item.badge && (
                    <span className="px-2 py-1 text-xs bg-white/20 rounded-full">
                      {item.badge}
                    </span>
                  )}
                  {item.children && (
                    <ChevronDown className="w-4 h-4 transition-transform group-hover:rotate-180" />
                  )}
                </button>

                {/* Enhanced Dropdown */}
                {item.children && (
                  <div className="absolute top-full left-0 mt-2 w-80 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform group-hover:translate-y-0 translate-y-2">
                    <div className="bg-black/95 backdrop-blur-xl border border-cyan-500/20 rounded-xl shadow-2xl shadow-cyan-500/10 p-4">
                      <div className="grid grid-cols-1 gap-2">
                        {item.children.map((child) => (
                          <Link
                            key={child.name}
                            href={normalizeHref(child.href)}
                            className={`
                              flex items-start space-x-3 p-3 rounded-lg transition-all duration-300 group/child
                              ${child.featured 
                                ? 'bg-gradient-to-r ' + (child.color || 'from-cyan-500/20 to-blue-500/20') + ' border border-cyan-400/30' 
                                : 'hover:bg-white/5'
                              }
                            `}
                          >
                            <div className={`
                              w-8 h-8 rounded-lg flex items-center justify-center text-white
                              ${child.featured 
                                ? 'bg-gradient-to-r ' + (child.color || 'from-cyan-500 to-blue-500') 
                                : 'bg-gray-700'
                              }
                            `}>
                              {child.icon}
                            </div>
                            <div className="flex-1 min-w-0">
                              <div className="flex items-center space-x-2">
                                <span className="font-medium text-white group-hover/child:text-cyan-300 transition-colors">
                                  {child.name}
                                </span>
                                {child.featured && (
                                  <span className="px-2 py-1 text-xs bg-cyan-500/20 text-cyan-300 rounded-full">
                                    Featured
                                  </span>
                                )}
                              </div>
                              <p className="text-sm text-gray-400 mt-1 line-clamp-2">
                                {child.description}
                              </p>
                            </div>
                            <ArrowRight className="w-4 h-4 text-gray-500 group-hover/child:text-cyan-400 transition-colors" />
                          </Link>
                        ))}
                      </div>
                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>

          {/* CTA Buttons */}
          <div className="hidden lg:flex items-center space-x-3">
            <Link href="/contact">
              <button className="px-4 py-2 border border-cyan-400 text-cyan-400 rounded-lg hover:bg-cyan-400 hover:text-black transition-all duration-300">
                Contact Us
              </button>
            </Link>
            <Link href="/get-started">
              <button className="px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-300 transform hover:scale-105">
                Get Started
              </button>
            </Link>
          </div>

          {/* Mobile Menu Button */}
          <button
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            className="lg:hidden p-2 rounded-lg text-gray-300 hover:text-white hover:bg-white/5 transition-colors"
          >
            {isMobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
        </div>
      </div>

      {/* Mobile Navigation */}
      <AnimatePresence>
        {isMobileMenuOpen && (
          <motion.div
            ref={mobileMenuRef}
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: isReducedMotion ? 0.1 : 0.3 }}
            id="mobile-menu"
            className="lg:hidden bg-gray-900/95 backdrop-blur-md border-t border-gray-700/50"
            role="menu"
            aria-orientation="vertical"
          >
            <div className="px-4 py-6 space-y-4">
              {navigationItems.map((item) => (
                <div key={item.label}>
                  {item.children ? (
                    <div>
                      <button
                        onClick={() => toggleDropdown(item.label)}
                        className="flex items-center justify-between w-full px-4 py-3 text-left text-gray-300 hover:text-white hover:bg-gray-800/50 rounded-lg transition-all duration-300"
                        aria-expanded={activeDropdown === item.label}
                        aria-controls={`mobile-${item.label}-dropdown`}
                      >
                        <div className="flex items-center space-x-3">
                          {item.icon}
                          <span className="font-medium">{item.label}</span>
                        </div>
                        <ChevronDown className={`w-4 h-4 transition-transform duration-300 ${
                          activeDropdown === item.label ? 'rotate-180' : ''
                        }`} />
                      </button>
                      
                      <AnimatePresence>
                        {activeDropdown === item.label && (
                          <motion.div
                            initial={{ opacity: 0, height: 0 }}
                            animate={{ opacity: 1, height: 'auto' }}
                            exit={{ opacity: 0, height: 0 }}
                            transition={{ duration: isReducedMotion ? 0.1 : 0.2 }}
                            id={`mobile-${item.label}-dropdown`}
                            className="ml-8 mt-2 space-y-2"
                          >
                            {item.children.map((child, index) => (
                              <Link
                                key={index}
                                href={child.href || '#'}
                                className="block px-4 py-2 text-gray-400 hover:text-white hover:bg-gray-800/50 rounded-lg transition-all duration-300"
                                role="menuitem"
                              >
                                {child.label}
                              </Link>
                            ))}
                          </motion.div>
                        )}
                      </AnimatePresence>
                    </div>
                  ) : (
                    <Link
                      href={item.href || '#'}
                      className="flex items-center space-x-3 px-4 py-3 text-gray-300 hover:text-white hover:bg-gray-800/50 rounded-lg transition-all duration-300"
                      role="menuitem"
=======
  const closeAllDropdowns = () => {
    setActiveDropdown(null);
    setIsOpen(false);
  };

  return (
    <>
      {/* Search Modal */}
      <AnimatePresence>
        {showSearch && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-start justify-center pt-20"
          >
            <motion.div
              initial={{ scale: 0.95, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.95, opacity: 0 }}
              ref={searchRef}
              className="w-full max-w-2xl mx-4"
            >
              <div className="relative">
                <div className="relative">
                  <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                  <input
                    ref={searchInputRef}
                    type="text"
                    placeholder="Search services, solutions, or resources..."
                    value={searchQuery}
                    onChange={(e) => handleSearch(e.target.value)}
                    className="w-full pl-12 pr-4 py-4 bg-gray-900/90 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent"
                  />
                  <div className="absolute right-4 top-1/2 transform -translate-y-1/2 flex items-center gap-2 text-xs text-gray-400">
                    <kbd className="px-2 py-1 bg-gray-800 rounded">⌘K</kbd>
                  </div>
                </div>
                
                {/* Search Results */}
                {searchResults.length > 0 && (
                  <motion.div
                    initial={{ opacity: 0, y: -10 }}
                    animate={{ opacity: 1, y: 0 }}
                    className="mt-4 bg-gray-900/90 border border-gray-700 rounded-xl overflow-hidden"
                  >
                    {searchResults.map((result, index) => (
                      <button
                        key={index}
                        onClick={() => handleSearchResultClick(result.url)}
                        className="w-full px-4 py-3 text-left hover:bg-gray-800/50 transition-colors border-b border-gray-700 last:border-b-0"
                      >
                        <div className="flex items-center justify-between">
                          <div>
                            <div className="text-white font-medium">{result.title}</div>
                            <div className="text-sm text-gray-400">{result.category}</div>
                          </div>
                          <ArrowRight className="w-4 h-4 text-gray-400" />
                        </div>
                      </button>
                    ))}
                  </motion.div>
                )}
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* Navigation Bar */}
      <nav className="fixed top-0 left-0 right-0 z-40 bg-black/80 backdrop-blur-md border-b border-gray-800/50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            {/* Logo */}
            <Link href="/" className="flex items-center space-x-2" onClick={closeAllDropdowns}>
              <div className="w-8 h-8 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-lg flex items-center justify-center">
                <Zap className="w-5 h-5 text-white" />
              </div>
              <span className="text-xl font-bold bg-gradient-to-r from-cyan-400 to-blue-500 bg-clip-text text-transparent">
                Zion Tech Group
              </span>
            </Link>

            {/* Desktop Navigation */}
            <div className="hidden lg:flex items-center space-x-8">
              {navigationItems.map((item) => (
                <div key={item.label} className="relative">
                  {item.children ? (
                    <button
                      onClick={() => toggleDropdown(item.label)}
                      onMouseEnter={() => setActiveDropdown(item.label)}
                      onMouseLeave={() => setActiveDropdown(null)}
                      className="flex items-center space-x-1 px-3 py-2 text-gray-300 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
                    >
                      <span>{item.label}</span>
                      <ChevronDown className={`w-4 h-4 transition-transform ${activeDropdown === item.label ? 'rotate-180' : ''}`} />
                    </button>
                  ) : (
                    <Link
                      href={item.href || '#'}
                      className="px-3 py-2 text-gray-300 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
                      onClick={closeAllDropdowns}
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-e6d1
                    >
                      {item.icon}
                      <span className="font-medium">{item.label}</span>
                    </Link>
                  )}
<<<<<<< HEAD
                </div>
              ))}
              
              {/* Mobile CTA */}
              <div className="pt-4 border-t border-gray-700/50">
                <Link
                  href="/get-started"
                  className="block w-full text-center px-6 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-semibold rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-300"
                >
                  Get Started
                </Link>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
=======

                  {/* Dropdown Menu */}
                  {item.children && activeDropdown === item.label && (
                    <div
                      onMouseEnter={() => setActiveDropdown(item.label)}
                      onMouseLeave={() => setActiveDropdown(null)}
                      className="absolute top-full left-0 mt-2 w-80 bg-gray-900/95 backdrop-blur-md border border-gray-700 rounded-xl shadow-2xl"
                    >
                      <div className="p-4 space-y-3">
                        {item.children.map((child) => (
                          <Link
                            key={child.label}
                            href={child.href || '#'}
                            className="flex items-start space-x-3 p-3 rounded-lg hover:bg-gray-800/50 transition-colors group"
                            onClick={closeAllDropdowns}
                          >
                            <div className="w-8 h-8 bg-gray-800 rounded-lg flex items-center justify-center group-hover:bg-cyan-500/20 transition-colors">
                              {child.icon}
                            </div>
                            <div className="flex-1">
                              <div className="text-white font-medium group-hover:text-cyan-400 transition-colors">
                                {child.label}
                              </div>
                              <div className="text-sm text-gray-400 mt-1">
                                {child.description}
                              </div>
                            </div>
                          </Link>
                        ))}
                      </div>
                    </div>
                  )}
                </div>
              ))}
            </div>

            {/* Right Side Actions */}
            <div className="hidden lg:flex items-center space-x-4">
              {/* Search Button */}
              <button
                onClick={() => setShowSearch(true)}
                className="p-2 text-gray-400 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
                aria-label="Search"
              >
                <Search className="w-5 h-5" />
              </button>

              {/* Contact Button */}
              <Link
                href="/contact"
                className="px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-medium rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-300 transform hover:scale-105"
                onClick={closeAllDropdowns}
              >
                Get Started
              </Link>
            </div>

            {/* Mobile Menu Button */}
            <button
              onClick={() => setIsOpen(!isOpen)}
              className="lg:hidden p-2 text-gray-400 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
              aria-label="Toggle mobile menu"
            >
              {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>
        </div>

        {/* Mobile Navigation */}
        <AnimatePresence>
          {isOpen && (
            <motion.div
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: 'auto' }}
              exit={{ opacity: 0, height: 0 }}
              className="lg:hidden bg-gray-900/95 backdrop-blur-md border-t border-gray-800/50"
            >
              <div className="px-4 py-6 space-y-4">
                {/* Mobile Search */}
                <div className="relative">
                  <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                  <input
                    type="text"
                    placeholder="Search..."
                    className="w-full pl-10 pr-4 py-3 bg-gray-800 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-500"
                  />
                </div>

                {/* Mobile Menu Items */}
                {navigationItems.map((item) => (
                  <div key={item.label}>
                    {item.children ? (
                      <div>
                        <button
                          onClick={() => toggleDropdown(item.label)}
                          className="w-full flex items-center justify-between px-3 py-3 text-left text-gray-300 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
                        >
                          <span>{item.label}</span>
                          <ChevronDown className={`w-4 h-4 transition-transform ${activeDropdown === item.label ? 'rotate-180' : ''}`} />
                        </button>
                        {activeDropdown === item.label && (
                          <div className="ml-4 mt-2 space-y-2">
                            {item.children.map((child) => (
                              <Link
                                key={child.label}
                                href={child.href || '#'}
                                className="block px-3 py-2 text-gray-400 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
                                onClick={closeAllDropdowns}
                              >
                                {child.label}
                              </Link>
                            ))}
                          </div>
                        )}
                      </div>
                    ) : (
                      <Link
                        href={item.href || '#'}
                        className="block px-3 py-3 text-gray-300 hover:text-white transition-colors rounded-lg hover:bg-gray-800/50"
                        onClick={closeAllDropdowns}
                      >
                        {item.label}
                      </Link>
                    )}
                  </div>
                ))}

                {/* Mobile Contact Button */}
                <Link
                  href="/contact"
                  className="block w-full px-4 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-medium text-center rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-300"
                  onClick={closeAllDropdowns}
                >
                  Get Started
                </Link>
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </nav>
>>>>>>> origin/cursor/analyze-improve-and-deploy-ziontechgroup-app-e6d1
    </>
  );
}