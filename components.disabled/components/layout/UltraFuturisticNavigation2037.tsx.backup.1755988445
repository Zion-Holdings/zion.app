import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { motion, AnimatePresence } from 'framer-motion';
<<<<<<< HEAD
import { 
  Menu, ChevronDown, X, Phone, Mail, MapPin, ArrowRight,
  Brain, Rocket, Shield, Zap, Target, Atom, BookOpen,
  Truck, DollarSign, BarChart3, Globe, Users, Star, Sparkles, 
  Cpu, Lock, Cloud, Settings, Eye, Award, Clock, Heart, Lightbulb,
  Search, Grid, List, TrendingUp, Shield as ShieldIcon, Globe as GlobeIcon,
  User, ShoppingCart, Bell, HelpCircle, FileText, Video, Headphones, 
  Code, Database, Network, Server, Monitor, Smartphone,
  Camera, Gamepad2, Palette, Music, Film, BookOpenCheck,
  Building, MessageCircle, Sparkles as SparklesIcon, Zap as ZapIcon,
  Target as TargetIcon, Atom as AtomIcon, Brain as BrainIcon
} from 'lucide-react';
=======
import { Brain, Rocket, Shield, Atom, Globe, BookOpen, Building, ChevronDown, Menu, X, Star } from 'lucide-react';
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf

interface NavigationItem {
  name: string;
  href: string;
  icon: React.ReactNode;
  description: string;
  badge?: string;
  featured?: boolean;
<<<<<<< HEAD
  category?: string;
}

const contactInfo = {
  mobile: '+1 302 464 0950',
  email: 'kleber@ziontechgroup.com',
  address: '364 E Main St STE 1008 Middletown DE 19709',
  website: 'https://ziontechgroup.com'
};

function normalizeHref(href: string): string {
  if (!href) return href;
  if (href.startsWith('http://') || href.startsWith('https://') || href.startsWith('mailto:') || href.startsWith('tel:')) {
    return href;
  }
  if (!href.startsWith('/')) return href;
  const hasQueryOrHash = href.includes('?') || href.includes('#');
  if (hasQueryOrHash) return href;
  return href.endsWith('/') ? href : href + '/';
=======
  category: string;
  children?: NavigationItem[];
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
}

const navigationItems: NavigationItem[] = [
  {
<<<<<<< HEAD
    name: 'Micro SAAS Services',
    href: '/services',
    icon: <Rocket className="w-5 h-5" />,
    description: 'Innovative business solutions',
    badge: 'New',
    category: 'services',
    color: 'from-emerald-500 to-cyan-500',
    children: [
      { 
        name: 'All Services', 
        href: '/services', 
        description: 'Complete services overview',
        icon: <Grid className="w-4 h-4" />,
        featured: true
      },
      { 
        name: '2041 Futuristic Services', 
        href: '/2041-futuristic-services-showcase', 
        description: 'Revolutionary 2041 technology',
        icon: <Rocket className="w-4 h-4" />,
        color: 'from-cyan-500 to-purple-500',
        featured: true
      },
      { 
        name: 'AI & Consciousness', 
        href: '/ai-services', 
        description: 'Advanced AI solutions',
        icon: <Brain className="w-4 h-4" />,
        color: 'from-purple-500 to-pink-500'
      },
      { 
        name: 'Quantum Technology', 
        href: '/quantum-services', 
        description: 'Quantum computing solutions',
        icon: <Atom className="w-4 h-4" />,
        color: 'from-blue-500 to-cyan-500'
      },
      { 
        name: 'Space Technology', 
        href: '/space-technology', 
        description: 'Space exploration solutions',
        icon: <Rocket className="w-4 h-4" />,
        color: 'from-indigo-500 to-purple-500'
      },
      { 
        name: 'IT Solutions', 
        href: '/it-services', 
        description: 'Enterprise IT infrastructure',
        icon: <Cpu className="w-4 h-4" />,
        color: 'from-orange-500 to-red-500'
      },
      { 
        name: 'Specialized Solutions', 
        href: '/solutions', 
        description: 'Industry-specific solutions',
        icon: <Target className="w-4 h-4" />,
        color: 'from-green-500 to-emerald-500'
      }
    ]
  },
  {
    name: 'AI Services',
    href: '/ai-services',
    icon: <BrainIcon className="w-5 h-5" />,
    description: 'Advanced AI solutions',
    badge: 'AI',
    category: 'ai',
    featured: true,
    children: [
      { 
        name: 'AI Content Orchestrator', 
        href: '/ai-content-orchestrator', 
        description: 'Intelligent content creation and management',
        icon: <BrainIcon className="w-4 h-4" />,
        featured: true
      },
      { 
        name: 'AI Legal Assistant', 
        href: '/ai-legal-assistant', 
        description: 'Legal research and document automation',
        icon: <FileText className="w-4 h-4" />
      },
      { 
        name: 'AI Healthcare Diagnostics', 
        href: '/ai-healthcare-diagnostics', 
        description: 'Medical imaging and diagnostic platform',
        icon: <Heart className="w-4 h-4" />
      },
      { 
        name: 'AI Creative Studio', 
        href: '/ai-creative-studio', 
        description: 'AI-driven content creation platform',
        icon: <Palette className="w-4 h-4" />
      },
      { 
        name: 'AI Supply Chain Optimizer', 
        href: '/ai-supply-chain-optimizer', 
        description: 'Intelligent supply chain optimization',
        icon: <Truck className="w-4 h-4" />
=======
    name: 'AI & Consciousness',
    href: '/ai-services',
    icon: <Brain className="w-5 h-5" />,
    description: 'Revolutionary AI consciousness and emotional intelligence',
    badge: 'New',
    featured: true,
    category: 'AI',
    children: [
      {
        name: 'AI Consciousness Evolution 2029',
        href: '/ai-consciousness-evolution-2029',
        icon: <Brain className="w-4 h-4" />,
        description: 'Breakthrough AI consciousness platform',
        category: 'AI'
      },
      {
        name: 'AI Emotional Intelligence Training',
        href: '/ai-emotional-intelligence-training',
        icon: <Brain className="w-4 h-4" />,
        description: 'Train AI systems to understand emotions',
        category: 'AI'
      },
      {
        name: 'AI Autonomous Research Assistant',
        href: '/ai-autonomous-research-assistant',
        icon: <Brain className="w-4 h-4" />,
        description: 'Fully autonomous AI research agent',
        category: 'AI'
      },
      {
        name: 'AI Predictive Maintenance',
        href: '/ai-predictive-maintenance-platform',
        icon: <Brain className="w-4 h-4" />,
        description: 'Predict equipment failures with AI',
        category: 'AI'
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
      }
    ]
  },
  {
<<<<<<< HEAD
    name: 'Quantum Technology',
    href: '/quantum-services',
    icon: <AtomIcon className="w-5 h-5" />,
    description: 'Quantum computing solutions',
    badge: 'Quantum',
    category: 'quantum',
    featured: true,
    children: [
      { 
        name: 'Quantum Cybersecurity Suite', 
        href: '/quantum-cybersecurity-suite', 
        description: 'Quantum-resistant security platform',
        icon: <Shield className="w-4 h-4" />,
        featured: true
      },
      { 
        name: 'Quantum Machine Learning', 
        href: '/quantum-machine-learning-platform', 
        description: 'Quantum-enhanced ML solutions',
        icon: <BrainIcon className="w-4 h-4" />
      },
      { 
        name: 'Quantum Financial Modeling', 
        href: '/quantum-financial-modeling', 
        description: 'Quantum-powered financial analysis',
        icon: <DollarSign className="w-4 h-4" />
      },
      { 
        name: 'Quantum Optimization Engine', 
        href: '/quantum-optimization-engine', 
        description: 'Quantum-powered optimization',
        icon: <TargetIcon className="w-4 h-4" />
      },
      { 
        name: 'Quantum Cryptography', 
        href: '/quantum-cryptography-platform', 
        description: 'Unbreakable quantum encryption',
        icon: <Lock className="w-4 h-4" />
=======
    name: 'Enterprise IT Solutions',
    href: '/it-services',
    icon: <Shield className="w-5 h-5" />,
    description: 'Advanced enterprise infrastructure solutions',
    badge: 'Enterprise',
    category: 'IT',
    children: [
      {
        name: 'Enterprise Cybersecurity Suite 2029',
        href: '/enterprise-cybersecurity-suite-2029',
        icon: <Shield className="w-4 h-4" />,
        description: 'Next-generation enterprise cybersecurity',
        category: 'IT'
      },
      {
        name: 'Cloud Infrastructure Automation',
        href: '/cloud-infrastructure-automation',
        icon: <Shield className="w-4 h-4" />,
        description: 'Automate cloud infrastructure management',
        category: 'IT'
      },
      {
        name: 'Data Center Optimization',
        href: '/data-center-optimization-suite',
        icon: <Shield className="w-4 h-4" />,
        description: 'Optimize data center performance with AI',
        category: 'IT'
      },
      {
        name: 'Network Performance Monitoring',
        href: '/network-performance-monitoring',
        icon: <Shield className="w-4 h-4" />,
        description: 'Monitor and optimize network performance',
        category: 'IT'
      }
    ]
  },
  {
    name: 'Micro SAAS Solutions',
    href: '/micro-saas',
    icon: <Rocket className="w-5 h-5" />,
    description: 'Innovative business solutions for modern enterprises',
    badge: 'Business',
    category: 'SAAS',
    children: [
      {
        name: 'AI-Powered CRM Automation',
        href: '/ai-powered-crm-automation',
        icon: <Rocket className="w-4 h-4" />,
        description: 'Automate your CRM with intelligent AI workflows',
        category: 'SAAS'
      },
      {
        name: 'Smart Inventory Management',
        href: '/smart-inventory-management',
        icon: <Rocket className="w-4 h-4" />,
        description: 'Optimize inventory with AI-powered forecasting',
        category: 'SAAS'
      },
      {
        name: 'Automated Accounting Platform',
        href: '/automated-accounting-platform',
        icon: <Rocket className="w-4 h-4" />,
        description: 'Streamline accounting with intelligent automation',
        category: 'SAAS'
      },
      {
        name: 'Intelligent Project Management',
        href: '/intelligent-project-management',
        icon: <Rocket className="w-4 h-4" />,
        description: 'Manage projects with AI-powered insights',
        category: 'SAAS'
      }
    ]
  },
  {
    name: 'Quantum & Emerging Tech',
    href: '/quantum-services',
    icon: <Atom className="w-5 h-5" />,
    description: 'Cutting-edge quantum and emerging technologies',
    badge: 'Future',
    category: 'Quantum',
    children: [
      {
        name: 'Quantum Cybersecurity',
        href: '/quantum-cybersecurity-services',
        icon: <Atom className="w-4 h-4" />,
        description: 'Quantum-resistant security solutions',
        category: 'Quantum'
      },
      {
        name: 'Quantum AI Fusion',
        href: '/quantum-ai-fusion',
        icon: <Atom className="w-4 h-4" />,
        description: 'Quantum AI hybrid computing platform',
        category: 'Quantum'
      },
      {
        name: 'Space Technology',
        href: '/space-technology',
        icon: <Atom className="w-4 h-4" />,
        description: 'Advanced space technology solutions',
        category: 'Quantum'
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
      }
    ]
  },
  {
<<<<<<< HEAD
    name: 'Space Technology',
    href: '/space-technology',
    icon: <Rocket className="w-5 h-5" />,
    description: 'Space exploration solutions',
    badge: 'Space',
    category: 'space',
    children: [
      { 
        name: 'Space Data Analytics', 
        href: '/space-data-analytics-platform', 
        description: 'Satellite data processing platform',
        icon: <BarChart3 className="w-4 h-4" />,
        featured: true
      },
      { 
        name: 'Space Mining Operations', 
        href: '/space-mining-operations-platform', 
        description: 'Space resource extraction management',
        icon: <Truck className="w-4 h-4" />
=======
    name: 'Resources',
    href: '/resources',
    icon: <BookOpen className="w-5 h-5" />,
    description: 'Knowledge base and learning resources',
    category: 'Resources',
    children: [
      {
        name: 'Blog',
        href: '/blog',
        icon: <BookOpen className="w-4 h-4" />,
        description: 'Latest insights and industry trends',
        category: 'Resources'
      },
      {
        name: 'Case Studies',
        href: '/case-studies',
        icon: <BookOpen className="w-4 h-4" />,
        description: 'Real-world implementation success stories',
        category: 'Resources'
      },
      {
        name: 'Documentation',
        href: '/docs',
        icon: <BookOpen className="w-4 h-4" />,
        description: 'Technical documentation and guides',
        category: 'Resources'
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
      }
    ]
  },
  {
<<<<<<< HEAD
    name: 'Blockchain & Web3',
    href: '/blockchain-services',
    icon: <GlobeIcon className="w-5 h-5" />,
    description: 'Decentralized solutions',
    badge: 'Web3',
    category: 'blockchain',
    children: [
      { 
        name: 'Blockchain Governance', 
        href: '/blockchain-governance-platform', 
        description: 'Decentralized governance system',
        icon: <Users className="w-4 h-4" />,
        featured: true
      },
      { 
        name: 'Blockchain Supply Chain', 
        href: '/blockchain-supply-chain-tracking', 
        description: 'Transparent supply chain tracking',
        icon: <Truck className="w-4 h-4" />
      }
    ]
  },
  {
    name: 'Edge Computing',
    href: '/edge-computing',
    icon: <ZapIcon className="w-5 h-5" />,
    description: 'Edge computing solutions',
    badge: 'Edge',
    category: 'edge',
    children: [
      { 
        name: 'Edge Computing Orchestrator', 
        href: '/edge-computing-orchestrator', 
        description: 'Intelligent edge management',
        icon: <Server className="w-4 h-4" />,
        featured: true
      }
    ]
  },
  {
    name: 'Metaverse & VR',
    href: '/metaverse-services',
    icon: <Globe className="w-5 h-5" />,
    description: 'Virtual reality solutions',
    badge: 'VR',
    category: 'metaverse',
    children: [
      { 
        name: 'Metaverse Development Studio', 
        href: '/metaverse-development-studio', 
        description: 'Complete metaverse creation platform',
        icon: <Gamepad2 className="w-4 h-4" />,
        featured: true
      }
    ]
  },
  {
    name: 'Services Showcase',
    href: '/revolutionary-2037-services-showcase',
    icon: <Star className="w-5 h-5" />,
    description: 'Complete services portfolio',
    badge: 'Showcase',
    category: 'showcase',
    featured: true,
    children: [
      { 
        name: '2037 Services Showcase', 
        href: '/revolutionary-2037-services-showcase', 
        description: 'Complete 2037 services overview',
        icon: <Grid className="w-4 h-4" />,
        featured: true
      },
      { 
        name: 'Pricing Plans', 
        href: '/pricing', 
        description: 'Service pricing information',
        icon: <DollarSign className="w-4 h-4" />
      },
      { 
        name: 'Market Pricing', 
        href: '/market-pricing', 
        description: 'Market price references',
        icon: <BarChart3 className="w-4 h-4" />
      }
    ]
  },
  {
    name: 'Company',
    href: '/about',
    icon: <Building className="w-5 h-5" />,
    description: 'About Zion Tech Group',
    category: 'company',
    children: [
      { 
        name: 'About Us', 
        href: '/about', 
        description: 'Company information',
        icon: <Building className="w-4 h-4" />
      },
      { 
        name: 'Contact', 
        href: '/contact', 
        description: 'Get in touch',
        icon: <MessageCircle className="w-4 h-4" />
      },
      { 
        name: 'Partners', 
        href: '/partners', 
        description: 'Partnership opportunities',
        icon: <Users className="w-4 h-4" />
      },
      { 
        name: 'Investors', 
        href: '/investors', 
        description: 'Investment information',
        icon: <DollarSign className="w-4 h-4" />
      }
    ]
  },
  {
    name: 'Resources',
    href: '/resources',
    icon: <BookOpen className="w-5 h-5" />,
    description: 'Knowledge & support',
    category: 'resources',
    children: [
      { 
        name: 'Documentation', 
        href: '/docs', 
        description: 'Technical documentation',
        icon: <FileText className="w-4 h-4" />
      },
      { 
        name: 'Blog', 
        href: '/blog', 
        description: 'Latest insights',
        icon: <BookOpen className="w-4 h-4" />
      },
      { 
        name: 'Case Studies', 
        href: '/case-studies', 
        description: 'Success stories',
        icon: <Award className="w-4 h-4" />
      },
      { 
        name: 'Support', 
        href: '/support', 
        description: 'Technical support',
        icon: <HelpCircle className="w-4 h-4" />
=======
    name: 'Company',
    href: '/about',
    icon: <Building className="w-5 h-5" />,
    description: 'Learn about Zion Tech Group',
    category: 'Company',
    children: [
      {
        name: 'About Us',
        href: '/about',
        icon: <Building className="w-4 h-4" />,
        description: 'Our mission and vision',
        category: 'Company'
      },
      {
        name: 'Careers',
        href: '/careers',
        icon: <Building className="w-4 h-4" />,
        description: 'Join our team',
        category: 'Company'
      },
      {
        name: 'Contact',
        href: '/contact',
        icon: <Building className="w-4 h-4" />,
        description: 'Get in touch with us',
        category: 'Company'
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
      }
    ]
  }
];

// Normalize href to ensure proper routing
const normalizeHref = (href: string) => {
  if (href.startsWith('http')) return href;
  return href.startsWith('/') ? href : `/${href}`;
};

interface UltraFuturisticNavigation2037Props {
  onMenuToggle?: () => void;
  'aria-expanded'?: boolean;
}

export default function UltraFuturisticNavigation2037({ 
  onMenuToggle, 
  'aria-expanded': ariaExpanded 
}: UltraFuturisticNavigation2037Props) {
  const [isOpen, setIsOpen] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);
  const [isScrolled, setIsScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const toggleMenu = () => {
    setIsOpen(!isOpen);
    onMenuToggle?.();
  };

  const handleDropdownToggle = (itemName: string) => {
    setActiveDropdown(activeDropdown === itemName ? null : itemName);
  };

  const closeAllDropdowns = () => {
    setActiveDropdown(null);
    setIsOpen(false);
  };

  return (
<<<<<<< HEAD
    <nav className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
      isScrolled 
        ? 'bg-black/90 backdrop-blur-md border-b border-cyan-400/20' 
        : 'bg-transparent'
    }`}>
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16 lg:h-20">
          {/* Logo */}
          <motion.div 
            className="flex-shrink-0"
            whileHover={{ scale: 1.05 }}
            transition={{ duration: 0.2 }}
          >
            <Link href="/" className="flex items-center space-x-2">
              <div className="w-10 h-10 bg-gradient-to-r from-cyan-400 to-blue-600 rounded-lg flex items-center justify-center">
                <span className="text-white font-bold text-xl">Z</span>
              </div>
              <span className="text-xl font-bold bg-gradient-to-r from-cyan-400 to-blue-600 bg-clip-text text-transparent">
                Zion Tech Group
              </span>
            </Link>
          </motion.div>

          {/* Desktop Navigation */}
          <div className="hidden lg:flex items-center space-x-8">
            {navigationItems.map((item) => (
              <div key={item.name} className="relative group">
                <button
                  onClick={() => toggleDropdown(item.name)}
                  className="flex items-center space-x-2 px-4 py-2 text-gray-300 hover:text-cyan-400 transition-colors duration-200 font-medium"
                >
                  {item.icon}
                  <span>{item.name}</span>
                  {item.badge && (
                    <span className="px-2 py-1 text-xs font-bold bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-full">
                      {item.badge}
                    </span>
                  )}
                  <ChevronDown className="w-4 h-4 transition-transform duration-200 group-hover:rotate-180" />
                </button>

                <AnimatePresence>
                  {activeDropdown === item.name && (
                    <motion.div
                      initial={{ opacity: 0, y: 10, scale: 0.95 }}
                      animate={{ opacity: 1, y: 0, scale: 1 }}
                      exit={{ opacity: 0, y: 10, scale: 0.95 }}
                      transition={{ duration: 0.2 }}
                      className="absolute top-full left-0 mt-2 w-80 bg-gray-900/95 backdrop-blur-md border border-cyan-400/20 rounded-xl shadow-2xl shadow-cyan-500/20"
                    >
                      <div className="p-4">
                        <div className="grid grid-cols-1 gap-2">
                          {item.children?.map((child) => (
                            <Link
                              key={child.name}
                              href={normalizeHref(child.href)}
                              onClick={closeDropdown}
                              className="group flex items-center p-3 rounded-lg hover:bg-cyan-400/10 transition-all duration-200"
                            >
                              <div className="flex-shrink-0 w-8 h-8 bg-cyan-400/10 rounded-lg flex items-center justify-center group-hover:bg-cyan-400/20 transition-colors duration-200">
                                {child.icon}
                              </div>
                              <div className="ml-3 flex-1">
                                <div className="flex items-center justify-between">
                                  <p className="text-sm font-medium text-white group-hover:text-cyan-400 transition-colors duration-200">
                                    {child.name}
                                  </p>
                                  {child.featured && (
                                    <span className="text-xs text-cyan-400 font-semibold">FEATURED</span>
                                  )}
                                </div>
                                <p className="text-xs text-gray-400 mt-1">
                                  {child.description}
                                </p>
                              </div>
                            </Link>
                          ))}
                        </div>
=======
    <nav 
      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
        isScrolled 
          ? 'bg-black/90 backdrop-blur-md border-b border-cyan-500/20' 
          : 'bg-transparent'
      }`}
      role="navigation"
      aria-label="Main navigation"
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-20">
          {/* Logo */}
          <div className="flex-shrink-0">
            <Link 
              href="/" 
              className="flex items-center space-x-2 group"
              onClick={closeAllDropdowns}
            >
              <div className="w-10 h-10 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                <Globe className="w-6 h-6 text-white" />
              </div>
              <div className="hidden sm:block">
                <span className="text-xl font-bold bg-gradient-to-r from-cyan-400 to-blue-500 bg-clip-text text-transparent">
                  Zion Tech Group
                </span>
                <p className="text-xs text-gray-400">Future Technology Solutions</p>
              </div>
            </Link>
          </div>

          {/* Desktop Navigation */}
          <div className="hidden lg:flex items-center space-x-8">
            {navigationItems.map((item) => (
              <div key={item.name} className="relative group">
                <button
                  onClick={() => handleDropdownToggle(item.name)}
                  className="flex items-center space-x-2 px-4 py-2 text-gray-300 hover:text-white transition-colors duration-200 group-hover:text-cyan-400"
                  aria-expanded={activeDropdown === item.name}
                  aria-haspopup="true"
                >
                  {item.icon}
                  <span>{item.name}</span>
                  {item.badge && (
                    <span className="px-2 py-1 text-xs bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-full">
                      {item.badge}
                    </span>
                  )}
                  <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${
                    activeDropdown === item.name ? 'rotate-180' : ''
                  }`} />
                </button>

                {/* Dropdown Menu */}
                <AnimatePresence>
                  {activeDropdown === item.name && (
                    <motion.div
                      initial={{ opacity: 0, y: -10 }}
                      animate={{ opacity: 1, y: 0 }}
                      exit={{ opacity: 0, y: -10 }}
                      transition={{ duration: 0.2 }}
                      className="absolute top-full left-0 mt-2 w-80 bg-black/95 backdrop-blur-md border border-cyan-500/20 rounded-lg shadow-2xl z-50"
                      role="menu"
                      aria-orientation="vertical"
                      aria-labelledby={`${item.name}-button`}
                    >
                      <div className="p-4">
                        <div className="mb-3">
                          <h3 className="text-lg font-semibold text-white mb-1">{item.name}</h3>
                          <p className="text-sm text-gray-400">{item.description}</p>
                        </div>
                        
                        {item.children && (
                          <div className="space-y-2">
                            {item.children.map((child) => (
                              <Link
                                key={child.name}
                                href={normalizeHref(child.href)}
                                className="flex items-center space-x-3 p-3 rounded-lg hover:bg-cyan-500/10 transition-colors duration-200 group"
                                onClick={closeAllDropdowns}
                                role="menuitem"
                              >
                                <div className="text-cyan-400 group-hover:text-cyan-300 transition-colors duration-200">
                                  {child.icon}
                                </div>
                                <div>
                                  <div className="text-sm font-medium text-white group-hover:text-cyan-300 transition-colors duration-200">
                                    {child.name}
                                  </div>
                                  <div className="text-xs text-gray-400 group-hover:text-gray-300 transition-colors duration-200">
                                    {child.description}
                                  </div>
                                </div>
                              </Link>
                            ))}
                          </div>
                        )}
                        
                        {item.featured && (
                          <div className="mt-4 pt-4 border-t border-cyan-500/20">
                            <Link
                              href={normalizeHref(item.href)}
                              className="flex items-center justify-center space-x-2 w-full px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-200 transform hover:scale-105"
                              onClick={closeAllDropdowns}
                            >
                              <Star className="w-4 h-4" />
                              <span>Explore {item.name}</span>
                            </Link>
                          </div>
                        )}
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
                      </div>
                    </motion.div>
                  )}
                </AnimatePresence>
              </div>
            ))}
          </div>

<<<<<<< HEAD
          {/* Contact Info */}
          <div className="hidden lg:flex items-center space-x-4">
            <a
              href={`tel:${contactInfo.mobile}`}
              className="flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-200 transform hover:scale-105"
            >
              <Phone className="w-4 h-4" />
              <span className="text-sm font-medium">Call Now</span>
            </a>
          </div>

          {/* Mobile menu button */}
          <div className="lg:hidden">
            <button
              onClick={() => setIsOpen(!isOpen)}
              className="p-2 rounded-lg text-gray-300 hover:text-cyan-400 hover:bg-gray-800 transition-colors duration-200"
            >
              {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
=======
          {/* CTA Buttons */}
          <div className="hidden lg:flex items-center space-x-4">
            <Link
              href="/contact"
              className="px-4 py-2 text-cyan-400 hover:text-white transition-colors duration-200"
            >
              Contact
            </Link>
            <Link
              href="/get-started"
              className="px-6 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-200 transform hover:scale-105"
            >
              Get Started
            </Link>
          </div>

          {/* Mobile Menu Button */}
          <div className="lg:hidden">
            <button
              onClick={toggleMenu}
              className="p-2 text-gray-300 hover:text-white transition-colors duration-200"
              aria-expanded={ariaExpanded}
              aria-label="Toggle navigation menu"
            >
              {isOpen ? (
                <X className="w-6 h-6" />
              ) : (
                <Menu className="w-6 h-6" />
              )}
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
            </button>
          </div>
        </div>
      </div>

      {/* Mobile Navigation */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3 }}
<<<<<<< HEAD
            className="lg:hidden bg-gray-900/95 backdrop-blur-md border-t border-cyan-400/20"
          >
            <div className="px-4 py-6 space-y-4">
              {navigationItems.map((item) => (
                <div key={item.name}>
                  <button
                    onClick={() => toggleDropdown(item.name)}
                    className="flex items-center justify-between w-full px-4 py-3 text-left text-gray-300 hover:text-cyan-400 hover:bg-gray-800 rounded-lg transition-colors duration-200"
                  >
                    <div className="flex items-center space-x-3">
                      {item.icon}
                      <span className="font-medium">{item.name}</span>
                      {item.badge && (
                        <span className="px-2 py-1 text-xs font-bold bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-full">
=======
            className="lg:hidden bg-black/95 backdrop-blur-md border-t border-cyan-500/20"
          >
            <div className="px-4 py-6 space-y-4">
              {navigationItems.map((item) => (
                <div key={item.name} className="space-y-2">
                  <button
                    onClick={() => handleDropdownToggle(item.name)}
                    className="flex items-center justify-between w-full text-left px-4 py-3 text-gray-300 hover:text-white transition-colors duration-200"
                    aria-expanded={activeDropdown === item.name}
                    aria-haspopup="true"
                  >
                    <div className="flex items-center space-x-3">
                      {item.icon}
                      <span>{item.name}</span>
                      {item.badge && (
                        <span className="px-2 py-1 text-xs bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-full">
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
                          {item.badge}
                        </span>
                      )}
                    </div>
                    <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${
                      activeDropdown === item.name ? 'rotate-180' : ''
                    }`} />
                  </button>
<<<<<<< HEAD
                  
                  <AnimatePresence>
                    {activeDropdown === item.name && (
=======

                  {/* Mobile Dropdown */}
                  <AnimatePresence>
                    {activeDropdown === item.name && item.children && (
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
                      <motion.div
                        initial={{ opacity: 0, height: 0 }}
                        animate={{ opacity: 1, height: 'auto' }}
                        exit={{ opacity: 0, height: 0 }}
<<<<<<< HEAD
                        transition={{ duration: 0.3 }}
                        className="ml-8 mt-2 space-y-2"
                      >
                        {item.children?.map((child) => (
                          <Link
                            key={child.name}
                            href={normalizeHref(child.href)}
                            onClick={() => {
                              setIsOpen(false);
                              closeDropdown();
                            }}
                            className="block px-4 py-2 text-gray-400 hover:text-cyan-400 hover:bg-gray-800 rounded-lg transition-colors duration-200"
                          >
                            <div className="flex items-center space-x-3">
                              {child.icon}
                              <span className="text-sm">{child.name}</span>
                              {child.featured && (
                                <span className="text-xs text-cyan-400 font-semibold">FEATURED</span>
                              )}
                            </div>
                            <p className="text-xs text-gray-500 mt-1 ml-7">
                              {child.description}
                            </p>
=======
                        transition={{ duration: 0.2 }}
                        className="ml-8 space-y-2"
                      >
                        {item.children.map((child) => (
                          <Link
                            key={child.name}
                            href={normalizeHref(child.href)}
                            className="flex items-center space-x-3 px-4 py-2 text-gray-400 hover:text-cyan-400 transition-colors duration-200"
                            onClick={closeAllDropdowns}
                          >
                            {child.icon}
                            <span className="text-sm">{child.name}</span>
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
                          </Link>
                        ))}
                      </motion.div>
                    )}
                  </AnimatePresence>
                </div>
              ))}
<<<<<<< HEAD
              
              {/* Mobile Contact */}
              <div className="pt-4 border-t border-gray-700">
                <a
                  href={`tel:${contactInfo.mobile}`}
                  className="flex items-center justify-center space-x-2 w-full px-4 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-200"
                >
                  <Phone className="w-4 h-4" />
                  <span className="font-medium">Call {contactInfo.mobile}</span>
                </a>
=======

              {/* Mobile CTA */}
              <div className="pt-4 border-t border-cyan-500/20 space-y-3">
                <Link
                  href="/contact"
                  className="block w-full px-4 py-3 text-center text-cyan-400 hover:text-white transition-colors duration-200"
                  onClick={closeAllDropdowns}
                >
                  Contact Us
                </Link>
                <Link
                  href="/get-started"
                  className="block w-full px-4 py-3 text-center bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-200"
                  onClick={closeAllDropdowns}
                >
                  Get Started
                </Link>
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
<<<<<<< HEAD
=======

      {/* Backdrop for mobile menu */}
      {isOpen && (
        <div 
          className="fixed inset-0 bg-black/50 z-40 lg:hidden"
          onClick={closeAllDropdowns}
          aria-hidden="true"
        />
      )}
>>>>>>> origin/cursor/enhance-app-with-new-services-and-futuristic-design-dadf
    </nav>
  );
}