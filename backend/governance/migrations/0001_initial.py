# Generated by Django 5.2.1 on 2025-06-01 00:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField()),
                ('proposal_type', models.CharField(choices=[('FEATURE', 'Feature Enhancement'), ('BUDGET', 'Budget Allocation'), ('COMMUNITY_GRANT', 'Community Grant'), ('GENERAL', 'General Proposal')], default='GENERAL', max_length=20)),
                ('status', models.CharField(choices=[('PENDING_REVIEW', 'Pending Review'), ('ACTIVE', 'Active (Voting Open)'), ('CLOSED_SUCCESSFUL', 'Closed (Successful)'), ('CLOSED_FAILED_QUORUM', 'Closed (Failed - Quorum Not Met)'), ('CLOSED_FAILED_REJECTED', 'Closed (Failed - Rejected)'), ('EXECUTED', 'Executed'), ('QUEUED_FOR_EXECUTION', 'Queued for Execution'), ('CANCELED', 'Canceled')], default='PENDING_REVIEW', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('voting_starts_at', models.DateTimeField(blank=True, null=True)),
                ('voting_ends_at', models.DateTimeField(blank=True, null=True)),
                ('quorum_percentage', models.FloatField(blank=True, help_text='Required participation rate (e.g., 0.20 for 20%). Calculation depends on governance rules.', null=True)),
                ('funding_ask_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('funding_ask_token_symbol', models.CharField(blank=True, help_text='e.g., USD, ETH, ZION$', max_length=10, null=True)),
                ('reference_links', models.JSONField(blank=True, default=list, help_text='List of URLs, e.g., ["http://example.com/doc1"]', null=True)),
                ('snapshot_proposal_id', models.CharField(blank=True, help_text='ID of the proposal on Snapshot.org, if applicable', max_length=100, null=True)),
                ('snapshot_space_id', models.CharField(blank=True, help_text='Snapshot space ID (e.g., yourproject.eth)', max_length=100, null=True)),
                ('proposer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='governance_proposals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Proposals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voter_wallet_address', models.CharField(blank=True, help_text="Voter's blockchain wallet address, if vote is cast via wallet signature.", max_length=42, null=True)),
                ('voting_power_at_snapshot', models.DecimalField(decimal_places=18, help_text="Voter's token balance or voting weight at the time of the relevant snapshot.", max_digits=28)),
                ('choice', models.CharField(choices=[('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('ABSTAIN', 'Abstain')], max_length=10)),
                ('voted_at', models.DateTimeField(auto_now_add=True)),
                ('snapshot_vote_id', models.CharField(blank=True, help_text='ID of the vote on Snapshot.org, if applicable', max_length=100, null=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='governance.proposal')),
                ('voter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='governance_votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Votes',
                'ordering': ['-voted_at'],
                'unique_together': {('proposal', 'voter'), ('proposal', 'voter_wallet_address')},
            },
        ),
    ]
