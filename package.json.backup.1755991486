{
  "name": "bolt.new.zion.app",
  "version": "0.1.0",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "bin": {
    "deploy-zion-ipfs": "scripts/deploy-zion-ipfs.js"
  },
  "scripts": {
    "dev": "npm run env:dev && next dev",
    "dev:quiet": "npm run env:dev && NEXT_PRIVATE_SKIP_SIZE_WARN=1 next dev",
    "dev:verbose": "npm run env:dev && DEBUG=* next dev",
    "dev:monitor": "npm run env:dev && node scripts/performance-monitor.cjs && next dev",
    "dev:react19": "npm run env:dev && REACT_19_MODE=true next dev --experimental-app",
    "dev:turbo": "npm run env:dev && next dev --turbo",
    "generate": "prisma generate",
    "build": "NODE_OPTIONS='--no-deprecation --require ./scripts/fix-self-global.js' node scripts/pre-build-check.cjs && NODE_OPTIONS='--no-deprecation --require ./scripts/fix-self-global.js' npx next build --no-lint",
    "build:monitored": "node scripts/comprehensive-build-check.cjs",
    "analyze:performance": "node scripts/analyze-performance.mjs",
    "analyze:full": "npm run build && npm run analyze:performance",
    "health:check": "curl -s http://localhost:3000/api/health | jq",
    "health:monitor": "node -e \"setInterval(() => fetch('http://localhost:3000/api/health').then(r => r.json()).then(console.log).catch(console.error), 10000)\"",
    "build:netlify": "node scripts/optimized-build.cjs",
    "build:netlify:prepare": "prisma generate && node scripts/install-build-deps.cjs && node scripts/optimized-build.cjs",
    "build:fast": "NEXT_DISABLE_CSS_INLINE=true SKIP_TYPE_CHECK=true NODE_OPTIONS='--no-deprecation --max-old-space-size=6144' npx next build --no-lint",
    "build:react19": "REACT_19_MODE=true npm run build",
    "build:production": "NODE_ENV=production npm run typecheck && npm run build",
    "build:analyze": "node scripts/analyze-bundle.js",
    "bundle:analyze": "node scripts/analyze-bundle.js",
    "bundle:optimize": "node scripts/bundle-optimizer.cjs",
    "bundle:report": "node scripts/bundle-analysis.cjs",
    "bundle:chunks": "node scripts/large-chunk-analyzer.cjs",
    "bundle:monitor": "node scripts/bundle-monitor.cjs",
    "perf:audit": "node scripts/performance-audit.cjs",
    "perf:optimize": "node -e \"require('./src/utils/performanceOptimizer.ts').default.applyOptimizations()\"",
    "perf:react19": "echo 'React 19 performance features enabled' && npm run perf:optimize",
    "optimize": "npm run perf:optimize && npm run bundle:analyze && npm run perf:audit",
    "optimize:react19": "npm run perf:react19 && npm run bundle:analyze && npm run perf:audit",
    "optimize:phase2": "npm run build:netlify:prepare && npm run bundle:optimize && npm run bundle:chunks",
    "production:setup": "node scripts/production-readiness-implementation.cjs",
    "validate:env:production": "node scripts/validate-production-env.cjs",
    "validate:build:production": "node scripts/validate-production-build.cjs",
    "monitor:production": "node scripts/production-monitor.cjs",
    "deploy:validate": "npm run validate:env:production && npm run build:production && npm run validate:build:production",
    "deploy:verify": "npm run monitor:production && npm run bundle:optimize",
    "deploy:complete": "node scripts/complete-production-deployment.cjs",
    "setup:quick": "node scripts/quick-supabase-setup.cjs",
    "fix:loading": "node scripts/fix-app-loading.cjs",
    "start": "next start",
    "start:production": "NODE_ENV=production next start",
    "deploy:ipfs": "node scripts/deploy-zion-ipfs.js",
    "lint": "npx eslint .",
    "lint:fix": "npx eslint . --fix",
    "lint:nextjs": "next lint",
    "preview": "NODE_ENV=production vite preview",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:jest": "echo 'Jest deprecated. Use vitest.' && exit 1",
    "test:vitest": "vitest run",
    "test:vitest:watch": "vitest",
    "test:vitest:coverage": "vitest run --coverage",
    "test:e2e": "cypress run",
    "test:e2e:open": "cypress open",
    "test:collect": "node scripts/generate-jest-json.cjs && npm run logs:collect",
    "test:search": "node scripts/test-search-functionality.cjs",
    "perf:check": "node scripts/performance-check.cjs",
    "perf:api": "node scripts/test-api-performance.js",
    "build:monitor": "node scripts/build-monitor.cjs",
    "deps:check": "npm outdated && npm audit",
    "deps:update": "npm update && npm install",
    "deps:clean": "rm -rf node_modules package-lock.json && npm install",
    "deps:health": "node scripts/dependency-health-check.cjs",
    "cypress:open": "cypress open",
    "cypress:run": "cypress run --browser electron",
    "audit": "npm audit --production",
    "clean:cache": "node scripts/clean-cache.js",
    "sitemap": "node scripts/generate-sitemap.mjs",
    "lint:a11y": "vitest run tests/Accessibility.test.tsx",
    "test:axe": "vitest run tests/Accessibility.test.tsx",
    "test:browserstack": "playwright test --config=browserstack.config.ts",
    "seed": "prisma db seed",
    "es:index": "node scripts/index-elasticsearch.js",
    "devnet": "node scripts/start-devnet.js",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "prepare": "command -v husky >/dev/null 2>&1 && husky install || echo 'Husky not available, skipping git hooks setup'",
    "dev:optimize": "node scripts/replace-console-statements.cjs && npm run lint -- --fix",
    "deploy:optimize": "node scripts/replace-console-statements.cjs && npm run lint -- --fix && npm run build",
    "console:replace": "node scripts/replace-console-statements.cjs",
    "health:summary": "node scripts/project-health-summary.cjs",
    "fix:imports": "node scripts/fix-import-placement.cjs",
    "fix:logger-types": "node scripts/fix-logger-types.cjs",
    "fix:all": "npm run fix:imports && npm run fix:logger-types && npm run lint -- --fix",
    "clean:all": "rm -rf node_modules package-lock.json .next dist coverage && npm install",
    "env:check": "node scripts/validate-environment.cjs",
    "env:validate": "npx tsx scripts/validate-environment.ts",
    "env:validate-build": "node scripts/validate-environment.cjs",
    "env:prebuild-check": "node scripts/pre-build-check.cjs",
    "env:dev": "node scripts/check-dev-environment.cjs",
    "build:report": "npm run build && node scripts/build-performance-report.cjs",
    "build:media-kit": "node scripts/build-media-kit.cjs",
    "typecheck": "tsc --noEmit -p tsconfig.json",
    "test:node": "node -v",
    "check-updates": "ncu",
    "audit-vulnerabilities": "npm audit",
    "monitor:perf": "node scripts/perf/monitor.js",
    "migrate:check": "npx prisma migrate diff --from-schema-datamodel prisma/schema.prisma --to-schema-datamodel prisma/schema.prisma --script",
    "setup:auth0": "node scripts/setup-auth0.js",
    "migrate:auth0": "npm run setup:auth0 && npm run env:validate",
    "watchdog:start": "node scripts/watchdog.js",
    "watchdog:clear": "node scripts/clear-logs.js",
    "watchdog:status": "ps aux | grep watchdog || echo 'No watchdog process found'",
    "logs:clear": "npm run watchdog:clear",
    "logs:view": "tail -f logs/self-heal.log",
    "logs:scan": "node scripts/analyze-error-logs.cjs",
    "logs:summary": "node scripts/analyze-error-logs.cjs logs --dedupe --summary",
    "logs:levels": "node scripts/analyze-error-logs.cjs logs --summary",
    "logs:collect": "bash scripts/collect-logs.sh",
    "logs:monitor": "node scripts/error-monitor.cjs",
    "logs:monitor:export": "node scripts/error-monitor.cjs --export",
    "logs:health": "node scripts/error-monitor.cjs",
    "logs:collect:enhanced": "node scripts/enhanced-log-collector.cjs --analyze --export",
    "logs:auto": "npm run logs:collect:enhanced && npm run logs:summary",
    "logs:rotate": "node scripts/rotate-logs.cjs",
    "logs:purge": "node scripts/purge-old-logs.cjs",
    "logs:collect:clean": "node scripts/enhanced-log-collector.cjs --clean",
    "logs:health:summary": "node scripts/log-health-summary.cjs",
    "logs:monitor:realtime": "node scripts/realtime-log-monitor.cjs",
    "logs:monitor:dashboard": "node scripts/realtime-log-monitor.cjs",
    "env:check-placeholders": "node scripts/check-env-placeholders.cjs",
    "logs:enhanced": "node -e \"require('./src/utils/enhanced-logger.ts').logger.info('Enhanced logging test', 'system')\"",
    "monitor:resources": "echo 'CPU:' && ps -A -o %cpu | awk '{sum+=$1} END {print sum\"%\"}' && echo 'Memory:' && free -h || vm_stat",
    "logs:realtime": "node scripts/enhanced-log-monitoring.cjs",
    "logs:dashboard": "node scripts/log-dashboard-server.cjs",
    "logs:alerts": "node scripts/setup-log-alerts.cjs",
    "logs:performance": "node scripts/performance-log-analyzer.cjs",
    "logs:security": "node scripts/security-log-monitor.cjs",
    "monitor:enhanced": "npm run logs:realtime",
    "monitor:all": "concurrently \"npm run logs:realtime\" \"npm run logs:performance\" \"npm run logs:security\"",
    "analyze:react19": "node scripts/react19-bundle-analysis.cjs",
    "monitor:health": "curl -s https://ziontechgroup.netlify.app/api/health && echo ' - API Health: OK'",
    "monitor:build": "npm run bundle:analyze && npm run monitor:health",
    "perf:monitor": "node -e \"console.log('Enable with: localStorage.setItem(\\\"performance-monitoring\\\", \\\"true\\\"); window.location.reload();')\"",
    "performance:check": "node scripts/performance-monitor.cjs",
    "optimize:images": "find public -name '*.jpg' -o -name '*.png' | head -5",
    "optimize:minify": "node scripts/minify-public-assets.cjs",
    "quality:check": "npm run typecheck && npm run lint && npm run test",
    "pwa:validate": "node -e \"console.log('üîç Validating PWA configuration...'); const fs = require('fs'); const manifest = JSON.parse(fs.readFileSync('public/manifest.json', 'utf8')); console.log('‚úÖ Manifest valid:', manifest.name);\"",
    "seo:validate": "node -e \"console.log('üîç Validating SEO setup...'); console.log('‚úÖ SEO components ready');\"",
    "build:enhanced": "npm run quality:check && npm run pwa:validate && npm run build",
    "deploy:check": "npm run build:enhanced && npm run performance:check",
    "deploy:ready": "node scripts/deployment-ready-check.cjs",
    "deploy:checklist": "npm run deploy:ready && npm run perf:monitor",
    "analyze": "node scripts/analyze-build.cjs",
    "monitor": "node scripts/performance-monitor.cjs",
    "health": "node scripts/health-check.cjs",
    "clean": "rm -rf .next out node_modules/.cache",
    "reset": "npm run clean && npm install",
    "fresh": "npm run clean && npm install && npm run build",
    "i18n:audit": "node scripts/i18n-audit.cjs",
    "i18n:hardcoded": "node scripts/find-hardcoded-strings.cjs",
    "i18n:missing": "node scripts/check-missing-i18n-keys.cjs",
    "i18n:check": "npm run i18n:audit && npm run i18n:hardcoded",
    "i18n:report": "npm run i18n:check && echo 'i18n reports generated: i18n-audit-report.md and hardcoded-strings-report.md",
    "build:cache": "node scripts/cached-build.cjs",
    "errors:report": "node scripts/report-errors-to-cursor.cjs",
    "errors:autofix": "node scripts/cursor-autofix.cjs",
    "errors:report-codex": "node scripts/report-errors-to-codex.cjs",
    "growth:ideas": "node scripts/self-grow.js",
    "automation:start": "node automation/index.js",
    "automation:dev": "nodemon automation/index.js",
    "automation:stop": "pkill -f \"node automation/index.js\"",
    "automation:logs": "tail -f logs/automation.log",
    "automation:health": "curl http://localhost:3001/health",
    "automation:test": "cd automation && npm test",
    "automation:check": "node automation/performance/monitor.js",
    "automation:report": "node automation/scripts/generate-report.js",
    "automation:diagnose": "node automation/tests/system-diagnostic.js",
    "automation:test-slack": "node automation/tests/test-slack-connection.js",
    "automation:test-cursor": "node automation/tests/test-cursor-connection.js",
    "automation:test-monitoring": "node automation/tests/test-performance-monitoring.js",
    "optimize:bundle": "node scripts/optimize-bundle.cjs"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "dependencies": {
    "@chainsafe/libp2p-gossipsub": "^14.1.1",
    "@chainsafe/libp2p-noise": "^16.1.3",
    "@chakra-ui/react": "3.21.1",
    "@datadog/browser-logs": "^6.12.3",
    "@emotion/react": "11.14.0",
    "@emotion/styled": "11.14.0",
    "@google/model-viewer": "^4.1.0",
    "@helia/json": "^4.0.6",
    "@hookform/resolvers": "3.10.0",
    "@libp2p/identify": "^3.0.37",
    "@libp2p/tcp": "^10.1.17",
    "@opentelemetry/api": "^1.8.0",
    "@opentelemetry/core": "^1.8.0",
    "@orbitdb/core": "^3.0.2",
    "@prisma/client": "^6.10.1",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-context-menu": "^2.2.15",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-hover-card": "^1.1.14",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-menubar": "^1.1.15",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-toggle": "^1.1.9",
    "@radix-ui/react-toggle-group": "^1.1.10",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@reduxjs/toolkit": "^2.8.2",
    "@reown/appkit": "1.7.11",
    "@reown/appkit-adapter-ethers": "1.7.11",
    "@sendgrid/mail": "^8.1.5",
    "@sentry/nextjs": "^9.33.0",
    "@sentry/tracing": "^7.120.3",
    "@stripe/react-stripe-js": "^3.7.0",
    "@stripe/stripe-js": "^7.4.0",
    "@supabase/ssr": "0.7.0-rc.2",
    "@supabase/supabase-js": "^2.50.2",
    "@tanstack/react-query": "^5.81.5",
    "@types/lodash.debounce": "^4.0.9",
    "@types/react-redux": "^7.1.34",
    "autoprefixer": "^10.4.21",
    "axios": "^1.10.0",
    "axios-retry": "^4.5.0",
    "blockstore-core": "^5.0.4",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "cors": "^2.8.5",
    "critters": "^0.0.23",
    "datastore-core": "^10.0.4",
    "date-fns": "2.30.0",
    "dd-trace": "^3.58.0",
    "dotenv": "^16.6.1",
    "embla-carousel-react": "^8.6.0",
    "ethers": "^6.14.4",
    "file-saver": "^2.0.5",
    "firebase": "^11.9.1",
    "formik": "^2.4.6",
    "framer-motion": "^12.19.1",
    "fuse.js": "^7.1.0",
    "helia": "^5.4.2",
    "helmet": "^8.1.0",
    "i18next": "^25.2.1",
    "i18next-browser-languagedetector": "^8.2.0",
    "input-otp": "^1.4.2",
    "jspdf": "^3.0.1",
    "jspdf-autotable": "^5.0.2",
    "jszip": "^3.10.1",
    "libp2p": "^2.8.12",
    "lodash": "^4.17.21",
    "lodash-es": "^4.17.21",
    "lodash.debounce": "^4.0.8",
    "logrocket": "^4.0.0",
    "lucide-react": "^0.525.0",
    "micro": "^10.0.1",
    "mongoose": "^8.16.0",
    "morgan": "^1.10.0",
    "next": "^15.3.4",
    "next-auth": "^4.24.11",
    "next-cloudinary": "^6.16.0",
    "node-cache": "^5.1.2",
    "node-fetch": "^2.7.0",
    "notistack": "^3.0.2",
    "postcss": "^8.5.6",
    "react": "^19.1.0",
    "react-day-picker": "^9.7.0",
    "react-dom": "^19.1.0",
    "react-error-boundary": "^3.1.4",
    "react-focus-lock": "^2.13.6",
    "react-hook-form": "7.59.0",
    "react-hot-toast": "^2.5.2",
    "react-i18next": "^15.5.3",
    "react-loading-skeleton": "^3.5.0",
    "react-markdown": "^10.1.0",
    "react-player": "^2.16.0",
    "react-redux": "^9.2.0",
    "react-resizable-panels": "^3.0.3",
    "react-router-dom": "^7.6.3",
    "react-window": "^1.8.11",
    "recharts": "^2.15.4",
    "socket.io-client": "^4.8.1",
    "sonner": "^2.0.5",
    "stripe": "^18.2.1",
    "swr": "^2.3.3",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^4.1.11",
    "tailwindcss-animate": "^1.0.7",
    "three": "^0.172.0",
    "tslib": "^2.8.1",
    "undici": "^7.10.0",
    "usehooks-ts": "^3.1.1",
    "validator": "^13.15.15",
    "vaul": "^1.1.2",
    "web-push": "^3.6.7",
    "web-vitals": "^5.0.3",
    "yup": "^1.6.1",
    "zod": "^3.25.67",
    "prisma": "^6.10.1"
  },
  "devDependencies": {
    "@babel/plugin-transform-runtime": "^7.27.4",
    "@babel/preset-env": "^7.27.2",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@eslint/js": "^8.57.1",
    "@modelcontextprotocol/sdk": "^1.13.2",
    "@next/bundle-analyzer": "^15.3.4",
    "@pact-foundation/pact": "^15.0.1",
    "@playwright/test": "^1.53.1",
    "@stackbit/types": "^2.1.14",
    "@storybook/react": "^9.0.13",
    "@storybook/test-runner": "^0.23.0",
    "@swc/core": "^1.12.9",
    "@swc/helpers": "^0.5.17",
    "@testing-library/cypress": "^10.0.3",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/fetch-mock": "^7.3.8",
    "@types/file-saver": "^2.0.7",
    "@types/jest": "^29.5.14",
    "@types/jest-axe": "^3.5.9",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/lodash": "^4.17.18",
    "@types/node": "^24.0.10",
    "@types/node-fetch": "^2.6.12",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@types/react-window": "^1.8.8",
    "@types/redux-mock-store": "^1.5.0",
    "@types/validator": "^13.15.2",
    "@types/web-push": "^3.6.4",
    "@vitejs/plugin-react": "^4.6.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "ajv": "^8.12.0",
    "babel-jest": "^29.7.0",
    "bcryptjs": "^3.0.2",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "cypress": "^14.5.0",
    "electron": "^36.5.0",
    "eslint": "^8.57.0",
    "eslint-config-next": "^15.3.4",
    "eslint-config-prettier": "^9.1.0",
    "eslint-formatter-compact": "^8.40.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.5.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-react-refresh": "^0.4.20",
    "express": "^5.1.0",
    "express-rate-limit": "^6.11.2",
    "fetch-mock": "^12.5.3",
    "globals": "^16.2.0",
    "helmet": "^7.2.0",
    "html2canvas": "^1.4.1",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-axe": "^10.0.0",
    "jest-environment-jsdom": "^30.0.2",
    "jest-fetch-mock": "^3.0.3",
    "jsdom": "^26.1.0",
    "jsonwebtoken": "^9.0.2",
    "mongodb-memory-server": "^10.1.4",
    "msw": "^2.10.2",
    "next-router-mock": "^1.0.2",
    "node-mocks-http": "^1.17.2",
    "npm-check-updates": "^18.0.1",
    "prettier": "^3.6.1",
    "puppeteer": "^24.10.2",
    "redux-mock-store": "^1.5.5",
    "rollup-plugin-visualizer": "^5.14.0",
    "sass": "^1.89.2",
    "source-map-explorer": "^2.5.3",
    "string-replace-loader": "^3.2.0",
    "supertest": "^6.3.4",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.35.0",
    "vite": "^6.3.5",
    "vitest": "^3.2.4",
    "whatwg-fetch": "^3.6.20",
    "babel-plugin-react-compiler": "19.1.0-rc.2"
  },
  "overrides": {
    "typescript-eslint": "^8.35.0",
    "@typescript-eslint/eslint-plugin": "^8.18.2",
    "@typescript-eslint/parser": "^8.18.2",
    "puppeteer": "^24.10.2",
    "jsdom": "^26.1.0",
    "eslint": "^8.57.0",
    "glob": "^11.0.2",
    "rimraf": "^6.0.1",
    "date-fns": "2.30.0"
  },
  "engines": {
    "node": ">=18.17.0"
  },
  "description": "[![Netlify Status](https://api.netlify.com/api/v1/badges/ziontechgroup.com/deploy-status)](https://app.netlify.com/sites/ziontechgroup.com/deploys)",
  "main": "babel.config.js",
  "directories": {
    "doc": "docs",
    "test": "tests"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Zion-Holdings/zion.app.git"
  },
  "bugs": {
    "url": "https://github.com/Zion-Holdings/zion.app/issues"
  },
  "homepage": "https://github.com/Zion-Holdings/zion.app#readme",
  "engines": {
    "node": ">=20.18.1",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "deps:maintain": "node automation/dependency-update-orchestrator.cjs",
    "deps:cron:start": "bash automation/dependency-maintenance-cron.sh",
    "sitemap": "node scripts/generate-sitemap.mjs",
    "dev": "NODE_OPTIONS=--openssl-legacy-provider next dev",
    "build": "NODE_OPTIONS=--openssl-legacy-provider next build",
    "export": "node fix_empty_pages.js && NODE_OPTIONS=--openssl-legacy-provider next build && next export",
    "start": "next start",
    "whitepaper:pdf:install": "npm i pdfkit@0.13.0 --save",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "type-check": "tsc --noEmit",
    "prepare": "husky install",
    "autonomous": "node automation/launch-enhanced-autonomous-system.js",
    "autonomous:dev": "nodemon automation/launch-enhanced-autonomous-system.js",
    "autonomous:status": "node automation/launch-autonomous-systems-clean.js status",
    "linkedin:run": "ts-node scripts/linkedin-automation.ts run",
    "linkedin:cron": "ts-node scripts/linkedin-automation.ts cron",
    "linkedin:generate": "ts-node scripts/linkedin-automation.ts generate",
    "linkedin:start": "npm run linkedin:cron",
    "linkedin:test": "ts-node scripts/test-linkedin-automation.ts",
    "mcp:start": "node mcp-automation-system.js",
    "mcp:client": "node mcp-client-integration.js",
    "mcp:orchestrator": "node automation/mcp-integration-orchestrator.js",
    "mcp:enhance": "node automation/mcp-integration-orchestrator.js enhance",
    "mcp:workflow": "node automation/mcp-integration-orchestrator.js workflow",
    "mcp:report": "node automation/mcp-integration-orchestrator.js report",
    "mcp:setup-cron": "node automation/mcp-integration-orchestrator.js setup-cron",
    "mcp:daily": "node automation/mcp-integration-orchestrator.js daily-workflow",
    "mcp:weekly": "node automation/mcp-integration-orchestrator.js weekly-audit",
    "mcp:monitor": "node automation/mcp-integration-orchestrator.js performance-monitor",
    "mcp:status": "node automation/mcp-integration-orchestrator.js status",
    "mcp:test": "node simple-mcp-test.js",
    "google-docs:start": "node automation/launch-google-docs-automation.js",
    "google-docs:dev": "nodemon automation/launch-google-docs-automation.js",
    "google-docs:status": "node automation/check-google-docs-status.js",
    "google-docs:report": "node automation/generate-google-docs-report.js",
    "google-docs:test": "node automation/test-google-docs-automation.js",
    "cursor:memory": "node run-cursor-memory-automation.js",
    "cursor:memory:dev": "nodemon run-cursor-memory-automation.js",
    "cursor:memory:config": "node -e \"console.log(JSON.stringify(require('./cursor-memory-config.json'), null, 2))\"",
    "cursor:memory:status": "node -e \"const fs = require('fs'); const path = './cursor-memory/memory-summary.json'; try { const data = JSON.parse(fs.readFileSync(path, 'utf8')); console.log('Memory Status:'); console.log('- Total entries:', data.totalEntries); console.log('- Categories:', Object.keys(data.categories).length); console.log('- High confidence:', data.confidenceDistribution.high); } catch(e) { console.log('No memory data found'); }\"",
    "automation:factory": "node automation/automation-factory.cjs generate",
    "automation:factory:dev": "nodemon automation/ultimate-automation-factory-system.js",
    "automation:orchestrator": "node automation/intelligent-orchestrator.cjs continuous",
    "automation:dashboard": "node automation/automation-dashboard.cjs start",
    "automation:all": "node automation/launch-all-automation.cjs start",
    "automation:status": "node automation/launch-all-automation.cjs status",
    "automation:report": "node automation/launch-all-automation.cjs report",
    "automation:git-sync": "node automation/git-sync.cjs",
    "automation:improvement": "node automation/continuous-automation-improvement-system.js",
    "automation:improvement:dev": "nodemon automation/continuous-automation-improvement-system.js",
    "automation:coordinator": "node automation/master-automation-coordinator.js",
    "automation:coordinator:dev": "nodemon automation/master-automation-coordinator.js",
    "automation:restart": "node automation/restart-all-automation.js",
    "automation:enhance": "node automation/enhance-all-automation.js",
    "automation:beautify": "node automation/beautify-ui.cjs",
    "autonomous:start": "node automation/launch-autonomous-systems-clean.js start",
    "autonomous:stop": "node automation/launch-autonomous-systems-clean.js stop",
    "autonomous:restart": "node automation/launch-autonomous-systems-clean.js restart",
    "autonomous:factory": "node automation/autonomous-error-monitoring-factory.js",
    "autonomous:orchestrator": "node automation/autonomous-automation-orchestrator.js",
    "autonomous:cron": "bash automation/autonomous-error-cron-system.sh run",
    "autonomous:cron:start": "bash automation/autonomous-error-cron-system.sh start",
    "autonomous:cron:stop": "bash automation/autonomous-error-cron-system.sh stop",
    "autonomous:cron:status": "bash automation/autonomous-error-cron-system.sh status",
    "autonomous:cron:fix": "bash automation/autonomous-error-cron-system.sh fix",
    "autonomous:all": "npm run autonomous:start & npm run autonomous:cron:start",
    "design:start": "node automation/launch-design-improvement-automation.js start",
    "design:layout": "node automation/launch-design-improvement-automation.js layout",
    "design:navigation": "node automation/launch-design-improvement-automation.js navigation",
    "design:visual": "node automation/launch-design-improvement-automation.js visual-design",
    "design:cycle": "node automation/launch-design-improvement-automation.js cycle",
    "design:status": "node automation/launch-design-improvement-automation.js status",
    "design:stop": "node automation/launch-design-improvement-automation.js stop",
    "design:all": "npm run design:layout && npm run design:navigation && npm run design:visual",
    "syntax:start": "node automation/syntax-fix-launcher.js start",
    "syntax:start:monitor": "node automation/syntax-fix-launcher.js start monitor",
    "syntax:start:orchestrator": "node automation/syntax-fix-launcher.js start orchestrator",
    "syntax:start:continuous": "node automation/syntax-fix-launcher.js start continuous",
    "syntax:stop": "node automation/syntax-fix-launcher.js stop",
    "syntax:status": "node automation/syntax-fix-launcher.js status",
    "syntax:quick-fix": "node automation/syntax-fix-launcher.js quick-fix",
    "syntax:build-check": "node automation/syntax-fix-launcher.js build-check",
    "syntax:monitor": "node automation/syntax-error-monitor.js",
    "syntax:monitor:watch": "node automation/syntax-error-monitor.js --watch",
    "syntax:orchestrator": "node automation/syntax-fix-orchestrator.js",
    "syntax:orchestrator:watch": "node automation/syntax-fix-orchestrator.js --watch",
    "syntax:continuous": "node automation/continuous-syntax-fix.js",
    "syntax:continuous:watch": "node automation/continuous-syntax-fix.js --watch",
    "syntax:all": "npm run syntax:start & npm run syntax:monitor & npm run syntax:orchestrator & npm run syntax:continuous",
    "linting:factory": "node automation/linting-autonomous-agents-factory.js",
    "linting:factory:dev": "nodemon automation/linting-autonomous-agents-factory.js",
    "linting:cron": "node automation/linting-cron-automation.js",
    "linting:cron:dev": "nodemon automation/linting-cron-automation.js",
    "linting:watcher": "node automation/linting-file-watcher.js",
    "linting:watcher:dev": "nodemon automation/linting-file-watcher.js",
    "linting:orchestrator": "node automation/lint-automation-manager.cjs start",
    "linting:orchestrator:dev": "nodemon automation/lint-automation-manager.cjs",
    "linting:all": "npm run linting:factory & npm run linting:cron & npm run linting:watcher & npm run linting:orchestrator",
    "linting:start": "npm run linting:orchestrator continuous",
    "linting:status": "npm run linting:orchestrator status",
    "linting:check": "npm run linting:orchestrator check",
    "linting:fix": "node automation/lint-error-fixer.cjs all",
    "healing:scan": "node automation/automation-error-scanner.cjs",
    "healing:fix": "node automation/automation-error-fixer.cjs",
    "healing:start": "node automation/self-healing-orchestrator.cjs",
    "healing:cron:start": "bash automation/self-healing-cron.sh start",
    "healing:cron:stop": "bash automation/self-healing-cron.sh stop",
    "healing:cron:status": "bash automation/self-healing-cron.sh status",
    "design:orchestrator": "node automation/design-orchestrator.cjs",
    "design:cron:start": "bash automation/design-cron.sh",
    "design:analyze": "node automation/design-analyzer.cjs && node automation/design-factory.cjs",
    "diversify": "node automation/diversification-orchestrator.cjs",
    "responsive:start": "node automation/responsive-content-orchestrator.cjs",
    "responsive:cron:start": "bash automation/responsive-content-cron.sh",
    "responsive:analyze": "node automation/responsive-content-analyzer.cjs && node automation/responsive-content-factory.cjs",
    "variation:start": "node automation/variation-orchestrator.cjs",
    "variation:analyze": "node automation/variation-analyzer.cjs && node automation/variation-factory.cjs",
    "frontend-sync:start": "node automation/frontend-sync-orchestrator.cjs",
    "frontend-sync:cron:start": "bash automation/frontend-sync-cron.sh",
    "frontend-sync:analyze": "node automation/frontend-sync-analyzer.cjs && node automation/frontend-sync-factory.cjs",
    "saas:start": "node automation/saas-services-orchestrator.cjs",
    "saas:cron:start": "bash automation/saas-services-cron.sh",
    "saas:analyze": "node automation/saas-services-analyzer.cjs && node automation/saas-services-factory.cjs",
    "homepage-promo:start": "node automation/homepage-promo-orchestrator.cjs",
    "homepage-promo:cron:start": "bash automation/homepage-promo-cron.sh",
    "homepage-promo:analyze": "node automation/homepage-promo-analyzer.cjs && node automation/homepage-promo-factory.cjs",
    "feature-marketing:start": "node automation/feature-marketing-orchestrator.cjs",
    "feature-marketing:cron:start": "bash automation/feature-marketing-cron.sh",
    "feature-marketing:analyze": "node automation/feature-marketing-analyzer.cjs && node automation/feature-marketing-factory.cjs",
    "linkedin:marketing:start": "node automation/linkedin-marketing-orchestrator.cjs",
    "linkedin:marketing:cron:start": "bash automation/linkedin-marketing-cron.sh",
    "linkedin:marketing:analyze": "node automation/linkedin-marketing-analyzer.cjs && node automation/linkedin-marketing-factory.cjs",
    "cursor:chat:start": "node automation/cursor-chat-orchestrator.cjs",
    "cursor:chat:cron:start": "bash automation/cursor-chat-cron.sh",
    "cursor:chat:analyze": "node automation/cursor-chat-analyzer.cjs && node automation/cursor-chat-factory.cjs",
    "links:start": "node automation/site-link-orchestrator.cjs",
    "links:cron:start": "bash automation/site-link-cron.sh",
    "links:scan": "node automation/site-link-crawler.cjs && node automation/site-link-fixer.cjs && node automation/external-link-check.cjs",
    "promo:start": "node automation/site-promo-orchestrator.cjs",
    "promo:cron:start": "bash automation/site-promo-cron.sh",
    "promo:scan": "node automation/site-promo-analyzer.cjs && node automation/homepage-promo-applier.cjs",
    "spec-dev:start": "node automation/spec-dev-orchestrator.cjs",
    "spec-dev:cron:start": "bash automation/spec-dev-cron.sh",
    "spec-dev:scan": "node automation/spec-dev-chat-fetcher.cjs && node automation/spec-dev-site-crawler.cjs && node automation/spec-dev-analyzer.cjs && node automation/spec-dev-factory.cjs",
    "linkedin:pro:start": "node automation/linkedin-pro-orchestrator.cjs",
    "linkedin:pro:cron:start": "bash automation/linkedin-pro-cron.sh",
    "linkedin:pro:analyze": "node automation/linkedin-pro-analyzer.cjs && node automation/linkedin-pro-factory.cjs",
    "instagram:marketing:start": "node automation/instagram-marketing-orchestrator.cjs",
    "instagram:marketing:cron:start": "bash automation/instagram-marketing-cron.sh",
    "instagram:marketing:analyze": "node automation/instagram-marketing-analyzer.cjs && node automation/instagram-marketing-factory.cjs",
    "alignment:start": "node automation/alignment-orchestrator.cjs",
    "alignment:cron:start": "bash automation/alignment-cron.sh",
    "alignment:scan": "node automation/chat-fetcher.cjs && (node automation/google-doc-fetcher.cjs || true) && node automation/alignment-crawler.cjs && node automation/alignment-analyzer.cjs && node automation/alignment-factory.cjs && node automation/alignment-dev-factory.cjs",
    "maintenance:run": "node automation/site-maintenance-orchestrator.cjs",
    "maintenance:cron:start": "bash automation/site-maintenance-cron.sh start",
    "maintenance:cron:stop": "bash automation/site-maintenance-cron.sh stop",
    "maintenance:cron:status": "bash automation/site-maintenance-cron.sh status",
    "maintenance:cron:run": "bash automation/site-maintenance-cron.sh run",
    "health:start": "node automation/auto-health-monitor/index.mjs",
    "health:dev": "nodemon automation/auto-health-monitor/index.mjs",
    "automation:all:plus": "npm run automation:all & npm run health:start",
    "postautomation": "npm run automation:git-sync",
    "lint:staged": "lint-staged",
    "ui-evolution:start": "node automation/ui-evolution-launcher.js start",
    "ui-evolution:once": "node automation/ui-evolution-launcher.js once",
    "ui-evolution:analyze": "node automation/ui-evolution-launcher.js analyze",
    "ui-evolution:factory": "node automation/ui-evolution-launcher.js factory",
    "ui-evolution:beautify": "node automation/ui-evolution-launcher.js beautify",
    "ui-evolution:dashboard": "node automation/ui-evolution-launcher.js dashboard",
    "meta:factory": "node automation/autonomous-meta-factory.cjs",
    "meta:orchestrator": "node automation/autonomous-meta-orchestrator.cjs",
    "meta:cron:start": "bash automation/autonomous-meta-cron.sh",
    "venture:start": "node automation/venture-orchestrator.cjs continuous",
    "venture:once": "node automation/venture-orchestrator.cjs once",
    "venture:analyze": "node automation/venture-services-analyzer.cjs && node automation/venture-services-factory.cjs && node automation/ads-generator.cjs && node automation/service-sales-agents-factory.cjs",
    "venture:cron:start": "bash automation/venture-cron.sh start",
    "venture:cron:stop": "bash automation/venture-cron.sh stop",
    "venture:cron:status": "bash automation/venture-cron.sh status",
    "venture:report": "node automation/venture-orchestrator.cjs report",
    "frontend-sync:autonomous:start": "node automation/launch-frontend-sync-autonomous.js",
    "frontend-sync:autonomous:once": "node automation/frontend-sync-autonomous-orchestrator.cjs once 0",
    "frontend-sync:autonomous:cron": "bash automation/frontend-sync-autonomous-cron.sh",
    "git:sync": "node automation/advanced-git-sync.cjs",
    "git:pull": "node automation/git-pull-rebase.cjs",
    "git:cron:start": "bash automation/git-sync-cron.sh start",
    "git:cron:stop": "bash automation/git-sync-cron.sh stop",
    "git:cron:status": "bash automation/git-sync-cron.sh status",
    "sync-health:run": "node automation/sync-health-check.cjs --fix",
    "sync-health:cron:start": "bash automation/sync-health-cron.sh start",
    "sync-health:cron:stop": "bash automation/sync-health-cron.sh stop",
    "sync-health:cron:status": "bash automation/sync-health-cron.sh status",
    "sync:all:start": "npm run git:cron:start && npm run sync-health:cron:start",
    "git:health": "node automation/git-health.cjs --fast",
    "git:health:fix": "node automation/git-health.cjs --fast --fix",
    "git:health:deep": "node automation/git-health.cjs --deep",
    "git:health:cron": "bash automation/git-health-cron.sh",
    "conflicts:check": "bash scripts/check-merge-conflicts.sh",
    "conflicts:watch": "watch -n 30 bash scripts/check-merge-conflicts.sh || true",
    "conflicts:cron:start": "bash automation/merge-conflict-cron.sh start",
    "conflicts:cron:stop": "bash automation/merge-conflict-cron.sh stop",
    "conflicts:cron:status": "bash automation/merge-conflict-cron.sh status",
    "cloud:autonomy": "node scripts/zion-cloud-autonomy.cjs",
    "cloud:chains": "node scripts/zion-chain-tuner.cjs",
    "cloud:stuck": "node scripts/zion-stuck-users-scan.cjs",
    "cloud:daily": "node scripts/zion-daily-report.cjs",
    "cloud:benchmark": "node scripts/zion-prompt-benchmark.cjs",
    "cloud:governance": "node scripts/zion-governance-digest.cjs"
  },
  "dependencies": {
    "@google-analytics/data": "^5.2.0",
    "@google/generative-ai": "^0.24.1",
    "@magneticwatermelon/mcp-toolkit": "^1.1.4",
    "@modelcontextprotocol/sdk": "^1.17.1",
    "@modelcontextprotocol/server-filesystem": "^2025.7.29",
    "@modelcontextprotocol/server-memory": "^2025.8.4",
    "@modelcontextprotocol/server-sequential-thinking": "^2025.7.1",
    "@pinata/sdk": "^2.1.0",
    "@spruceid/didkit-wasm-node": "^0.2.1",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.39.0",
    "@types/react-datepicker": "^6.2.0",
    "autoprefixer": "^10.4.21",
    "axios": "^1.11.0",
    "chalk": "^5.5.0",
    "cheerio": "^1.1.2",
    "child_process": "^1.0.2",
    "chokidar": "^4.0.3",
    "cron-parser": "^5.3.0",
    "ethers": "^6.13.4",
    "events": "^3.3.0",
    "formidable": "^3.5.4",
    "framer-motion": "^6.5.1",
    "fs": "^0.0.1-security",
    "fs-extra": "^11.3.1",
    "glob": "^11.0.3",
    "https": "^1.0.0",
    "import-fresh": "^3.3.1",
    "ipfs-http-client": "^60.0.0",
    "lucide-react": "^0.536.0",
    "mime-types": "^3.0.1",
    "next": "^11.1.4",
    "node-cron": "^4.2.1",
    "openai": "^5.11.0",
    "orbit-db": "^0.28.0",
    "path": "^0.12.7",
    "pdfkit": "^0.13.0",
    "postcss": "^8.4.32",
    "react": "^17.0.2",
    "react-datepicker": "^8.4.0",
    "react-dom": "^17.0.2",
    "uuid": "^11.1.0",
<<<<<<< HEAD
    "web3.storage": "^4.6.0"
=======
    "ethers": "^5.7.2"
>>>>>>> origin/cursor/deploy-zion-omnichain-bridge-and-depin-integration-3253
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/js": "^9.32.0",
    "@netlify/plugin-nextjs": "4.41.3",
    "@nomicfoundation/hardhat-chai-matchers": "^2.1.0",
    "@nomicfoundation/hardhat-ethers": "^3.1.0",
    "@nomicfoundation/hardhat-ignition-ethers": "^0.15.14",
    "@nomicfoundation/hardhat-network-helpers": "^1.1.0",
    "@nomicfoundation/hardhat-toolbox": "^6.1.0",
    "@nomicfoundation/hardhat-verify": "^2.1.1",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "12.1.5",
    "@typechain/ethers-v6": "^0.5.1",
    "@typechain/hardhat": "^9.1.0",
    "@types/chai": "^4.3.20",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.2.0",
    "@types/node-cron": "^3.0.11",
    "@types/react": "^17.0.34",
    "@types/react-dom": "^17.0.11",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "autoprefixer": "^10.4.16",
    "dotenv": "^17.2.1",
    "eslint": "^8.57.0",
    "eslint-config-next": "^14.0.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "hardhat": "^2.26.2",
    "hardhat-gas-reporter": "^2.3.0",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.4",
    "postcss": "^8.4.32",
    "solidity-coverage": "^0.8.16",
    "tailwindcss": "^3.4.0",
    "ts-node": "^10.9.2",
    "typechain": "^8.3.2",
    "typescript": "^5.6.3"
  },
  "lint-staged": {
    "**/*.{js,jsx,ts,tsx}": [
      "eslint --fix"
    ]
  "name": "zion-sdk-monorepo",
  "private": true,
  "version": "0.1.0",
  "description": "Monorepo for Zion OS SDKs and CLI scaffolder",
  "workspaces": [
    "packages/*"
  ],
  "engines": {
    "node": ">=18.18.0"
  },
  "scripts": {
    "build": "npm -w @zion/sdk run build && npm -w create-zion-instance run build",
    "lint": "npm -w @zion/sdk run lint || true",
    "test": "npm -w @zion/sdk run test || true",
    "clean": "rimraf node_modules packages/*/node_modules packages/*/dist"
  },
  "devDependencies": {
    "rimraf": "^6.0.1"
  }
=======
  },
  "type": "module"
}
