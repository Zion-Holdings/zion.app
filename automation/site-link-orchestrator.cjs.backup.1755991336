#!/usr/bin/env node

<<<<<<< HEAD
const { execSync } = require('child_process');

function run(cmd) {
  execSync(cmd, { stdio: 'inherit', shell: true });
}

function main() {
  const mode = process.argv[2] || 'once';
  const commit = process.env.LINKS_COMMIT !== 'false';

  run('node automation/site-link-crawler.cjs');
  run('node automation/site-link-fixer.cjs');

  if (commit) {
    try {
      run('git config user.name "zion-bot" && git config user.email "bot@zion.app"');
      run('git add -A');
      run('git commit -m "chore(links): crawl + fix redirects [ci skip]" || true');
      run('git push origin main || true');
    } catch (e) {
      // ignore
    }
  }

  if (mode === 'watch') {
    console.log('Watching not implemented for site-link-orchestrator');
  }
}

main();
=======
const { spawnSync } = require('child_process');
const path = require('path');

function runNodeScript(rel, args = [], env = {}) {
  const abs = path.join(process.cwd(), rel);
  const res = spawnSync('node', [abs, ...args], { stdio: 'inherit', env: { ...process.env, ...env } });
  return res.status || 0;
}

function main() {
  const base = process.env.SITE_BASE_URL || process.env.SITEMAP_BASE_URL || process.env.DEPLOY_PRIME_URL || process.env.URL || 'https://zion.app';
  const max = process.env.LINK_CRAWL_MAX || '400';
  console.log(`[link-orchestrator] base=${base} max=${max}`);

  const crawlStatus = runNodeScript('automation/site-link-crawler.cjs', [base], { LINK_CRAWL_MAX: String(max) });
  if (crawlStatus !== 0) process.exit(crawlStatus);

  const fixArgs = process.argv.includes('--apply') ? ['--write'] : [];
  const fixStatus = runNodeScript('automation/site-link-fixer.cjs', fixArgs);
  if (fixStatus !== 0) process.exit(fixStatus);

  console.log('[link-orchestrator] done');
}

if (require.main === module) main();
>>>>>>> origin/cursor/crawl-and-fix-site-links-and-pages-ed4d
