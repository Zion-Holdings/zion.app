#!/usr/bin/env node

const { execSync } = require('child_process'
const fs = require('fs'
const path = require('path'
    console.log('🔧 Running quick lint fix...'
        execSync('npx eslint --version', { stdio: 'pipe'
        console.log('📦 Installing ESLint...'
        execSync('npm install --save-dev eslint eslint-config-next @typescript-eslint/eslint-plugin @typescript-eslint/parser', { stdio: 'inherit'
      // Create ESLint config if it doesn'
      console.log('🔍 Running ESLint with auto-fix...'
      execSync('npx eslint . --ext .js,.jsx,.ts,.tsx --fix'
        stdio: 'inherit'
      console.log('✅ Quick lint fix completed successfully!'
      console.error('❌ Quick lint fix failed:'
    const eslintConfigPath = path.join(this.projectRoot, '.eslintrc.json'
          'next/core-web-vitals'
          '@typescript-eslint/recommended'
        parser: '@typescript-eslint/parser'
        plugins: ['@typescript-eslint'
          '@typescript-eslint/no-unused-vars': 'warn'
          '@typescript-eslint/no-explicit-any': 'warn'
          'prefer-const': 'warn'
          'no-var': 'error'
          'no-console': 'warn'
          'no-debugger': 'error'
      console.log('📝 Created .eslintrc.json configuration'
    console.log('🔧 Running additional fixes...'
    const files = this.findFiles(['**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx'
    console.log('✅ Additional fixes completed'
      const glob = require('glob'
        ignore: ['node_modules/**', '.next/**', 'automation/**'
      let content = fs.readFileSync(filePath, 'utf8'
        { pattern: /\s+$/gm, replacement: ''
        { pattern: /;;+/g, replacement: ';'
        { pattern: /(\w+)\s*\n/g, replacement: '$1;\n'
        { pattern: /import\s+{\s*([^}]+)\s*}\s+from\s+['"]([^'"]+)['"