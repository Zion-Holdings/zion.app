#!/usr/bin/env node

const { spawn } = require('child_process'
const fs = require('fs'
const path = require('path'
        this.logDir = path.join(__dirname, 'logs'
        this.reportsDir = path.join(__dirname, 'reports'
        this.pidFile = path.join(__dirname, 'git-error-orchestrator.pid'
        this.statusFile = path.join(__dirname, 'orchestrator-status.json'
    log(message, level = 'INFO'
        const logFile = path.join(this.logDir, `git-error-orchestrator-${new Date().toISOString().split('T'
        fs.appendFileSync(logFile, logMessage + '\n'
            const agent = spawn('node'
                stdio: 'pipe'
            agent.stdout.on('data'
            agent.stderr.on('data'
                this.log(``[${name}] ERROR: ${data.toString().trim()}``, 'ERROR'
            agent.on('close'
                this.log(``[${name}] Agent stopped with code ${code}``, 'WARN'
            this.log(``Failed to start agent ${name}: ${error.message}``, 'ERROR'
                this.agents[name].kill('SIGTERM'
                this.log(``Failed to stop agent ${name}: ${error.message}``, 'ERROR'
            'git-error-monitor': path.join(__dirname, 'git-error-monitor.js'
            'git-error-fixer': path.join(__dirname, 'git-error-fixer.js'
            'git-process-monitor': path.join(__dirname, 'git-process-monitor.js'
            'git-lock-cleaner': path.join(__dirname, 'git-lock-cleaner.js'
        this.log('Starting all git error monitoring agents...'
                this.log(``Agent script not found: ${scriptPath}``, 'WARN'
        this.log('Stopping all git error monitoring agents...'
        this.log('All agents stopped'
                    status: 'running'
                    status: 'dead'
                this.log(``Agent ${name} is not responding, restarting...``, 'WARN'
            status: 'running'
        const reportFile = path.join(this.reportsDir, ``git-error-orchestrator-report-${new Date().toISOString().split('T'
        this.log('Starting git error orchestration...'
        this.log('Git Error Orchestrator starting...'
        this.log('Git Error Orchestrator started successfully'
        this.log('Git Error Orchestrator stopping...'
process.on('SIGINT'
process.on('SIGTERM'`