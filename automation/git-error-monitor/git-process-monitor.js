#!/usr/bin/env node

const { execSync, spawn } = require('child_process'
const fs = require('fs'
const path = require('path'
        this.logDir = path.join(__dirname, 'logs'
        this.reportsDir = path.join(__dirname, 'reports'
        this.pidFile = path.join(__dirname, 'git-process-monitor.pid'
        this.statusFile = path.join(__dirname, 'process-status.json'
    log(message, level = 'INFO'
        const logFile = path.join(this.logDir, `git-process-monitor-${new Date().toISOString().split('T'
        fs.appendFileSync(logFile, logMessage + '\n'
            const result = execSync('ps aux | grep git', { encoding: 'utf8'
            const lines = result.split('\n'
                line.includes('git'
                !line.includes('grep'
                !line.includes('git-process-monitor'
                    command: parts.slice(10).join(' '
            this.log(``Failed to get git processes: ${error.message}``, 'ERROR'
            execSync(``kill -0 ${process.pid}``, { stdio: 'pipe'
                return { healthy: false, reason: 'high_cpu'
                return { healthy: false, reason: 'high_memory'
            return { healthy: false, reason: 'process_dead'
            execSync(``kill -9 ${pid}``, { stdio: 'pipe'
            this.log(``Killed git process: ${pid}``, 'FIX'
            this.log(``Failed to kill process ${pid}: ${error.message}``, 'ERROR'
            status: 'running'
        const reportFile = path.join(this.reportsDir, ``git-process-report-${new Date().toISOString().split('T'
        this.log('Starting git process check...'
            this.log('No git processes found'
                this.log(``Unhealthy process detected: ${process.pid} - ${health.reason}``, 'WARN'
                if (health.reason === 'high_cpu' || health.reason === 'high_memory'
        this.log('Git Process Monitor starting...'
        this.log('Git Process Monitor started successfully'
        this.log('Git Process Monitor stopping...'
process.on('SIGINT'
process.on('SIGTERM'`