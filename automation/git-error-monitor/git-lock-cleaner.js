#!/usr/bin/env node

const { execSync } = require('child_process'
const fs = require('fs'
const path = require('path'
        this.logDir = path.join(__dirname, 'logs'
        this.reportsDir = path.join(__dirname, 'reports'
        this.pidFile = path.join(__dirname, 'git-lock-cleaner.pid'
        this.statusFile = path.join(__dirname, 'lock-cleaner-status.json'
    log(message, level = 'INFO'
        const logFile = path.join(this.logDir, `git-lock-cleaner-${new Date().toISOString().split('T'
        fs.appendFileSync(logFile, logMessage + '\n'
        const gitDir = path.join(process.cwd(), '.git'
            'index.lock'
            'HEAD.lock'
            'refs/heads/main.lock'
            'refs/remotes/origin/main.lock'
            'MERGE_HEAD.lock'
            'CHERRY_PICK_HEAD.lock'
            'REBASE_HEAD.lock'
            'refs/stash.lock'
            'refs/notes/commits.lock'
            'packed-refs.lock'
            this.log(``Removed lock file: ${lock.file} (age: ${Math.round(lock.age / 1000)}s)``, 'FIX'
            this.log(``Failed to remove lock file ${lock.file}: ${error.message}``, 'ERROR'
                this.log(``Lock file ${lock.file} is recent (age: ${Math.round(lock.age / 1000)}s), keeping``, 'INFO'
            const result = execSync('git status --porcelain', { encoding: 'utf8'
            this.log(``Git status check failed: ${error.message}``, 'ERROR'
            status: 'completed'
        const reportFile = path.join(this.reportsDir, ``git-lock-report-${new Date().toISOString().split('T'
        this.log('Starting git lock cleanup...'
            this.log('No git lock files found'
            this.log('Git status check failed after cleanup', 'WARN'
        this.log('Git Lock Cleaner starting...'
        this.log('Git Lock Cleaner started successfully'
        this.log('Git Lock Cleaner stopping...'
process.on('SIGINT'
process.on('SIGTERM'`