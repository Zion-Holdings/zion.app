#!/usr/bin/env node
/* eslint-disable */
const fs = require('fs');
const path = require('path');

const API_DIR = path.join(process.cwd(), 'docs/gitbook/api');
const OUTPUT = path.join(process.cwd(), 'public/openapi.json');

function parseApiFiles() {
  const files = fs.existsSync(API_DIR) ? fs.readdirSync(API_DIR) : [];
  const paths = {};
  for (const file of files) {
    if (!file.endsWith('.md')) continue;
    const full = path.join(API_DIR, file);
    const content = fs.readFileSync(full, 'utf8');
    const lines = content.split(/\r?\n/);
    for (const line of lines) {
      const m = line.match(/^##\s+(GET|POST|PUT|PATCH|DELETE)\s+([^\s]+)/i);
      if (m) {
        const method = m[1].toLowerCase();
        const route = m[2];
        paths[route] = paths[route] || {};
        paths[route][method] = {
          summary: `Autogenerated from ${file}`,
          responses: {
            '200': { description: 'OK' }
          }
        };
      }
    }
  }
  return paths;
}

function generateOpenApi() {
  const spec = {
    openapi: '3.1.0',
    info: {
      title: 'Zion API',
      version: '0.1.0',
      description: 'Autogenerated from docs/gitbook/api markdown files.'
    },
    servers: [{ url: '/api/v1' }],
    paths: {}
  };
  spec.paths = parseApiFiles();
  fs.mkdirSync(path.dirname(OUTPUT), { recursive: true });
  fs.writeFileSync(OUTPUT, JSON.stringify(spec, null, 2));
  console.log('Wrote', OUTPUT);
}

generateOpenApi();