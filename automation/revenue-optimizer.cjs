#!/usr/bin/env node

'use strict';

const fs = require('fs');
const path = require('path');

function ensureDir(p) {
  fs.mkdirSync(p, { recursive: true });
}

function writeIfChanged(filePath, content) {
  const exists = fs.existsSync(filePath);
  if (exists) {
    const current = fs.readFileSync(filePath, 'utf8');
    if (current === content) return false;
  }
  ensureDir(path.dirname(filePath));
  fs.writeFileSync(filePath, content);
  return true;
}

function main() {
  const root = path.resolve(__dirname, '..');
  const logsDir = path.join(root, 'automation', 'logs');
  ensureDir(logsDir);
  const changes = [];

  const componentPath = path.join(root, 'components', 'RevenueConsultation.tsx');
  const componentContent = `import Link from 'next/link';

export default function RevenueConsultation() {
  return (
    <div className="rounded-3xl border border-emerald-400/20 bg-emerald-500/5 p-6 text-white">
      <h2 className="text-xl font-semibold">Book a Paid Consultation</h2>
      <p className="mt-2 text-sm text-white/80">Monetize faster with a guided session. We help you integrate autonomous cloud automations tailored to your needs.</p>
      <div className="mt-4 flex flex-wrap gap-2">
        <a href="#book" className="rounded-lg bg-gradient-to-r from-emerald-500 to-cyan-500 px-4 py-2 text-sm font-semibold">Book now</a>
        <Link href="/automation"><a className="rounded-lg border border-white/15 bg-white/5 px-4 py-2 text-sm">See what we automate</a></Link>
      </div>
      <div className="mt-3 text-xs text-white/60">Auto‑generated by revenue optimizer</div>
    </div>
  );
}
`;
  if (writeIfChanged(componentPath, componentContent)) changes.push(componentPath);

  const servicesIndexPath = path.join(root, 'pages', 'services', 'index.tsx');
  const servicesIndexContent = `import Head from 'next/head';
import Link from 'next/link';

export default function ServicesIndex() {
  return (
    <div className="min-h-screen bg-slate-950 text-white">
      <Head>
        <title>Services — Zion</title>
        <meta name="description" content="Auto‑generated services directory" />
      </Head>
      <main className="mx-auto max-w-5xl px-6 py-10">
        <h1 className="text-3xl font-bold">Services</h1>
        <p className="mt-2 text-white/70">Curated by autonomous revenue optimization agents.</p>
        <div className="mt-6 grid grid-cols-1 gap-3 sm:grid-cols-2">
          <Link href="/services/consultation">
            <a className="rounded-xl border border-white/10 bg-white/5 p-4 hover:bg-white/10">
              <div className="text-base font-semibold">Paid Consultation</div>
              <div className="text-sm text-white/70">Personalized guidance to deploy cloud automations</div>
            </a>
          </Link>
        </div>
      </main>
    </div>
  );
}
`;
  if (writeIfChanged(servicesIndexPath, servicesIndexContent)) changes.push(servicesIndexPath);

  const consultationPagePath = path.join(root, 'pages', 'services', 'consultation.tsx');
  const consultationPageContent = `import Head from 'next/head';
import RevenueConsultation from '../../components/RevenueConsultation';

export default function ConsultationPage() {
  return (
    <div className="min-h-screen bg-slate-950 text-white">
      <Head>
        <title>Paid Consultation — Zion</title>
        <meta name="description" content="Book a paid consultation for autonomous cloud automations" />
      </Head>
      <main className="mx-auto max-w-5xl px-6 py-10">
        <h1 className="text-3xl font-bold">Paid Consultation</h1>
        <p className="mt-2 text-white/70">Accelerate adoption of autonomous cloud systems.</p>
        <div className="mt-6">
          <RevenueConsultation />
        </div>
      </main>
    </div>
  );
}
`;
  if (writeIfChanged(consultationPagePath, consultationPageContent)) changes.push(consultationPagePath);

  const report = {
    ranAt: new Date().toISOString(),
    changes,
  };
  const reportPath = path.join(logsDir, 'revenue-optimizer.json');
  fs.writeFileSync(reportPath, JSON.stringify(report, null, 2));
  console.log('Revenue optimizer completed with changes:', changes.length);
}

main();