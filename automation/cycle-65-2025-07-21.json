{
  "timestamp": "2025-07-21T06:49:22.359Z",
  "cycle": 65,
  "automations": [
    {
      "name": "Zion App Maintainer",
      "success": true,
      "duration": 7689,
      "output": "\n> project@0.0.0 maintain\n> node scripts/zion-app-maintainer.cjs\n\n[2025-07-21T06:49:22.811Z] [INFO] 🚀 Starting Zion App Maintenance...\n[2025-07-21T06:49:22.816Z] [INFO] 🔍 Checking current app status...\n[2025-07-21T06:49:22.848Z] [WARN] ⚠️ Simple server is not running\n[2025-07-21T06:49:22.848Z] [INFO] ✅ Simple server file exists\n[2025-07-21T06:49:22.848Z] [INFO] ✅ Package.json is valid\n[2025-07-21T06:49:22.848Z] [INFO] 🏥 Performing health check...\n[2025-07-21T06:49:22.868Z] [ERROR] ❌ Health check failed: Command failed: curl -s http://localhost:3001/api/health\n[2025-07-21T06:49:22.868Z] [INFO] 🧹 Cleaning up artifacts...\n[2025-07-21T06:49:23.012Z] [INFO] ✅ Cleaned 2 artifacts\n[2025-07-21T06:49:23.013Z] [INFO] 📦 Checking dependencies...\n[2025-07-21T06:49:27.697Z] [ERROR] ❌ Error checking dependencies: Unexpected non-whitespace character after JSON at position 233 (line 10 column 1)\n[2025-07-21T06:49:27.697Z] [INFO] ⚡ Optimizing performance...\n[2025-07-21T06:49:29.311Z] [INFO] 📁 Total project size: 930 MB\n[2025-07-21T06:49:29.311Z] [WARN] ⚠️ Large project size detected\n[2025-07-21T06:49:29.311Z] [WARN] ⚠️ Found 9 large files\n[2025-07-21T06:49:30.001Z] [WARN] ⚠️ Large node_modules detected\n[2025-07-21T06:49:30.001Z] [INFO] 📋 Generating maintenance report...\n[2025-07-21T06:49:30.002Z] [INFO] ✅ Maintenance report saved: maintenance-reports/maintenance-2025-07-21.json\n[2025-07-21T06:49:30.031Z] [INFO] ✅ Summary saved: maintenance-reports/latest-summary.md\n[2025-07-21T06:49:30.031Z] [INFO] 📊 Maintenance Summary:\n[2025-07-21T06:49:30.032Z] [INFO] ✅ Improvements: 4\n[2025-07-21T06:49:30.032Z] [INFO]   - Simple server file: Present\n[2025-07-21T06:49:30.032Z] [INFO]   - Package.json: Valid\n[2025-07-21T06:49:30.032Z] [INFO]   - Cleaned 2 artifacts\n[2025-07-21T06:49:30.032Z] [INFO]   - Maintenance report generated\n[2025-07-21T06:49:30.032Z] [INFO] ⚠️ Issues: 6\n[2025-07-21T06:49:30.032Z] [INFO]   - Server not running\n[2025-07-21T06:49:30.032Z] [INFO]   - Health check failed: Command failed: curl -s http://localhost:3001/api/health\n[2025-07-21T06:49:30.032Z] [INFO]   - Dependency check failed: Unexpected non-whitespace character after JSON at position 233 (line 10 column 1)\n[2025-07-21T06:49:30.032Z] [INFO]   - Large project size\n[2025-07-21T06:49:30.032Z] [INFO]   - 9 large files\n[2025-07-21T06:49:30.032Z] [INFO]   - Large node_modules\n[2025-07-21T06:49:30.032Z] [INFO] 🎉 Zion App Maintenance completed!\n",
      "error": "",
      "command": "npm run maintain"
    },
    {
      "name": "Complete Zion Automation",
      "success": true,
      "duration": 16894,
      "output": "\n> project@0.0.0 automate\n> node scripts/complete-zion-automation.cjs\n\n[2025-07-21T06:49:30.432Z] [INFO] 🚀 Starting Zion App Automation\n[2025-07-21T06:49:30.437Z] [INFO] 🔧 This will fix issues and continuously improve the app\n[2025-07-21T06:49:30.437Z] [INFO] 🔧 Fixing path-to-regexp issue...\n[2025-07-21T06:49:30.439Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/api/auth/[...nextauth].ts\n[2025-07-21T06:49:30.440Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/api/blog/[slug].ts\n[2025-07-21T06:49:30.441Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/api/image/[...params].ts\n[2025-07-21T06:49:30.442Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/api/marketplace/product/[productId].ts\n[2025-07-21T06:49:30.443Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/api/reviews/[productId].ts\n[2025-07-21T06:49:30.443Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/api/talent/[id].ts\n[2025-07-21T06:49:30.444Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/blog/[slug].tsx\n[2025-07-21T06:49:30.445Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/careers/[id].tsx\n[2025-07-21T06:49:30.445Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/case-studies/[slug].tsx\n[2025-07-21T06:49:30.445Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/category/[slug].tsx\n[2025-07-21T06:49:30.446Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/checkout/[id].tsx\n[2025-07-21T06:49:30.446Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/community/[slug].tsx\n[2025-07-21T06:49:30.446Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/community/category/[categoryId].tsx\n[2025-07-21T06:49:30.446Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/company/[companySlug].tsx\n[2025-07-21T06:49:30.447Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/docs/[...slug].tsx\n[2025-07-21T06:49:30.448Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/equipment/[id].tsx\n[2025-07-21T06:49:30.448Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/governance/[proposalId].tsx\n[2025-07-21T06:49:30.449Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/it-onsite-services/[country].tsx\n[2025-07-21T06:49:30.449Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/marketplace/listing/[slug].tsx\n[2025-07-21T06:49:30.450Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/nations/[slug].tsx\n[2025-07-21T06:49:30.451Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/order-confirmation/[orderId].tsx\n[2025-07-21T06:49:30.451Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/orders/[orderId].tsx\n[2025-07-21T06:49:30.451Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/product/[id].tsx\n[2025-07-21T06:49:30.452Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/project-room/[projectId].tsx\n[2025-07-21T06:49:30.452Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/roadmap/[id].tsx\n[2025-07-21T06:49:30.453Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/search/[slug].tsx\n[2025-07-21T06:49:30.453Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/services/[slug].tsx\n[2025-07-21T06:49:30.453Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/talent/[id].tsx\n[2025-07-21T06:49:30.454Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/tutorials/[slug].tsx\n[2025-07-21T06:49:30.454Z] [INFO] 🔧 Fixing dynamic route: /Users/miami2/Documents/GitHub/bolt.new.zion.app/pages/video-call/[roomId].tsx\n[2025-07-21T06:49:30.454Z] [INFO] 🔧 Fixing route patterns...\n[2025-07-21T06:49:30.455Z] [INFO] ✅ Path-to-regexp issues fixed\n[2025-07-21T06:49:30.455Z] [INFO] 🔧 Fixing TypeScript issues...\n[2025-07-21T06:49:35.706Z] [WARN] ⚠️  TypeScript check completed with issues\n[2025-07-21T06:49:35.706Z] [INFO] 🔧 Fixing linting issues...\n[2025-07-21T06:49:41.693Z] [WARN] ⚠️  Linting completed with issues\n[2025-07-21T06:49:41.693Z] [INFO] ⚡ Optimizing performance...\n[2025-07-21T06:49:45.472Z] [INFO] 🔒 Checking security...\n[2025-07-21T06:49:46.927Z] [INFO] 🔒 Security check passed\n[2025-07-21T06:49:46.927Z] [INFO] 📊 Generating automation report...\n[2025-07-21T06:49:46.928Z] [INFO] ✅ Report generated: automation/report.json\n[2025-07-21T06:49:46.928Z] [INFO] ✅ Automation complete!\n[2025-07-21T06:49:46.928Z] [INFO] 📊 Summary: 1 fixes, 0 issues, 1 improvements\n",
      "error": "",
      "command": "npm run automate"
    },
    {
      "name": "TypeScript Check",
      "success": false,
      "duration": 4500,
      "output": "",
      "error": "Command failed: npm run typecheck\n",
      "command": "npm run typecheck"
    },
    {
      "name": "Linting Fix",
      "success": false,
      "duration": 4797,
      "output": "",
      "error": "Command failed: npm run lint:fix\n(node:24172) [MODULE_TYPELESS_PACKAGE_JSON] Warning: Module type of file:///Users/miami2/Documents/GitHub/bolt.new.zion.app/eslint.config.js?mtime=1752965421347 is not specified and it doesn't parse as CommonJS.\nReparsing as ES module because module syntax was detected. This incurs a performance overhead.\nTo eliminate this warning, add \"type\": \"module\" to /Users/miami2/Documents/GitHub/bolt.new.zion.app/package.json.\n(Use `node --trace-warnings ...` to show where the warning was created)\n\n ⚠ The Next.js plugin was not detected in your ESLint configuration. See https://nextjs.org/docs/app/api-reference/config/eslint#migrating-existing-config\n\n./pages/403.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/404.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/500.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/ProductsList.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/_app.js\n4:10  Error: Parsing error: Unexpected token <\n\n./pages/_document.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/about.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/academy/founder-course.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/academy/futurescape.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/academy/storybook.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/account.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/activity-log.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/admin/index.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/admin/logs.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/admin/performance.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/admin/pitch-generator.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/admin/products.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/admin/vault.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/api/auth/[...nextauth].ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/auth/confirm.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/auth/forgot.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/auth/health.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/auth/login.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/auth/register.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/auth/resend-verification-email.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/auth/session.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/blog/[slug].ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/blog/index.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/categories/[slug]/items.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/categories.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/checkout/session.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/checkout-session.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/create-payment-intent.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/dev/dashboard.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/equipment.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/error-report.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/extension-health.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/favorites.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/feedback.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/health/environment.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/health/index.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/health.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/hello.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/image/[...params].ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/jobs.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/kb-chat.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/logs.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/marketplace/categories.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/marketplace/equipment.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/marketplace/overview.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/marketplace/product/[productId].ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/marketplace/products.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/marketplace/talent.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/newsletter.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/performance-metrics.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/points/redeem.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/products/index.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/push/send.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/push/subscribe.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/resend-verification-email.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/reviews/[productId].ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/reviews/index.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/search/suggest.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/search.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/services.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/socket.ts\n5:46  Error: Parsing error: Unexpected token >\n\n./pages/api/status.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/stripe/webhook.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/talent/[id].ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/api/talent.ts\n1:13  Error: Parsing error: Unexpected token {\n\n./pages/auth/error.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/auth/login.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/auth/register.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/auth/verify-email.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/blog/[slug].tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/blog/index.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/calendar/governance.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/careers/[id].tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/careers.tsx\n1:8  Warning: 'React' is defined but never used.  no-unused-vars\n2:8  Warning: 'Head' is defined but never used.  no-unused-vars\n\n./pages/cart/index.tsx\n1:8  Warning: 'React' is defined but never used.  ",
      "command": "npm run lint:fix"
    },
    {
      "name": "Code Formatting",
      "success": false,
      "duration": 47049,
      "output": "",
      "error": "Command failed: npm run format\n[error] __mocks__/fileMock.js: SyntaxError: Unterminated string constant. (2:33)\n[error]   1 | // __mocks__/fileMock.js;\n[error] > 2 | export default 'test-file-stub';'\n[error]     |                                 ^\n[error] __tests__/api/auth/forgot.test.ts: SyntaxError: ';' expected. (1:46)\n[error] > 1 | import { createMocks } from 'node-mocks-http''import type { NextApiRequest, NextApiResponse } from 'next''import axios from 'axios''import forgotHandler from '../../../pages/api/auth/forgot'';jest.mock('axios')'const mockedAxios = axios as jest.Mocked<typeof axios>\n[error]     |                                              ^\n[error]   2 |\n[error]   3 | describe('/api/auth/forgot API Endpoint', () => {'  const OLD_ENV = process.env\n[error]   4 |   beforeEach(() => {\n[error] __tests__/api/auth/register.test.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { createMocks } from 'node-mocks-http';'import type { NextApiRequest, NextApiResponse } from 'next';'// Import the handler directly to test it\n[error]     |                                                                                                      ^\n[error]   2 | // We will extract getAuth0ManagementToken for separate unit tests later if needed,\n[error]   3 | // or test it implicitly via the main handler. For now, let's focus on the handler.'import registerHandler from '../../../pages/api/auth/register';'\n[error]   4 | // Mock the global fetch function\n[error] __tests__/api/categories.test.ts: SyntaxError: ';' expected. (2:170)\n[error]   1 | import categoriesApiHandler from '@/pages/api/categories'; // Correctly import the default export'import { CATEGORIES } from '@/data/categories';'// Prisma is now mocked from @prisma/client directly in the jest.mock call;\n[error] > 2 | import { createMocks, createRequest as _createRequest, createResponse as _createResponse } from 'node-mocks-http';'import type { NextApiRequest, NextApiResponse } from 'next';'import { PrismaClient } from '@prisma/client';'\n[error]     |                                                                                                                                                                          ^\n[error]   3 | // Mock Prisma\n[error]   4 | jest.mock('@prisma/client', () => {'  const mockPrismaClient = {\n[error]   5 |     category: {\n[error] __tests__/api/feedback.test.ts: SyntaxError: ';' expected. (1:89)\n[error] > 1 | import { MongoMemoryServer } from 'mongodb-memory-server';'import { createMocks } from 'node-mocks-http';'import type { NextApiRequest, NextApiResponse } from 'next';'import handler from '../../temp_essential_pages/api/feedback';'import mongoose from 'mongoose';'import Feedback from '../../server/models/Feedback';';\n[error]     |                                                                                         ^\n[error]   2 | let mongoServer: MongoMemoryServer;\n[error]   3 |\n[error]   4 | beforeAll(async () => {\n[error] __tests__/api/health.test.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { createMocks } from 'node-mocks-http';'import type { NextApiRequest, NextApiResponse } from 'next';'import handler from '@/pages/api/health';'\n[error]     |                                                                                                      ^\n[error]   2 | describe('/api/health API Endpoint', () => {'  it('returns status ok with uptime', async () => {'    const { req, res } = createMocks<NextApiRequest, NextApiResponse>({ method: 'GET' });'\n[error]   3 |     await handler(req, res);\n[error]   4 |\n[error] __tests__/api/log-error.test.js: SyntaxError: Unterminated string constant. (11:76)\n[error]    9 | // Mock PrismaClient and its methods\n[error]   10 | // We need to mock specific methods on the `errorAnalysisSuggestion` model.;\n[error] > 11 | import { describe, test, beforeAll, beforeEach, expect, vi } from 'vitest';';\n[error]      |                                                                            ^\n[error]   12 | const mockPrismaErrorAnalysisSuggestion = {\n[error]   13 |   findUnique: vi.fn(),\n[error]   14 |   create: vi.fn(),\n[error] __tests__/api/newsletter.subscribe.test.js: SyntaxError: Unexpected token (1:116)\n[error] > 1 | import { createMocks } from 'node-mocks-http';'import fs from 'fs';'import path from 'path';'import handler from '../../api/newsletter/subscribe';';\n[error]     |                                                                                                                    ^\n[error]   2 | const FILE_PATH = path.join(process.cwd(), 'data', 'newsletter-subscriptions.json');'\n[error]   3 | describe('/api/newsletter/subscribe', () => {'  beforeEach(() => {\n[error]   4 |     fs.writeFileSync(FILE_PATH, JSON.stringify([]));\n[error] __tests__/api/newsletter.test.ts: SyntaxError: ';' expected. (1:117)\n[error] > 1 | import { createMocks, RequestMethod } from 'node-mocks-http';'import type { NextApiRequest, NextApiResponse } from 'next';'import handler from '@/pages/api/newsletter';'import { mailchimpService } from '@/integrations/mailchimp';'\n[error]     |                                                                                                                     ^\n[error]   2 | jest.mock('@/integrations/mailchimp', () => ({'  mailchimpService: { addSubscriber: jest.fn() }\n[error]   3 | }));\n[error]   4 | jest.mock('@/lib/email', () => ({'  sendEmailWithSendGrid: jest.fn().mockResolvedValue(undefined)\n[error] __tests__/api/products.test.ts: SyntaxError: ';' expected. (1:154)\n[error] > 1 | import { NextApiRequest, NextApiResponse } from 'next';'import { createMocks, createRequest as _createRequest, createResponse as _createResponse } from 'node-mocks-http';'import productHandler from '@/pages/api/products/index';'import { PrismaClient } from '@prisma/client';'\n[error]     |                                                                                                                                                          ^\n[error]   2 | // Mock Prisma Client\n[error]   3 | jest.mock('@prisma/client', () => {'  const mPrismaClient = {\n[error]   4 |     product: {\n[error] __tests__/api/reset-password.test.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { createMocks } from 'node-mocks-http';'import type { NextApiRequest, NextApiResponse } from 'next';'import handler from '@/pages/api/auth/reset';'import { describe, it, expect } from 'vitest';'\n[error]     |                                                                                                      ^\n[error]   2 | describe('/api/auth/reset token validation', () => {'  it('returns 400 if token is missing', async () => {'    const { req, res } = createMocks({ method: 'POST', body: { newPassword: 'pass12345' } });'    await handler(req as NextApiRequest, res as NextApiResponse);\n[error]   3 |     expect(res._getStatusCode()).toBe(400);\n[error]   4 |     expect(res._getJSONData().message).toBe('Token and new password are required.');'  });\n[error] __tests__/api/reviews.test.ts: SyntaxError: ';' expected. (1:117)\n[error] > 1 | import { createMocks, RequestMethod } from 'node-mocks-http';'import type { NextApiRequest, NextApiResponse } from 'next';'import reviewsHandler from '@/pages/api/reviews'; // Handler for POST /api/reviews'import productReviewsHandler from '@/pages/api/reviews/[productId]'; // Handler for GET /api/reviews/[productId]'import { PrismaClient } from '@prisma/client';'import { supabase } from '@/integrations/supabase/client';'\n[error]     |                                                                                                                     ^\n[error]   2 | // Mock Prisma Client\n[error]   3 | jest.mock('@prisma/client', () => {'  const mockPrismaClient = {\n[error]   4 |     productReview: {\n[error] __tests__/api/status.test.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { createMocks } from 'node-mocks-http';'import type { NextApiRequest, NextApiResponse } from 'next';'import handler from '@/pages/api/status';'\n[error]     |                                                                                                      ^\n[error]   2 | describe('/api/status API Endpoint', () => {'  it('returns service status list', async () => {'    const { req, res } = createMocks<NextApiRequest, NextApiResponse>({ method: 'GET' });'\n[error]   3 |     await handler(req, res);\n[error]   4 |\n[error] __tests__/api/subscribe.test.js: SyntaxError: Unexpected token (1:70)\n[error] > 1 | import { createMocks } from 'node-mocks-http';'import handler from '../../api/subscribe';'\n[error]     |                                                                      ^\n[error]   2 | describe('/api/subscribe', () => {'  it('rejects invalid email', async () => {'    const { req, res } = createMocks({\n[error]   3 |       method: 'POST','      body: { email: 'bad-email' }'    });\n[error]   4 |     await handler(req, res);\n[error] __tests__/api/talent.test.ts: SyntaxError: ';' expected. (1:75)\n[error] > 1 | import axios from 'axios';'import { getAllTalent, getTalentBySlug } from '@/api/talent';'import { TALENT_PROFILES };from '@/data/talentData'; // Using actual data for comparison'\n[error]     |                                                                           ^\n[error]   2 | // Mock axios\n[error]   3 | jest.mock('axios', () => ({'  ...jest.requireActual('axios'), // Import and retain default behavior'  get: jest.fn(), // Mock only get\n[error]   4 |   isAxiosError: jest.fn((payload): payload is import('axios').AxiosError => { // Explicitly type payload'    // Basic check for AxiosError structure for testing purposes\n[error] __tests__/api/talent/index.test.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { createMocks } from 'node-mocks-http';'import type { NextApiRequest, NextApiResponse } from 'next';'import talentHandler from '@/pages/api/talent/index';'import { TALENT_PROFILES } from '@/data/talentData';'import type { TalentProfile as _TalentProfile } from '@/types/talent';'\n[error]     |                                                                                                      ^\n[error]   2 | describe('/api/talent', () => {'  it('should return 200 and all talent profiles for GET requests', () => {'    const { req, res } = createMocks<NextApiRequest, NextApiResponse>({\n[error]   3 |       method: 'GET','    });\n[error]   4 |\n[error] __tests__/api/user-id.test.ts: SyntaxError: ';' expected. (1:65)\n[error] > 1 | import { expect, test, vi } from 'vitest';'import handler from '@/pages/api/users/[id]';';\n[error]     |                                                                 ^\n[error]   2 | function mockReq(method: string, query: any = {}, body?: any) {\n[error]   3 |   return { method, query, body } as any;\n[error]   4 | };\n[error] __tests__/api/user-me.test.ts: SyntaxError: ';' expected. (1:61)\n[error] > 1 | import { expect, test } from 'vitest';'import handler from '@/pages/api/users/me';';\n[error]     |                                                             ^\n[error]   2 | function mockReq(method: string, body?: any) {\n[error]   3 |   return { method, body } as any;\n[error]   4 | };\n[error] __tests__/auth/login.test.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';'import { loginUser } from '@/services/authService';'import { NextApiRequest, NextApiResponse } from 'next';';\n[error]     |                                                                                                      ^\n[error]   2 | const mockSignInWithPassword = vi.fn();\n[error]   3 |\n[error]   4 | vi.mock('@supabase/supabase-js', () => ({'  createClient: vi.fn(() => ({\n[error] __tests__/auth/register.test.ts: SyntaxError: ';' expected. (1:87)\n[error] > 1 | import { describe, expect, test, vi, beforeEach } from 'vitest';'import handler from '@/pages/api/auth/register'; // Assuming this is the Next.js API handler'\n[error]     |                                                                                       ^\n[error]   2 | // Mock the Supabase client;\n[error]   3 | const signUpMock = vi.fn();\n[error]   4 | vi.mock('@supabase/supabase-js', () => ({'  createClient: () => ({\n[error] __tests__/AuthContext.test.tsx: SyntaxError: ';' expected. (1:108)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { AuthProvider } from '@/context/auth/AuthProvider';'import { AuthContext } from '@/context/auth/AuthContext';'import { loginUser } from '@/services/authService';'import { useAuthOperations } from '@/hooks/useAuthOperations';'import { safeStorage } from '@/utils/safeStorage';'\n[error]     |                                                                                                            ^\n[error]   2 | jest.mock('@/services/authService');'jest.mock('@/hooks/useAuthOperations');'jest.mock('@/utils/safeStorage', () => ({'  safeStorage: { setItem: jest.fn(), getItem: jest.fn(), removeItem: jest.fn() },\n[error]   3 |   safeSessionStorage: { setItem: jest.fn(), getItem: jest.fn(), removeItem: jest.fn() }\n[error]   4 | }));\n[error] __tests__/cart-checkout-fixes.test.ts: SyntaxError: ';' expected. (2:76)\n[error]   1 | // Test for cart and checkout fixes - Issue #7\n[error] > 2 | describe('Cart and Checkout Functionality - Issue #7 Fix', () => {'  test('cart page is accessible without authentication', () => {'    // Test that cart page can be accessed without login\n[error]     |                                                                            ^\n[error]   3 |     const mockUseAuth = {\n[error]   4 |       user: null,\n[error]   5 |       isAuthenticated: false,\n[error] __tests__/components/admin/pitch-generator/InputFields.test.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import '@testing-library/jest-dom';'import InputFields from '@/components/admin/pitch-generator/InputFields';'\n[error]     |                                                                                ^\n[error]   2 | // Mock the next/router\n[error]   3 | jest.mock('next/router', () => ({'  useRouter: jest.fn(),\n[error]   4 | }));\n[error] __tests__/components/ApiErrorBoundary.test.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { QueryClient, QueryClientProvider } from '@tanstack/react-query';'import { ApiErrorBoundary } from '@/components/ApiErrorBoundary';'\n[error]     |                                                                                ^\n[error]   2 | // Mock Sentry\n[error]   3 | jest.mock('@sentry/nextjs', () => ({'  withScope: jest.fn((callback) => callback({\n[error]   4 |     setTag: jest.fn(),\n[error] __tests__/components/auth/SignupForm.test.tsx: SyntaxError: ';' expected. (1:93)\n[error] > 1 | import React from 'react';'import { renderWithProviders, screen, fireEvent, waitFor } from '__tests__/test-utils.tsx';'import { useRouter } from 'next/router';'import axios from 'axios';'import { toast } from '@/hooks/use-toast';'import SignupForm from '@/components/auth/SignupForm';'import { signIn } from 'next-auth/react';'\n[error]     |                                                                                             ^\n[error]   2 | // Mock dependencies\n[error]   3 | jest.mock('next/router');'jest.mock('axios');'jest.mock('@/hooks/use-toast');'jest.mock('next-auth/react', () => ({'  signIn: jest.fn(),\n[error]   4 | }));\n[error] __tests__/components/cart/GuestCheckoutModal.test.tsx: SyntaxError: ';' expected. (1:71)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent } from '@testing-library/react';'import '@testing-library/jest-dom';'import { GuestCheckoutModal } from '@/components/cart/GuestCheckoutModal'; // Adjust path as necessary'\n[error]     |                                                                       ^\n[error]   2 | // Mock isProdDomain as it's used in the component'jest.mock('@/utils/getStripe', () => ({'  isProdDomain: jest.fn(() => false), // Default to false (not prod) to show test data warning\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/components/CartBadge.test.tsx: SyntaxError: ';' expected. (1:81)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import userEvent from '@testing-library/user-event';'import PrimaryNav from '@/layout/PrimaryNav';'import { Provider } from 'react-redux';'import configureStore from 'redux-mock-store';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';';\n[error]     |                                                                                 ^\n[error]   2 | const mockStore = configureStore([]);\n[error]   3 | ;\n[error]   4 | function renderWithStore(cartItems: any[]) {\n[error] __tests__/components/CategoryCard.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { CategoryCard } from '@/components/CategoryCard';';\n[error]     |                                                            ^\n[error]   2 | const renderCard = (ui: React.ReactElement) => render(<MemoryRouter>{ui}</MemoryRouter>);\n[error]   3 |\n[error]   4 | describe('CategoryCard', () => {'  test('renders title, description and count', () => {'    renderCard(\n[error] __tests__/components/ConnectWalletButton.test.tsx: SyntaxError: ';' expected. (1:71)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent } from '@testing-library/react';'import ConnectWalletButton from '@/components/ConnectWalletButton';'import { useWallet } from '@/context/WalletContext';'import { useTokenBalance } from '@/hooks/useTokenBalance';'\n[error]     |                                                                       ^\n[error]   2 | jest.mock('@/context/WalletContext');'jest.mock('@/hooks/useTokenBalance');';\n[error]   3 | const mockUseWallet = useWallet as jest.Mock;\n[error]   4 | const mockUseTokenBalance = useTokenBalance as jest.Mock;\n[error] __tests__/components/EnhancedNewsletterForm.test.tsx: SyntaxError: ';' expected. (1:145)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { vi, expect, test, describe, beforeEach, afterEach } from 'vitest';'import { EnhancedNewsletterForm } from '@/components/EnhancedNewsletterForm';'import * as toastHook from '@/hooks/use-toast';'\n[error]     |                                                                                                                                                 ^\n[error]   2 | vi.mock('@/hooks/use-toast');'\n[error]   3 | describe('EnhancedNewsletterForm', () => {'  let _originalFetch: typeof global.fetch;\n[error]   4 |\n[error] __tests__/components/FavoriteButton.test.tsx: SyntaxError: ';' expected. (1:71)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent } from '@testing-library/react';'import { Provider } from 'react-redux';'import { configureStore } from '@reduxjs/toolkit';'import wishlistReducer from '@/store/wishlistSlice';'import { FavoriteButton } from '@/components/FavoriteButton';'\n[error]     |                                                                       ^\n[error]   2 | jest.mock('@/hooks/useAuth', () => ({'  useAuth: () => ({ isAuthenticated: true, user: { id: 'u1' } })'}));\n[error]   3 |\n[error]   4 | beforeEach(() => {\n[error] __tests__/components/feedback/FeedbackWidget.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import userEvent from '@testing-library/user-event';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import { useRouter } from 'next/router';'import { FeedbackProvider } from '@/context/FeedbackContext';'import { FeedbackWidget } from '@/components/feedback/FeedbackWidget';'jest.mock('@/hooks/useAuth', () => ({ useAuth: () => ({ user: null }) }));';\n[error]     |                                                            ^\n[error]   2 | function TestRoutes() {\n[error]   3 |   const router = useRouter();\n[error]   4 |   return (\n[error] __tests__/components/Footer.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import { Footer } from '@/components/Footer';'import mockNextRouter from 'next-router-mock';'\n[error]     |                                                            ^\n[error]   2 | jest.mock('next/router', () => mockNextRouter);'\n[error]   3 | /**\n[error]   4 |  * Verify that social media links contain the correct href attributes.\n[error] __tests__/components/GlobalErrorBoundary.test.tsx: SyntaxError: ';' expected. (1:71)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent } from '@testing-library/react';'import GlobalErrorBoundary from '@/components/GlobalErrorBoundary';'// We might not need GlobalErrorFallback directly if we test through GlobalErrorBoundary\n[error]     |                                                                       ^\n[error]   2 | // import GlobalErrorFallback from '@/components/GlobalErrorBoundary'; // Keep if direct testing is chosen'\n[error]   3 | // Mocking logError to prevent actual logging during tests\n[error]   4 | jest.mock('@/utils/logError', () => ({'  logError: jest.fn(),\n[error] __tests__/components/LanguageSwitcher.test.tsx: SyntaxError: ';' expected. (1:71)\n[error] > 1 | import React from 'react';'import { render, fireEvent, screen } from '@testing-library/react';'import { I18nextProvider } from 'react-i18next';'import i18n from '../../src/i18n/index'; // Adjust path if necessary'import LanguageSwitcher from '../../src/components/LanguageSwitcher'; // Adjust path if necessary'import Home from '../../src/pages/Home'; // Adjust path if necessary'\n[error]     |                                                                       ^\n[error]   2 | describe('LanguageSwitcher', () => {'  beforeEach(() => {\n[error]   3 |     // Reset language to English before each test\n[error]   4 |     i18n.changeLanguage('en');'  });\n[error] __tests__/components/MarketplaceErrorBoundary.test.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { MarketplaceErrorBoundary } from '@/components/MarketplaceErrorBoundary';'import * as Sentry from '@sentry/nextjs';'import { mutate } from 'swr';'\n[error]     |                                                                                ^\n[error]   2 | // Mock dependencies\n[error]   3 | jest.mock('@sentry/nextjs');'jest.mock('swr');';\n[error]   4 | const ThrowError = ({ shouldThrow }: { _shouldThrow: boolean }) => {\n[error] __tests__/components/NewsletterForm.test.tsx: SyntaxError: ';' expected. (1:145)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { vi, expect, describe, test, beforeEach, afterEach } from 'vitest';'import { NewsletterForm } from '@/components/NewsletterForm';'import * as toastHook from '@/hooks/use-toast';'\n[error]     |                                                                                                                                                 ^\n[error]   2 | vi.mock('@/hooks/use-toast');'\n[error]   3 | describe('NewsletterForm', () => {'  let _originalFetch: typeof global.fetch;\n[error]   4 |\n[error] __tests__/components/onboarding/GuidedTour.test.tsx: SyntaxError: ';' expected. (1:71)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent } from '@testing-library/react';'import { GuidedTour } from '@/components/onboarding/GuidedTour';'\n[error]     |                                                                       ^\n[error]   2 | // Helper to add target elements to the DOM;\n[error]   3 | function setupTargets() {\n[error]   4 |   const profile = document.createElement('button');'  profile.id = 'profile-link';'  profile.textContent = 'profile';'  document.body.appendChild(profile);\n[error] __tests__/components/onboarding/SignUpForm.test.tsx: SyntaxError: ';' expected. (1:56)\n[error] > 1 | import '@testing-library/jest-dom';'import React from 'react';'import { render, screen, fireEvent } from '@testing-library/react';'import { vi } from 'vitest';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import SignUpForm from '@/components/onboarding/SignUpForm';'import { useAuth as _useAuth } from '@/hooks/useAuth';'\n[error]     |                                                        ^\n[error]   2 | // Create mock functions that can be accessed in tests;\n[error]   3 | const mockLoginWithGoogle = jest.fn();\n[error]   4 | const mockSignup = jest.fn().mockResolvedValue({});\n[error] __tests__/components/ProductCard.test.tsx: SyntaxError: ';' expected. (1:83)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import ProductCard from '@/components/ProductCard';'// Use ProductListing from '@/types/listings' as that's what Marketplace.tsx provides'import { ProductListing } from '@/types/listings';'import { AuthProvider } from '@/context/auth/AuthProvider';'import { Provider } from 'react-redux';'import { store } from '@/store'; // Assuming store is correctly set up for tests'import { FavoritesProvider } from '@/context/FavoritesContext';'import { GlobalSnackbarProvider } from '@/context/SnackbarContext'; // Assuming this is the correct Snackbar provider'import { captureException } from '@/utils/sentry';'\n[error]     |                                                                                   ^\n[error]   2 | // Mock next/router;\n[error]   3 | const mockPush = jest.fn();\n[error]   4 | jest.mock('next/router', () => ({'  useRouter: () => ({\n[error] __tests__/components/ProtectedRoute.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import { MemoryRouter, Routes, Route } from 'react-router-dom';'import ProtectedRoute from '@/components/ProtectedRoute';'import { useAuth } from '@/hooks/useAuth';'import { useTenantAdminStatus } from '@/hooks/useWhitelabelTenant';'import { useWhitelabel } from '@/context/WhitelabelContext';'\n[error]     |                                                            ^\n[error]   2 | jest.mock('@/hooks/useAuth');'jest.mock('@/hooks/useWhitelabelTenant');'jest.mock('@/context/WhitelabelContext');';\n[error]   3 | const mockUseAuth = useAuth as jest.Mock;\n[error]   4 | const mockUseTenantAdminStatus = useTenantAdminStatus as jest.Mock;\n[error] __tests__/components/ScrollProgressBar.test.tsx: SyntaxError: ';' expected. (1:96)\n[error] > 1 | import { render, fireEvent } from '@testing-library/react';'import { ScrollProgressBar } from '@/components/ScrollProgressBar';'\n[error]     |                                                                                                ^\n[error]   2 | describe('ScrollProgressBar', () => {'  test('updates progress width when scrolling', () => {'    Object.defineProperty(window, 'innerHeight', {'      value: 1000,\n[error]   3 |       writable: true,\n[error]   4 |     });\n[error] __tests__/components/WhitepaperPreviewPanel.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import '@testing-library/jest-dom';'import WhitepaperPreviewPanel from '@/components/WhitepaperPreviewPanel';'\n[error]     |                                                            ^\n[error]   2 | // Mock react-markdown\n[error]   3 | jest.mock('react-markdown', () => {'  const MockMarkdown = (props: { children: React.ReactNode }) => <div data-testid=\"mock-markdown\">{props.children}</div>;\"  MockMarkdown.displayName = 'MockMarkdown';'  return MockMarkdown;\n[error]   4 | });\n[error] __tests__/components/WhitepaperSectionEditor.test.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import '@testing-library/jest-dom';'import WhitepaperSectionEditor from '@/components/WhitepaperSectionEditor';'import { supabase } from '@/integrations/supabase/client'; // To mock its functions'\n[error]     |                                                                                ^\n[error]   2 | // Mock Supabase client\n[error]   3 | jest.mock('@/integrations/supabase/client', () => ({'  supabase: {\n[error]   4 |     functions: {\n[error] __tests__/context/AuthProvider.test.tsx: SyntaxError: ';' expected. (1:74)\n[error] > 1 | import React from 'react';'import { render, act, screen, waitFor } from '@testing-library/react';'import { AuthProvider, useAuth } from '@/context/auth/AuthProvider';'import * as authService from '@/services/authService';'import { toast as originalToast } from '@/hooks/use-toast'; // Import original toast'import { supabase } from '@/integrations/supabase/client';'\n[error]     |                                                                          ^\n[error]   2 | // Mock services and hooks\n[error]   3 | jest.mock('@/services/authService');'jest.mock('@/hooks/use-toast', () => ({'  toast: jest.fn(),\n[error]   4 | }));\n[error] __tests__/context/WalletContext.test.tsx: SyntaxError: ';' expected. (1:76)\n[error] > 1 | import React from 'react';'import { render, screen, act, fireEvent } from '@testing-library/react';'import '@testing-library/jest-dom';'\n[error]     |                                                                            ^\n[error]   2 | // --- START OF MOCK SETUP ---\n[error]   3 |\n[error]   4 | // Define valid mock Ethereum addresses;\n[error] __tests__/controllers/authController.test.js: SyntaxError: Unexpected token (4:78)\n[error]   2 | ;\n[error]   3 | import bcrypt from 'bcrypt';'import jwt from 'jsonwebtoken';'// Removed unused import: createClient;\n[error] > 4 | import User from '../models/User';'import { loginUser, registerUser } from '../../server/controllers/authController';'\n[error]     |                                                                              ^\n[error]   5 | jest.mock('../../server/models/User');'jest.mock('bcryptjs');'jest.mock('jsonwebtoken');'\n[error]   6 | describe('authController.loginUser', () => {'  const req = { body: { email: 'test@example.com', password: 'Password123' } };'  const res = { status: jest.fn().mockReturnThis(), json: jest.fn() };\n[error]   7 |\n[error] __tests__/equipment-detail-fixes.test.ts: SyntaxError: Unterminated string literal. (2:120)\n[error]   1 | // Test file to verify equipment details page fixes\n[error] > 2 | describe('Equipment Details Page Fixes', () => {'  // Test the data conversion function that was added to fix the crash\n[error]     |                                                                                                                        ^\n[error]   3 |   test('convertProductListingToEquipmentDetails converts data correctly', () => {'    // Mock ProductListing data (what's stored in sessionStorage)'    const productListing = {\n[error]   4 |       id: 'datacenter-eq-1','      title: 'NVIDIA A100 GPU Server','      description: 'High-performance AI training server','      category: 'AI Hardware','      price: 85000,\n[error]   5 |       currency: '$','      brand: 'NVIDIA','      specifications: ['8x A100 GPUs', '2TB HBM2e', 'NVLink'],'      tags: ['AI', 'Machine Learning', 'GPU'],'      availability: 'In Stock','      rating: 4.9,\n[error] __tests__/equipment-details-fix.test.js: SyntaxError: Unexpected token (4:44)\n[error]   2 | describe('Equipment Details Page - Issue #6 Fix', () => {'  test('data conversion from ProductListing to EquipmentDetails works', () => {'    // This is the core fix - converting sessionStorage data properly\n[error]   3 |     const productListing = {\n[error] > 4 |       id: 'datacenter-eq-1','      title: 'NVIDIA A100 GPU Server', // ProductListing uses 'title''      description: 'High-performance AI training server','      category: 'AI Hardware','      price: 85000,\n[error]     |                                            ^\n[error]   5 |       availability: 'In Stock','      brand: 'NVIDIA','      rating: 4.9,\n[error]   6 |       reviewCount: 27\n[error]   7 |     };\n[error] __tests__/equipment-page-fixes.test.ts: SyntaxError: Unterminated string literal. (2:83)\n[error]   1 | // Test file to verify equipment page fixes;\n[error] > 2 | import { generateDatacenterEquipment } from '@/utils/equipmentAutoFeedAlgorithm';'\n[error]     |                                                                                   ^\n[error]   3 | describe('Equipment Page Fixes', () => {'  test('generateDatacenterEquipment produces consistent results with same seed', () => {'    const seed = 'test-seed';'    const count = 10;\n[error]   4 |     const startId = 1;\n[error]   5 |\n[error] __tests__/hooks/use-toast.test.tsx: SyntaxError: ';' expected. (1:64)\n[error] > 1 | import { toast } from '@/hooks/use-toast';'import { vi } from 'vitest';'\n[error]     |                                                                ^\n[error]   2 | // Mock sonner\n[error]   3 | vi.mock('sonner', () => ({'  toast: {\n[error]   4 |     error: vi.fn(),\n[error] __tests__/hooks/useAuthOperations.test.tsx: SyntaxError: ';' expected. (1:97)\n[error] > 1 | import { describe, it, expect, beforeEach, vi } from 'vitest';'import { renderHook, act } from '@testing-library/react';'import { useAuthOperations } from '@/hooks/useAuthOperations';'import { supabase as supabaseClientModule } from '@/integrations/supabase/client';'import { showApiError } from '@/utils/apiErrorHandler';'import { toast } from '@/hooks/use-toast';'import * as referralUtils from '@/utils/referralUtils';'// Removed unused authUtils import // Mock Supabase;vi.mock('@/integrations/supabase/client', () => ({ // Changed vi.mock to vi.mock'  supabase: {\n[error]     |                                                                                                 ^\n[error]   2 |     auth: {\n[error]   3 |       signInWithPassword: vi.fn(), // Changed vi.fn to vi.fn\n[error]   4 |       signUp: vi.fn(), // Changed vi.fn to vi.fn\n[error] __tests__/hooks/useSavedTalents.test.tsx: SyntaxError: ';' expected. (1:97)\n[error] > 1 | import { vi, describe, it, expect, beforeEach } from 'vitest';'import { renderHook, act } from '@testing-library/react';'import { useSavedTalents } from '@/hooks/talent/useSavedTalents';'import { supabase } from '@/integrations/supabase/client';'import { showApiError } from '@/utils/apiErrorHandler';'import { toast } from '@/hooks/use-toast'; // Assuming direct toast usage for non-error cases'// Removed unused useRouter import\n[error]     |                                                                                                 ^\n[error]   2 | ;\n[error]   3 | import { supabase as supabaseClientModule } from '@/integrations/supabase/client';'\n[error]   4 | // Mocks\n[error] __tests__/hooks/useTalentQuotes.test.tsx: SyntaxError: ';' expected. (1:79)\n[error] > 1 | import { describe, it, expect, beforeEach } from 'vitest';'import React from 'react';'import { renderHook, act } from '@testing-library/react';'import { QueryClient, QueryClientProvider } from '@tanstack/react-query';'import { useTalentQuotes } from '@/hooks/useTalentQuotes';'import { quoteRequestService } from '@/services/quoteRequestService';'import { showApiError } from '@/utils/apiErrorHandler';'import { useAuth } from '@/hooks/useAuth';'import { useToast } from '@/hooks/use-toast';'\n[error]     |                                                                               ^\n[error]   2 | // Mocks\n[error]   3 | jest.mock('next/config', () => ({ // Changed vi.mock to jest.mock'  default: () => ({\n[error]   4 |     publicRuntimeConfig: {\n[error] __tests__/hooks/useUndoRedo.test.tsx: SyntaxError: ';' expected. (1:88)\n[error] > 1 | import { renderHook, act } from '@testing-library/react';'import { useUndoRedo } from '@/hooks/useUndoRedo';'\n[error]     |                                                                                        ^\n[error]   2 | describe('useUndoRedo', () => {'  it('tracks history and performs undo/redo', () => {'    const { _result } = renderHook(() => useUndoRedo('a'));'\n[error]   3 |     act(() => {\n[error]   4 |       result.current.set('b');'      result.current.set('c');'    });\n[error] __tests__/instrumentation.client.test.ts: SyntaxError: ';' expected. (1:64)\n[error] > 1 | import { register } from '../sentry';'import * as Sentry from '@sentry/nextjs';'import { Integrations } from \"@sentry/tracing\"; // Import this if it's used in the Sentry.init call options'\n[error]     |                                                                ^\n[error]   2 | describe('Sentry Initialization', () => {'  let _consoleWarnSpy: jest.SpyInstance;\n[error]   3 |   let sentryInitSpy: jest.SpyInstance;\n[error]   4 |   const originalEnv = { ...process.env }; // Shallow copy to preserve original values\n[error] __tests__/integration/authFlow.test.js: SyntaxError: Unterminated string constant. (4:43)\n[error]   2 |\n[error]   3 | /** @jest-environment node */;\n[error] > 4 | import { expect } from '@playwright/test';'// Note: test and createClient are imported but not used in this specific test file\n[error]     |                                           ^\n[error]   5 | // eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error]   6 | const jwt = require('jsonwebtoken');'// eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error]   7 | const bcrypt = require('bcryptjs');'// eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error] __tests__/integration/categoryNavigationAndDisplay.test.tsx: SyntaxError: ';' expected. (1:74)\n[error] > 1 | import React from 'react';'import { render, screen, waitFor, act } from '@testing-library/react';'import userEvent from '@testing-library/user-event';'import fetchMock from 'jest-fetch-mock';'\n[error]     |                                                                          ^\n[error]   2 | // Mock next/router;\n[error]   3 | const mockRouterPush = jest.fn();\n[error]   4 | const mockRouterQuery = { slug: '' };'jest.mock('next/router', () => ({'  useRouter: () => ({\n[error] __tests__/integration/ErrorBoundary.test.tsx: SyntaxError: ';' expected. (1:76)\n[error] > 1 | import React from 'react';'import { render, screen, act, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import App from '../../src/App';'import { vi } from 'vitest';'import type { ReactNode } from 'react'; // Import necessary types, removed ErrorInfo'import { captureException } from '../../src/utils/sentry'; // Import the mocked captureException'\n[error]     |                                                                            ^\n[error]   2 | // Mock Sentry's captureException to avoid actual Sentry calls and console noise during tests'// This is done above the import now, standard practice for vi.mock;vi.mock('../../src/utils/sentry', () => ({'  captureException: vi.fn(),\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/integration/registerPersistence.test.js: SyntaxError: Unterminated string constant. (3:59)\n[error]   1 |\n[error]   2 | ;\n[error] > 3 | import { MongoMemoryServer } from 'mongodb-memory-server';'/** @jest-environment node */;\n[error]     |                                                           ^\n[error]   4 | import mongoose from 'mongoose';'\n[error]   5 | process.env.JWT_SECRET = 'testsecret';';\n[error]   6 | import { registerUser } from '../../server/controllers/authController';'import User from '../../server/models/User';';\n[error] __tests__/integration/signupAndLoginFlow.test.ts: SyntaxError: ';' expected. (6:82)\n[error]   4 |   return { success: true, user: userData };\n[error]   5 | };\n[error] > 6 | import { registerUser } from '@/services/authService';'import { supabase } from '@/integrations/supabase/client'; // Path to ensure jest.mock works'import fetchMock from 'jest-fetch-mock';'import axios from 'axios'; // Import axios to be mocked'\n[error]     |                                                                                  ^\n[error]   7 | fetchMock.enableMocks();\n[error]   8 |\n[error]   9 | // --- Mocks Setup ---\n[error] __tests__/integration/topLevelRoutes.test.tsx: SyntaxError: ';' expected. (23:55)\n[error]   21 | ;\n[error]   22 | const COMMUNITY_FORUM_TEST_ID = \"community-forum-page\"; // Assume this exists on the forum page\"\n[error] > 23 | describe('Top-Level Navigation Routes', () => {'  it('should render the Home page correctly and not the Community Forum', async () => {'    // Assuming src/pages/Home.tsx (via pages/index.tsx) has a unique element like <h1 data-testid=\"home-page-title\">Welcome to Zion</h1>\"    // For this example, let's assume a more generic check for text that should be on the home page.'    // A real test would use a more robust selector.\n[error]      |                                                       ^\n[error]   24 |     await checkPageContent('/', /Welcome to Zion/i, COMMUNITY_FORUM_TEST_ID);'    // In a real test, you'd also check for a unique element from the actual Home component.'  });\n[error]   25 |\n[error]   26 |   it('should render the About page correctly and not the Community Forum', async () => {'    // src/pages/About.tsx contains \"Our Mission\"\"    await checkPageContent('/about', /Our Mission/i, COMMUNITY_FORUM_TEST_ID);'  });\n[error] __tests__/integration/WalletInitializationFailure.test.tsx: SyntaxError: ';' expected. (2:69)\n[error]   1 | // __tests__/integration/WalletInitializationFailure.test.tsx;\n[error] > 2 | import React from 'react';'import { render, screen, waitFor } from '@testing-library/react';'import App from '@/App';'import { MemoryRouter } from 'react-router-dom';'import '@testing-library/jest-dom';'import { vi } from 'vitest';'\n[error]     |                                                                     ^\n[error]   3 | // Store original import.meta if it exists for cleanup;\n[error]   4 | const originalImportMeta = globalThis.importMeta;\n[error]   5 |\n[error] __tests__/layout/AppHeader.test.tsx: SyntaxError: ';' expected. (1:92)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor as _waitFor } from '@testing-library/react';'import { AppHeader } from '@/layout/AppHeader'; // Adjust path as necessary'import { AuthProviderValue } from '@/context/auth/AuthContext'; // Adjust path'import { useAuth } from '@/hooks/useAuth'; // Adjust path'import { useMessaging } from '@/context/MessagingContext'; // Adjust path'import { useRouter } from 'next/router'; // Mock this'\n[error]     |                                                                                            ^\n[error]   2 | // Mock next/router\n[error]   3 | jest.mock('next/router', () => ({'  useRouter: jest.fn(),\n[error]   4 | }));\n[error] __tests__/layout/AppLayout.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import { MemoryRouter, Routes, Route } from 'react-router-dom';'import { AppLayout } from '@/layout/AppLayout';'import { useAuth } from '@/hooks/useAuth';'import { useGlobalLoader } from '@/context/GlobalLoaderContext';'\n[error]     |                                                            ^\n[error]   2 | jest.mock('@/hooks/useAuth');'jest.mock('@/context/GlobalLoaderContext');'jest.mock('@/layout/PrimaryNav', () => ({ PrimaryNav: () => <div data-testid=\"header\" /> }));\"jest.mock('@/components/Footer', () => ({ Footer: () => <div data-testid=\"footer\" /> }));\"jest.mock('@/components/EmailVerificationBanner', () => {'  const MockBanner = (props: any) => <div data-testid=\"verify-banner\">{props.userEmail}</div>;\"  MockBanner.displayName = 'MockEmailVerificationBanner';'  return MockBanner;\n[error]   3 | });\n[error]   4 | ;\n[error] __tests__/lib/axios.test.ts: SyntaxError: ';' expected. (1:51)\n[error] > 1 | import axios from 'axios';'import fetchMock from 'jest-fetch-mock';'import { safeStorage } from '@/utils/safeStorage';'\n[error]     |                                                   ^\n[error]   2 | jest.mock('@/utils/safeStorage', () => ({'  safeStorage: {\n[error]   3 |     getItem: jest.fn(),\n[error]   4 |     setItem: jest.fn(),\n[error] __tests__/LoginFormRtl.test.tsx: SyntaxError: ';' expected. (1:104)\n[error] > 1 | import { describe, it, expect, vi } from 'vitest';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { LoginForm } from '@/components/auth/login';'import { useAuth } from '@/hooks/useAuth';'\n[error]     |                                                                                                        ^\n[error]   2 | vi.mock('@/hooks/useAuth');'\n[error]   3 | describe('LoginForm error handling', () => {'  it('shows inline error message when login fails', async () => {'    const loginMock = vi.fn().mockResolvedValue({ error: 'Invalid email or password' });'    (useAuth as any).mockReturnValue({ isLoading: false, login: loginMock });\n[error]   4 |\n[error] __tests__/pages/404.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import Custom404 from '../../pages/404';'\n[error]     |                                                            ^\n[error]   2 | describe('Custom404 Page', () => {'  it('renders the 404 heading', () => {'    render(<Custom404 />);\n[error]   3 |     expect(screen.getByText('404 – Page Not Found')).toBeInTheDocument();'  });\n[error]   4 | });\n[error] __tests__/pages/Categories.test.tsx: SyntaxError: ';' expected. (1:69)\n[error] > 1 | import React from 'react';'import { render, screen, waitFor } from '@testing-library/react';'import Categories from '@/src/pages/Categories'; // Corrected import path'import { CATEGORIES } from '@/data/categories';'import useSWR from 'swr';'import { Category } from '@/data/categories'; // Import Category type'\n[error]     |                                                                     ^\n[error]   2 | // Mock next/router\n[error]   3 | jest.mock('next/router', () => ({'  useRouter: () => ({\n[error]   4 |     query: {},\n[error] __tests__/pages/categoriesGetStaticProps.test.ts: SyntaxError: ';' expected. (1:82)\n[error] > 1 | import { getStaticProps } from '@/pages/Categories';'import { CATEGORIES } from '@/data/categories';'import fetchMock from 'fetch-mock';'\n[error]     |                                                                                  ^\n[error]   2 | // Mock console methods;\n[error]   3 | let consoleLogSpy: jest.SpyInstance;\n[error]   4 | let consoleErrorSpy: jest.SpyInstance;\n[error] __tests__/pages/Contact.test.tsx: SyntaxError: ';' expected. (1:69)\n[error] > 1 | import React from 'react';'import { render, screen, waitFor } from '@testing-library/react';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import Contact from '@/src/pages/Contact';'\n[error]     |                                                                     ^\n[error]   2 | // Mock heavy child components\n[error]   3 | jest.mock('@/components/ChatAssistant', () => ({'  ChatAssistant: () => <div data-testid=\"chat-assistant\" />,\"}));\n[error]   4 |\n[error] __tests__/pages/EquipmentDetail.test.tsx: SyntaxError: ';' expected. (2:76)\n[error]   1 | // __tests__/pages/EquipmentDetail.test.tsx;\n[error] > 2 | import React from 'react';'import { render, screen, fireEvent, act } from '@testing-library/react';'import '@testing-library/jest-dom';'import EquipmentDetail, { SAMPLE_EQUIPMENT } from '@/src/pages/EquipmentDetail';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import { useRouter } from 'next/router';'import mockNextRouter from 'next-router-mock';'import { useAuth } from '@/hooks/useAuth';'import { useCart } from '@/context/CartContext';'\n[error]     |                                                                            ^\n[error]   3 | // Mock functions need to be declared before they are used in mock factories;\n[error]   4 | const mockNavigate = jest.fn();\n[error]   5 | const mockDispatch = jest.fn();\n[error] __tests__/pages/EquipmentPage.test.tsx: SyntaxError: ';' expected. (1:69)\n[error] > 1 | import React from 'react';'import { render, screen, waitFor } from '@testing-library/react';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import EquipmentPage from '@/src/pages/EquipmentPage';'import { QueryClient, QueryClientProvider } from '@tanstack/react-query';'import apiClient from '@/services/apiClient';'import { toast } from '@/hooks/use-toast';'\n[error]     |                                                                     ^\n[error]   2 | // Mock child components and hooks\n[error]   3 | jest.mock('@/components/DynamicListingPage', () => ({'  DynamicListingPage: (props: any) => (\n[error]   4 |     <div data-testid=\"dynamic-listing-page\">\"      <h2>{props.title}</h2>\n[error] __tests__/pages/forgot-password.api-error.test.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import '@testing-library/jest-dom';'import axios from 'axios';'import * as Sentry from '@sentry/nextjs';'import ForgotPasswordPage from '../../pages/forgot-password';'\n[error]     |                                                                                ^\n[error]   2 | jest.mock('axios');'jest.mock('@sentry/nextjs', () => ({'  captureException: jest.fn(),\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/pages/forgot-password.test.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import '@testing-library/jest-dom';'import ForgotPasswordPage from '../../pages/forgot-password'; // Adjust path if needed'import { forgotPassword } from '../../src/services/auth'; // Adjust path if needed'\n[error]     |                                                                                ^\n[error]   2 | // Mock the auth service\n[error]   3 | jest.mock('../../src/services/auth', () => ({'  forgotPassword: jest.fn(),\n[error]   4 | }));\n[error] __tests__/pages/ForgotPassword.test.jsx: SyntaxError: Leading decorators must be attached to a class declaration. (1:88)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import '@testing-library/jest-dom';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import ForgotPassword from '../../src/pages/ForgotPassword'; // Adjust path as necessary'// Mock the auth service\n[error]     |                                                                                        ^\n[error]   2 | // jest.mock('../../src/services/auth', () => ({'//   forgotPassword: jest.fn(),\n[error]   3 | // }));\n[error]   4 |\n[error] __tests__/pages/FounderBot.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import FounderBotPage from '@/src/pages/FounderBot';'\n[error]     |                                                            ^\n[error]   2 | jest.mock('@/components/ChatAssistant', () => ({'  ChatAssistant: () => <div data-testid=\"chat-assistant\" />\"}));\n[error]   3 |\n[error]   4 | jest.mock('@/components/ui/button', () => ({'  Button: ({ children, ...props }) => <button {...props}>{children}</button>\n[error] __tests__/pages/index.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import IndexPage, { getServerSideProps, fetchHomeData } from '../../pages/index';'import GlobalErrorBoundary from '@/components/GlobalErrorBoundary';'import { useRouter } from 'next/router';'\n[error]     |                                                            ^\n[error]   2 | jest.mock('@sentry/nextjs', () => ({'  captureException: jest.fn(),\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/pages/ListingDetail.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import ListingPage from '../../pages/marketplace/listing/[slug]';'import type { ProductListing } from '@/types/listings';'\n[error]     |                                                            ^\n[error]   2 | test('render with listing shows title', () => {'  const listing: ProductListing = {\n[error]   3 |     id: 'test-id','    title: 'Test Listing','    description: 'desc','    category: 'cat','    price: 10,\n[error]   4 |     currency: '$','    tags: [],\n[error] __tests__/pages/login.test.tsx: SyntaxError: ';' expected. (1:69)\n[error] > 1 | import React from 'react';'import { render, screen, waitFor } from '@testing-library/react';'import userEvent from '@testing-library/user-event';'import Login from '@/src/pages/auth/login'; // Assuming Login page is now at pages/auth/login.tsx'import { useRouter } from 'next/router';'// useAuth hook is mocked below - no import needed;\n[error]     |                                                                     ^\n[error]   2 | import { safeStorage } from '@/utils/safeStorage'; // To be mocked'import * as Sentry from '@sentry/nextjs'; // To be mocked'import { fireEvent as fireAnalyticsEvent } from '@/lib/analytics'; // To be mocked'import '@testing-library/jest-dom';'\n[error]   3 | // Mock next/router\n[error]   4 | jest.mock('next/router', () => ({'  useRouter: jest.fn(() => ({\n[error] __tests__/pages/LoginFallbackUI.test.tsx: SyntaxError: ';' expected. (1:65)\n[error] > 1 | import React from 'react';'import { render, screen, act } from '@testing-library/react';'import '@testing-library/jest-dom';'import Login from '@/src/pages/Login'; // Target the correct Login page'import { useAuth } from '@/context/auth/AuthProvider'; // Correct path to mock'import { useRouter } from 'next/router';'\n[error]     |                                                                 ^\n[error]   2 | // Mock next/router\n[error]   3 | jest.mock('next/router', () => ({'  useRouter: jest.fn(),\n[error]   4 | }));\n[error] __tests__/pages/LoginRoute.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import AuthRoutes from '@/routes/AuthRoutes';'\n[error]     |                                                            ^\n[error]   2 | jest.mock('@/components/auth/login', () => ({'  LoginForm: () => (\n[error]   3 |     <form>\n[error]   4 |       <label htmlFor=\"email-input\">Email</label>\"      <input id=\"email-input\" />\"    </form>\n[error] __tests__/pages/loginSubmit.test.tsx: SyntaxError: ';' expected. (1:97)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import Login from '@/src/pages/Login';'import { useRouter } from 'next/router';'import mockNextRouter from 'next-router-mock';'\n[error]     |                                                                                                 ^\n[error]   2 |  \n[error]   3 | jest.mock('next/router', () => mockNextRouter);'\n[error]   4 | // Mock Sentry and toast to avoid network / UI noise\n[error] __tests__/pages/OAuthCallback.test.tsx: SyntaxError: ';' expected. (1:86)\n[error] > 1 | import { render, waitFor } from '@testing-library/react';'import OAuthCallback from '@/src/pages/OAuthCallback';'import { useRouter } from 'next/router';'import { safeStorage } from '@/utils/safeStorage';'import { useAuth } from '@/hooks/useAuth';'\n[error]     |                                                                                      ^\n[error]   2 | jest.mock('next/router', () => ({'  useRouter: jest.fn(),\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/pages/ResetPassword.test.jsx: SyntaxError: Leading decorators must be attached to a class declaration. (1:88)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import '@testing-library/jest-dom';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import { useRouter } from 'next/router';'import ResetPassword from '../../src/pages/ResetPassword'; // Adjust path as necessary'// import * as authService from '../../src/services/auth'; // Adjust path'\n[error]     |                                                                                        ^\n[error]   2 | // Mock react-router-dom's useParams and useNavigate'// const mockNavigate = jest.fn();\n[error]   3 | // jest.mock('react-router-dom', () => ({'//   ...jest.requireActual('react-router-dom'),'//   useParams: () => ({ uid: 'testuid', token: 'testtoken' }),'//   useNavigate: () => mockNavigate,\n[error]   4 | // }));\n[error] __tests__/pages/SignupRender.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import Signup from '@/src/pages/Signup';'\n[error]     |                                                            ^\n[error]   2 | describe('Signup page', () => {'  it('renders all form fields', () => {'    render(\n[error]   3 |       <MemoryRouterProvider>\n[error]   4 |         <Signup />\n[error] __tests__/pages/talent/[id].test.tsx: SyntaxError: ';' expected. (1:69)\n[error] > 1 | import React from 'react';'import { render, screen, waitFor } from '@testing-library/react';'// import { vi } from 'vitest'; // Removed Vitest import'import TalentPage from '@/src/pages/talent/[id]';'import { TALENT_PROFILES } from '@/data/talentData'; // Adjust path if necessary'import { useRouter } from 'next/router'; // Keep Next.js import for mocking';// Mock next/router\n[error]     |                                                                     ^\n[error]   2 | jest.mock('next/router', () => ({'  useRouter: jest.fn(),\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/pages/TalentDirectory.test.tsx: SyntaxError: ';' expected. (1:69)\n[error] > 1 | import React from 'react';'import { render, screen, waitFor } from '@testing-library/react';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import TalentDirectory from '@/src/pages/TalentDirectory';'\n[error]     |                                                                     ^\n[error]   2 | // Mock child components and hooks\n[error]   3 | jest.mock('@/components/talent/FilterSidebar', () => ({ FilterSidebar: (_props: any) => <div data-testid=\"filter-sidebar\">Filter Sidebar</div> }));\"jest.mock('@/components/talent/TalentResults', () => ({'  TalentResults: (props: any) => (\n[error]   4 |     <div data-testid=\"talent-results\">\"      {props.talents.map((talent: any) => (\n[error] __tests__/pages/WhitepaperGeneratorPage.test.tsx: SyntaxError: ';' expected. (1:85)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor, act } from '@testing-library/react';'import '@testing-library/jest-dom';'import WhitepaperGeneratorPage from '@/src/pages/WhitepaperGeneratorPage';'import { supabase } from '@/integrations/supabase/client';'import * as recharts from 'recharts'; // For mocking ResponsiveContainer'\n[error]     |                                                                                     ^\n[error]   2 | // --- Mocks ---\n[error]   3 | jest.mock('@/integrations/supabase/client', () => ({'  supabase: {\n[error]   4 |     functions: {\n[error] __tests__/pages/WhitepaperViewPage.test.tsx: SyntaxError: ';' expected. (1:69)\n[error] > 1 | import React from 'react';'import { render, screen, waitFor } from '@testing-library/react';'import '@testing-library/jest-dom';'import { useRouter } from 'next/router';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import mockNextRouter from 'next-router-mock';'import WhitepaperViewPage from '@/src/pages/WhitepaperViewPage';'import { supabase } from '@/integrations/supabase/client';'import WhitepaperPreviewPanel from '@/components/WhitepaperPreviewPanel';'\n[error]     |                                                                     ^\n[error]   2 | // Mock dependencies\n[error]   3 | jest.mock('next/router', () => mockNextRouter);'jest.mock('next/link', () => ({'  __esModule: true,\n[error]   4 |   default: ({ children, href }: { children: React.ReactNode; href: string }) => <a href={href}>{children}</a>,\n[error] __tests__/profile-page.test.tsx: SyntaxError: ';' expected. (2:71)\n[error]   1 | // import Profile from '@/src/pages/Profile'; // FIXED: Module not found\n[error] > 2 | test('saves updated profile', async () => {'  const mockUser = { id: '1', name: 'Jane', bio: '', avatarUrl: '', points: 0 };'  global.fetch = vi.fn().mockResolvedValue({\n[error]     |                                                                       ^\n[error]   3 |     json: () => Promise.resolve({ ...mockUser, name: 'New' }),'  }) as any;\n[error]   4 |\n[error]   5 |   render(<Profile user={mockUser} orders={[]} />);\n[error] __tests__/routes/backendRoutes.test.js: SyntaxError: Unterminated string constant. (3:36)\n[error]   1 | /** @jest-environment node */\n[error]   2 | // eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error] > 3 | const express = require('express');'// eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error]     |                                    ^\n[error]   4 | const request = require('supertest');'\n[error]   5 | // eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error]   6 | const authRoutes = require('../../server/routes/auth');'// eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error] __tests__/sdk/signupWithEmail.test.ts: SyntaxError: Identifier expected. (1:97)\n[error] > 1 | import { describe, it, expect, vi, afterEach } from 'vitest';'import { signupWithEmail } from '../../sdk/js/auth/index.js';'\n[error]     |                                                                                                 ^\n[error]   2 | describe('signupWithEmail', () => {'  afterEach(() => {\n[error]   3 |     vi.restoreAllMocks();\n[error]   4 |   });\n[error] __tests__/signup-auto-login.test.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { AuthProvider } from '@/context/auth/AuthProvider';'import { useAuth } from '@/hooks/useAuth';'import { vi } from 'vitest';'\n[error]     |                                                                                ^\n[error]   2 | // Capture onAuthStateChange callback;\n[error]   3 | let authCallback: any;\n[error]   4 |\n[error] __tests__/signup-duplicate-email.test.tsx: SyntaxError: Unterminated string literal. (3:58)\n[error]   1 | // import Signup from '@/src/pages/Signup'; // FIXED: Module not found\n[error]   2 | // Mock Next.js router\n[error] > 3 | jest.mock('next/router', () => ({'  useRouter: jest.fn(),\n[error]     |                                                          ^\n[error]   4 | }));\n[error]   5 |\n[error]   6 | // Mock axios\n[error] __tests__/signup.test.tsx: SyntaxError: ';' expected. (1:107)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import Signup from '@/src/pages/Signup';'import * as toastHook from '@/hooks/use-toast';'import { useRouter } from 'next/router';'import { vi, expect, test } from 'vitest';'import mockNextRouter from 'next-router-mock';'\n[error]     |                                                                                                           ^\n[error]   2 | vi.mock('@/hooks/useAuth', () => ({'  useAuth: () => ({\n[error]   3 |     loginWithGoogle: vi.fn(),\n[error]   4 |     loginWithFacebook: vi.fn(),\n[error] __tests__/test-utils.tsx: SyntaxError: ';' expected. (1:67)\n[error] > 1 | import React from 'react';'import type { FC, ReactElement } from 'react';'import { render } from '@testing-library/react';'import type { RenderOptions } from '@testing-library/react';'import { QueryClient, QueryClientProvider } from '@tanstack/react-query';'import { Provider as ReduxProvider } from 'react-redux';'import { AuthProvider } from '@/context/auth/AuthProvider';'import { WhitelabelProvider } from '@/context/WhitelabelContext';'import { I18nextProvider } from 'react-i18next';'import { WalletProvider } from '@/context/WalletContext';'import { CartProvider } from '@/context/CartContext';'import { AnalyticsProvider } from '@/context/AnalyticsContext';'import { ThemeProvider } from '@/components/ThemeProvider'; // Assuming ThemeProvider is a component'import { ErrorProvider } from '@/context/ErrorContext';'import { MemoryRouterProvider } from 'next-router-mock/MemoryRouterProvider';'import { store } from '@/store'; // Fix: Use named import instead of default import'import i18n from '@/i18n'; // Assuming this is the correct path to i18n config'\n[error]     |                                                                   ^\n[error]   2 | // Initialize a new QueryClient for each test run to ensure test isolation;\n[error]   3 | const createTestQueryClient = () => new QueryClient({\n[error]   4 |   defaultOptions: {\n[error] __tests__/utils/apiErrorHandler.test.ts: SyntaxError: ';' expected. (1:109)\n[error] > 1 | import { describe, it, expect, beforeEach, vi } from 'vitest';'import { parseApiError, showApiError } from '@/utils/apiErrorHandler';'import { toast } from '@/hooks/use-toast';'\n[error]     |                                                                                                             ^\n[error]   2 | // Mock the toast hook using vitest utilities\n[error]   3 | vi.mock('@/hooks/use-toast', () => ({'  toast: vi.fn(),\n[error]   4 | }));\n[error] __tests__/utils/currency.test.ts: SyntaxError: ';' expected. (1:129)\n[error] > 1 | import { describe, it, expect } from 'vitest';'import { getCurrencyForLocale, convertUSDToCurrency, formatPriceByLocale } from '@/utils/currency';'\n[error]     |                                                                                                                                 ^\n[error]   2 | describe('currency utilities', () => {'  it('maps locales to currencies', () => {'    expect(getCurrencyForLocale('en-US')).toBe('USD');'    expect(getCurrencyForLocale('fr-FR')).toBe('EUR');'    expect(getCurrencyForLocale('pt-BR')).toBe('BRL');'  });\n[error]   3 |\n[error]   4 |   it('converts USD amounts using exchange rates', () => {'    expect(convertUSDToCurrency(10, 'EUR')).toBeCloseTo(9.3);'    expect(convertUSDToCurrency(10, 'BRL')).toBeCloseTo(50);'  });\n[error] __tests__/utils/validateEnv.test.ts: SyntaxError: Unterminated string literal. (5:75)\n[error]   3 | // NOTE: DO NOT add a static import for checkEssentialEnvVars here.;// It needs to be dynamically imported within each test after mocks are applied.\n[error]   4 | ;\n[error] > 5 | import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';'\n[error]     |                                                                           ^\n[error]   6 | // Store original process.env;\n[error]   7 | const ORIGINAL_ENV = process.env;\n[error]   8 |\n[error] .github/workflows/codex-fix.yml: SyntaxError: Plain value cannot start with reserved character ` (90:1)\n[error]   88 |             });\n[error]   89 |             core.setFailed('Codex script failed, notified issue.'); // Optionally fail the workflow job\n[error] > 90 | ```\n[error]      | ^^^\n[error]   91 |\n[error] .github/workflows/generate-tests.yml: SyntaxError: Nested mappings are not allowed in compact mappings (80:15)\n[error]   78 |           done\n[error]   79 |\n[error] > 80 |       - name: Commit and push generated tests (Optional: Create PR instead)\"Commit and push generated tests (Optional: Create PR instead)\"\n[error]      |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 81 |         if: steps.changed_files.outputs.changed_files_list != '' # Only run if files were processed\n[error]      | ^\n[error]   82 |         run: |\n[error]   83 |           git config --global user.name 'github-actions[bot]'\n[error]   84 |           git config --global user.email 'github-actions[bot]@users.noreply.github.com'\n[error] .github/workflows/hourly-check.yml: SyntaxError: Nested mappings are not allowed in compact mappings (30:14)\n[error]   28 |       # Security Audit\n[error]   29 |       - name: Make security audit script executable\n[error] > 30 |         run: chmod +x ./scripts/hourly_audit.sh\n[error]      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 31 |\n[error]      | ^\n[error] > 32 |               - name: Install GitHub CLI\n[error]      | ^\n[error] > 33 |                 run: |\n[error]      | ^\n[error] > 34 |                   sudo apt-get update\n[error]      | ^\n[error] > 35 |                   sudo apt-get install -y gh\n[error]      | ^\n[error] > 36 |\n[error]      | ^\n[error] > 37 |               - name: Run hourly security audit script\n[error]      | ^\n[error] > 38 |                 env:\n[error]      | ^\n[error] > 39 |                   WEBHOOK_URL: ${{ secrets.MAINTENANCE_WEBHOOK_URL }}\n[error]      | ^\n[error] > 40 |                   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n[error]      | ^\n[error] > 41 |                   MAIN_DEV_BRANCH_ENV_VAR: 'main' # Or your main development branch e.g. 'develop'\n[error]      | ^\n[error] > 42 |                 run: ./scripts/hourly_audit.sh\n[error]      | ^\n[error] > 43 |\n[error]      | ^\n[error] > 44 |               # Performance Audit (Lighthouse)\n[error]      | ^\n[error] > 45 |       - name: Install Lighthouse CI\n[error]      | ^\n[error]   46 |         run: npm install -g @lhci/cli\n[error]   47 |\n[error]   48 |       - name: Build Next.js application\n[error] .github/workflows/netlify-status.yml: SyntaxError: Nested mappings are not allowed in compact mappings (12:13)\n[error]   10 |     steps:\n[error]   11 |       - name: Check Netlify Deploy Status\n[error] > 12 |         id: netlify_status\n[error]      |             ^^^^^^^^^^^^^^\n[error] > 13 |          - uses: actions/checkout@v2\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 14 |       - uses: amondnet/now-deployment@v2\n[error]      | ^\n[error]   15 |         with:\n[error]   16 |           netlify_token: ${{ secrets.NETLIFY_TOKEN }}\n[error]   17 |           site_id: \"ziontechgroup\"\n[error] .github/workflows/scheduled-audits.yml: SyntaxError: A collection cannot be both a mapping and a sequence (39:7)\n[error]   37 |       run: pip install pip-audit\n[error]   38 |\n[error] > 39 |     - name: Run Python Dependency Audit\n[error]      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 40 |       run: pip-audit -r backend/requirements.txt\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 41 |\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 42 |       - name: Run Dependency and Vulnerability Audits\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 43 |         run: bash ./scripts/security-audit.sh\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 44 |         # Runs 'npm run check-updates' and 'npm run audit-vulnerabilities'.\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 45 |\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 46 |       - name: Build application\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 47 |         run: npm run build\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 48 |\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 49 |       - name: Run Performance Checks\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 50 |         run: node scripts/performance-check.cjs | tee performance-report.log\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 51 |\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 52 |       - name: Upload Performance Report\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 53 |         uses: actions/upload-artifact@v4\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 54 |         with:\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 55 |           name: performance-report\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 56 |           path: performance-report.log\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 57 |\n[error]      | ^\n[error] .github/workflows/scheduled-test-retry.yml: SyntaxError: All collection items must start at the same column (1:1)\n[error] >  1 | name: Scheduled Tests with Retry\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] >  2 |\n[error]      | ^\n[error] >  3 | on:\n[error]      | ^\n[error] >  4 |   schedule:\n[error]      | ^\n[error] >  5 |     - cron: '*/30 * * * *' # Runs every 30 minutes\n[error]      | ^\n[error] >  6 |   workflow_dispatch: # Allows manual triggering\n[error]      | ^\n[error] >  7 |\n[error]      | ^\n[error] >  8 | jobs:\n[error]      | ^\n[error] >  9 |   test_and_retry:\n[error]      | ^\n[error] >  10 |     runs-on: ubuntu-latest\n[error]       | ^\n[error] >  11 |     steps:\n[error]       | ^\n[error] >  12 |       - name: Checkout repository\n[error]       | ^\n[error] >  13 |         uses: actions/checkout@v4\n[error]       | ^\n[error] >  14 |\n[error]       | ^\n[error] >  15 |       - name: Set up Node.js\n[error]       | ^\n[error] >  16 |         uses: actions/setup-node@v4\n[error]       | ^\n[error] >  17 |         with:\n[error]       | ^\n[error] >  18 |           node-version: '20.x'\n[error]       | ^\n[error] >  19 |           cache: 'npm'\n[error]       | ^\n[error] >  20 |\n[error]       | ^\n[error] >  21 |       - name: Install dependencies\n[error]       | ^\n[error] >  22 |         run: npm ci\n[error]       | ^\n[error] >  23 |\n[error]       | ^\n[error] >  24 |       - name: Run Jest Tests\n[error]       | ^\n[error] >  25 |         id: jest_tests_initial\n[error]       | ^\n[error] >  26 |         continue-on-error: true # Important to allow subsequent steps to evaluate outcome\n[error]       | ^\n[error] >  27 |         run: npm test -- --coverageReporters=json-summary --coverageReporters=text --coverageDirectory=\"./coverage-jest\"\n[error]       | ^\n[error] >  28 |\n[error]       | ^\n[error] >  29 |       - name: Run Playwright Integration Tests\n[error]       | ^\n[error] >  30 |         id: playwright_tests_initial\n[error]       | ^\n[error] >  31 |         continue-on-error: true # Important to allow subsequent steps to evaluate outcome\n[error]       | ^\n[error] >  32 |         run: npm run test:e2e\n[error]       | ^\n[error] >  33 |\n[error]       | ^\n[error] >  34 |       - name: Check for initial test failures\n[error]       | ^\n[error] >  35 |         id: initial_test_run_status\n[error]       | ^\n[error] >  36 |         if: steps.jest_tests_initial.outcome == 'failure' || steps.playwright_tests_initial.outcome == 'failure'\n[error]       | ^\n[error] >  37 |         run: echo \"Initial tests failed. Proceeding with rollback and retry.\"\n[error]       | ^\n[error] >  38 |\n[error]       | ^\n[error] >  39 |       - name: Rollback last commit\n[error]       | ^\n[error] >  40 |         if: steps.initial_test_run_status.conclusion == 'success' # Runs if the previous 'Check for initial test failures' step ran\n[error]       | ^\n[error] >  41 |         run: |\n[error]       | ^\n[error] >  42 |           git config user.name \"GitHub Actions Bot\"\n[error]       | ^\n[error] >  43 |           git config user.email \"actions-bot@github.com\"\n[error]       | ^\n[error] >  44 |           git reset HEAD~1 --hard\n[error]       | ^\n[error] >  45 |           echo \"Rolled back the last commit.\"\n[error]       | ^\n[error] >  46 |\n[error]       | ^\n[error] >  47 |       - name: Reinstall dependencies after rollback\n[error]       | ^\n[error] >  48 |         if: steps.initial_test_run_status.conclusion == 'success'\n[error]       | ^\n[error] >  49 |         run: npm ci\n[error]       | ^\n[error] >  50 |\n[error]       | ^\n[error] >  51 |       - name: Rerun Jest Tests after rollback\n[error]       | ^\n[error] >  52 |         id: jest_tests_retry\n[error]       | ^\n[error] >  53 |         if: steps.initial_test_run_status.conclusion == 'success'\n[error]       | ^\n[error] >  54 |         continue-on-error: true\n[error]       | ^\n[error] >  55 |         run: npm test -- --coverageReporters=json-summary --coverageReporters=text --coverageDirectory=\"./coverage-jest-retry\"\n[error]       | ^\n[error] >  56 |\n[error]       | ^\n[error] >  57 |       - name: Rerun Playwright Integration Tests after rollback\n[error]       | ^\n[error] >  58 |         id: playwright_tests_retry\n[error]       | ^\n[error] >  59 |         if: steps.initial_test_run_status.conclusion == 'success'\n[error]       | ^\n[error] >  60 |         continue-on-error: true\n[error]       | ^\n[error] >  61 |         run: npm run test:e2e\n[error]       | ^\n[error] >  62 |\n[error]       | ^\n[error] >  63 |       - name: Check for retry test failures\n[error]       | ^\n[error] >  64 |         id: retry_test_run_status\n[error]       | ^\n[error] >  65 |         # This step runs if the initial tests failed (meaning initial_test_run_status ran)\n[error]       | ^\n[error] >  66 |         # AND either of the retry tests also failed.\n[error]       | ^\n[error] >  67 |         if: steps.initial_test_run_status.conclusion == 'success' && (steps.jest_tests_retry.outcome == 'failure' || steps.playwright_tests_retry.outcome == 'failure')\n[error]       | ^\n[error] >  68 |         run: echo \"Tests failed after rollback and retry. Proceeding to isolate logs and create GitHub issue.\"\n[error]       | ^\n[error] >  69 |\n[error]       | ^\n[error] >  70 |       - name: Prepare logs for upload\n[error]       | ^\n[error] >  71 |         if: steps.retry_test_run_status.conclusion == 'success' # Runs if the previous 'Check for retry test failures' step ran\n[error]       | ^\n[error] >  72 |         run: |\n[error]       | ^\n[error] >  73 |           mkdir -p ./failure_logs/jest\n[error]       | ^\n[error] >  74 |           mkdir -p ./failure_logs/playwright\n[error]       | ^\n[error] >  75 |           # Copy Jest coverage/logs (assuming text report is in stdout/stderr, json-summary might be useful)\n[error]       | ^\n[error] >  76 |           # The main logs are captured by Actions itself. We'll focus on reports.\n[error]       | ^\n[error] >  77 |           if [ -d \"./coverage-jest-retry\" ]; then\n[error]       | ^\n[error] >  78 |             cp -r ./coverage-jest-retry ./failure_logs/jest/\n[error]       | ^\n[error] >  79 |           fi\n[error]       | ^\n[error] >  80 |           # Copy Playwright reports\n[error]       | ^\n[error] >  81 |           if [ -d \"./playwright-report\" ]; then\n[error]       | ^\n[error] >  82 |             cp -r ./playwright-report ./failure_logs/playwright/\n[error]       | ^\n[error] >  83 |           fi\n[error]       | ^\n[error] >  84 |           # Capture full test output from initial and retry phases for context\n[error]       | ^\n[error] >  85 |           echo \"Initial Jest Test Output:\" > ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  86 |           echo \"${{ steps.jest_tests_initial.outputs.stdout }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  87 |            ec\n[error]       | ^\n[error] >  88 | Initial Jest Test Error Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  89 |\n[error]       | ^\n[error] >  90 |           echo \"\n[error]       | ^\n[error] >  91 | Initial Playwright Test Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  92 |           echo \"${{ steps.playwright_tests_initial.outputs.stdout }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  93 |           echo \"\n[error]       | ^\n[error] >  94 | Initial Playwright Test Error Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  95 |           echo \"${{ steps.playwright_tests_initial.outputs.stderr }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  96 |\n[error]       | ^\n[error] >  97 |           if [ -d \"./coverage-jest-retry\" ]; then\n[error]       | ^\n[error] >  98 |             echo \"\n[error]       | ^\n[error] >  99 | Retry Jest Test Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 100 |             echo \"${{ steps.jest_tests_retry.outputs.stdout }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 101 |             echo \"\n[error]       | ^\n[error] > 102 | Retry Jest Test Error Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 103 |             echo \"${{ steps.jest_tests_retry.outputs.stderr }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 104 |           fi\n[error]       | ^\n[error] > 105 |           if [ -d \"./playwright-report\" ]; then # Assuming playwright retry also ran\n[error]       | ^\n[error] > 106 |             echo \"\n[error]       | ^\n[error] > 107 | Retry Playwright Test Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 108 |             echo \"${{ steps.playwright_tests_retry.outputs.stdout }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 109 |             echo \"\n[error]       | ^\n[error] > 110 | Retry Playwright Test Error Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 111 |             echo \"${{ steps.playwright_tests_retry.outputs.stderr }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 112 |           fi\n[error]       | ^\n[error] > 113 |\n[error]       | ^\n[error] > 114 |       - name: Upload failure logs\n[error]       | ^\n[error] > 115 |         if: steps.retry_test_run_status.conclusion == 'success'\n[error]       | ^\n[error] > 116 |         uses: actions/upload-artifact@v4\n[error]       | ^\n[error] > 117 |         with:\n[error]       | ^\n[error] > 118 |           name: test-failure-logs-${{ github.run_id }}\n[error]       | ^\n[error] > 119 |           path: ./failure_logs/\n[error]       | ^\n[error] > 120 |\n[error]       | ^\n[error] > 121 |       - name: Create GitHub Issue on persistent failure\n[error]       | ^\n[error] > 122 |         if: steps.retry_test_run_status.conclusion == 'success'\n[error]       | ^\n[error] > 123 |         uses: peter-evans/create-issue-from-file@v5\n[error]       | ^\n[error] > 124 |         with:\n[error]       | ^\n[error] > 125 |           token: ${{ secrets.GITHUB_TOKEN }}\n[error]       | ^\n[error] > 126 |           title: \"Automated Tests Persistently Failing after Rollback and Retry\"\n[error]       | ^\n[error] > 127 |           content-filepath: ./failure_logs/test_run_summary.txt # Using the summary for the main issue body\n[error]       | ^\n[error] > 128 |           labels: |\n[error]       | ^\n[error] > 129 |             bug\n[error]       | ^\n[error] > 130 |             automated-test-failure\n[error]       | ^\n[error] > 131 |           assignees: '' # Optional: assign to specific users or teams\n[error]       | ^\n[error] > 132 |\n[error]       | ^\n[error] .github/workflows/track-todos.yml: SyntaxError: Plain value cannot start with reserved character ` (56:1)\n[error]   54 |           # The action has its own default excludes like node_modules, .git, etc.\n[error]   55 |           # Adding common directories like 'app', 'packages' for broader coverage.\n[error] > 56 | ```\n[error]      | ^^^\n[error]   57 |\n[error] api/contact.js: SyntaxError: Unterminated string constant. (2:358)\n[error]   1 | async function handler(req, res) {;\n[error] > 2 |   if (req.method !== 'POST') {'';'    res.setHeader('Allow', 'POST');'';'    res.end('Method Not Allowed');'';'    res.json({ error: 'All fields are required' });'';'    console.warn('New contact message:', { name, email, message });'';'    console.error('Contact API error:', error);'';'    res.json({ error: error.message || 'Failed to send message' });'''\n[error]     |                                                                                                                                                                                                                                                                                                                                                                      ^\n[error] api/create-checkout-session.js: SyntaxError: Identifier directly after number. (1:720)\n[error] > 1 | import Stripe from 'stripe';'';'const PROD_DOMAIN = 'app.ziontechgroup.com';'';'  if (context && context !== 'production') {'';'  const url = process.env.URL || '';'';'  if (req.method !== 'POST') {'';'    res.setHeader('Allow', 'POST');'';'    res.end('Method Not Allowed');'';'    res.json({ error: 'Missing cartItems' });'';'    const liveKey = process.env.STRIPE_SECRET_KEY || '';'';'      process.env.STRIPE_TEST_MODE === 'true' ||'';'      (!isProdDomain() && liveKey.startsWith('sk_live'));'';'    if (!isProdDomain() && liveKey.startsWith('sk_live') && !process.env.STRIPE_TEST_SECRET_KEY) {'';'      throw new Error('Refusing to use live Stripe key on non-production domain');'';'      apiVersion: '2025-06-30.basil','';'          currency: 'usd','';'      mode: 'payment','';'    const fs = await import('fs');'';'    const path = await import('path');'';'    const file = path.join(process.cwd(), 'data', 'orders.json');'';'      orders = JSON.parse(fs.readFileSync(file, 'utf8'));'';'      // File doesn't exist or is invalid, use empty array'';'    orders.push({ id: orderId, items: cartItems, status: 'pending', sandbox: useTest });'';'    console.error('Create checkout session error:', error);'''\n[error]     |n[error] api/create-payment-intent.js: SyntaxError: Unterminated string constant. (1:852)\n[error] > 1 | import Stripe from 'stripe';'';'const PROD_DOMAIN = 'app.ziontechgroup.com';'';'  if (context && context !== 'production') {'';'  const url = process.env.URL || '';'';'  if (req.method !== 'POST') {'';'    res.setHeader('Allow', 'POST');'';'    res.end('Method Not Allowed');'';'  if (typeof amount !== 'number') {'';'    res.json({ error: 'Invalid amount' });'';'    const liveKey = process.env.STRIPE_SECRET_KEY || '';'';'      process.env.STRIPE_TEST_MODE === 'true' ||'';'      (!isProdDomain() && liveKey.startsWith('sk_live'));'';'    if (!isProdDomain() && liveKey.startsWith('sk_live') && !process.env.STRIPE_TEST_SECRET_KEY) {'';'      throw new Error('Refusing to use live Stripe key on non-production domain');'';'      apiVersion: '2025-06-30.basil','';'      currency: 'usd','';'    console.error('Create payment intent error:', error);'''\n[error]     |n[error] api/feedback.js: SyntaxError: Unexpected token (1:621)\n[error] > 1 | const { _withSentry } = require('./withSentry.cjs');'';'const fs = require('fs');'';'const path = require('path');'';'  if (req.method !== 'POST') {'';'    res.setHeader('Allow', 'POST');'';'    res.end('Method Not Allowed');'';'  if (typeof rating !== 'number') {'';'    res.json({ error: 'rating is required' });'';'    const file = path.join(process.cwd(), 'data', 'feedback.json');'';'      existing = JSON.parse(fs.readFileSync(file, 'utf8'));'';'      // File doesn't exist or is invalid, use empty array'';'    console.error('Feedback API error:', error);'';'    res.json({ error: 'Failed to save feedback' });'''\n[error]     |n[error] api/founder/mint-origin.js: SyntaxError: Unterminated string constant. (1:43)\n[error] > 1 | module.exports = require('../nft/mint');'''\n[error]     |                                           ^\n[error] api/newsletter/subscribe.js: SyntaxError: Unterminated string constant. (7:554)\n[error]   5 | };\n[error]   6 | ;\n[error] > 7 | const fs = require('fs');'';'const path = require('path');'';'const FILE_PATH = path.join(process.cwd(), 'data', 'newsletter-subscriptions.json');'';'  if (req.method !== 'POST') {'';'    res.setHeader('Allow', 'POST');'';'    res.end('Method Not Allowed');'';'      res.json({ error: 'Invalid email' });'';'        ? JSON.parse(fs.readFileSync(FILE_PATH, 'utf8'))'';'      console.error('Failed to persist subscription:', error);'';'    console.error('Subscribe API error:', error);'';'    res.json({ error: error.message || 'Subscription failed' });'''\n[error]     |n[error] api/nft/mint.js: SyntaxError: Unexpected token (2:17)\n[error]   1 |\n[error] > 2 | const chains = {;\n[error]     |                 ^\n[error]   3 |   ethereum: 'Ethereum Mainnet','';'  polygon: 'Polygon','';'  base: 'Base','';'  starknet: 'Starknet','';'  arbitrum: 'Arbitrum','';'  if (req.method !== 'POST') {'';'    res.setHeader('Allow', 'POST');'';'    res.end('Method Not Allowed');'';'    res.json({ error: 'Invalid chain selected' });'';'    title: 'Zion Genesis Artifact #0001','';'    description: 'This NFT marks the moment Zion OS was born.','';'    theme: 'Sovereign AI Protocol','';'      manifesto: 'ipfs://manifesto','';'      genesisDAOHash: 'ipfs://genesis-dao-hash','';'      bookCoverArt: 'ipfs://book-cover-art','';'      firstFundingVote: 'ipfs://first-funding-vote','';'      founderSignature: 'ipfs://founder-signature','';'    zionHash: 'ipfs://zion-dollar-hash','';'      svg: '<svg><!-- Glowing triangle/eye/multiverse --></svg>','';'      revealAnimation: 'fadeInFromManifestoQuote','''\n[error] api/onsite-request.js: SyntaxError: Missing semicolon. (1:78)\n[error] > 1 | const { withSentry } = require('./withSentry.cjs');'';'  if (req.method !== 'POST') {'';'    res.setHeader('Allow', 'POST');'';'    res.end('Method Not Allowed');'';'    res.json({ error: 'Missing required fields' });'';'    const response = await fetch('/functions/v1/onsite-service-request', {'';'      method: 'POST','';'        'Content-Type': 'application/json''';'    console.error('Onsite request API error:', err);'';'    res.json({ error: 'Failed to process request' });'''\n[error]     |                                                                              ^\n[error] api/quotes.js: SyntaxError: Unterminated string constant. (1:434)\n[error] > 1 | const { withSentry } = require('./withSentry.cjs');'';'const fs = require('fs');'';'  if (req.method !== 'POST') {'';'    res.setHeader('Allow', 'POST');'';'    res.end('Method Not Allowed');'';'      res.json({ error: 'Missing required fields' });'';'    fs.appendFileSync('quote_requests.log', JSON.stringify(logEntry) + '\\n');'';'    console.error('Quote API error:', err);'';'    res.json({ error: 'Quote submission failed' });'''\n[error]     |                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^\n[error] api/service-request.js: SyntaxError: Missing semicolon. (1:52)\n[error] > 1 | const fs = require('fs');'';'  if (req.method !== 'POST') {'';'    res.setHeader('Allow', 'POST');'';'    res.end('Method Not Allowed');'';'    res.json({ error: 'Missing required fields' });'';'  fs.appendFileSync('service_requests.log', JSON.stringify(entry) + '\\n');'''\n[error]     |                                                    ^\n[error] api/stripe-webhook.js: SyntaxError: Unexpected token (1:545)\n[error] > 1 | import Stripe from 'stripe';'';'import { buffer } from 'micro';'';'import fs from 'fs';'';'import path from 'path';'';'import { sendEmailWithSendGrid } from '../src/lib/email';'';'const stripe = new Stripe(process.env.STRIPE_SECRET_KEY || '', {'';'  apiVersion: '2025-06-30.basil','';'  if (req.method !== 'POST') {'';'    res.status(405).end('Method Not Allowed');'';'  const sig = req.headers['stripe-signature'];'';'  const webhookSecret = process.env.STRIPE_WEBHOOK_SECRET || '';'';'    console.error('Webhook signature verification failed.', error);'';'  if (event.type === 'checkout.session.completed') {'';'        const file = path.join(process.cwd(), 'data', 'orders.json');'';'        const orders = JSON.parse(fs.readFileSync(file, 'utf8'));'';'          orders[idx].status = 'paid';'';'        console.error('Failed to update order', error);'';'          console.error('Failed to send receipt email', error);'''\n[error]     |n[error] api/subscribe.js: SyntaxError: Unterminated string constant. (1:554)\n[error] > 1 | const fs = require('fs');'';'const path = require('path');'';'const FILE_PATH = path.join(process.cwd(), 'data', 'newsletter-subscriptions.json');'';'  if (req.method !== 'POST') {'';'    res.setHeader('Allow', 'POST');'';'    res.end('Method Not Allowed');'';'      res.json({ error: 'Invalid email' });'';'        ? JSON.parse(fs.readFileSync(FILE_PATH, 'utf8'))'';'      console.error('Failed to persist subscription:', error);'';'    console.error('Subscribe API error:', error);'';'    res.json({ error: error.message || 'Subscription failed' });'''\n[error]     |n[error] api/wallet.js: SyntaxError: Unterminated string constant. (2:229)\n[error]   1 | async function handler(req, res) {;\n[error] > 2 |   if (req.method !== 'GET') {'';'    res.setHeader('Allow', 'GET');'';'    res.end('Method Not Allowed');'';'    console.error('Wallet API error:', error);'';'    res.json({ error: error.message || 'Failed to fetch wallet' });'''\n[error]     |                                                                                                                                                                                                                                     ^\n[error] automation/continuous-improvement/ai-optimizer.js: SyntaxError: Unterminated string constant. (13:172)\n[error]   11 |  */\n[error]   12 | ;\n[error] > 13 | const fs = require('fs');'const path = require('path');'const { execSync, spawn } = require('child_process');'const https = require('https');'const http = require('http');'\n[error]      |                                                                                                                                                                            ^\n[error]   14 | // AI Configuration;\n[error]   15 | const AI_CONFIG = {\n[error]   16 |   // Cursor AI Integration\n[error] automation/continuous-improvement/cursor-integration.js: SyntaxError: Unterminated string constant. (18:79)\n[error]   16 |   constructor() {\n[error]   17 |     this.config = {\n[error] > 18 |       apiEndpoint: process.env.CURSOR_API_ENDPOINT || 'https://api.cursor.sh','      apiKey: process.env.CURSOR_API_KEY,\n[error]      |                                                                               ^\n[error]   19 |       workspaceId: process.env.CURSOR_WORKSPACE_ID,\n[error]   20 |       projectPath: process.cwd(),\n[error]   21 |       maxRetries: 3,\n[error] automation/continuous-improvement/enhanced-automation.js: SyntaxError: Unterminated string constant. (17:172)\n[error]   15 |  */\n[error]   16 | ;\n[error] > 17 | const fs = require('fs');'const path = require('path');'const { execSync, spawn } = require('child_process');'const https = require('https');'const http = require('http');'\n[error]      |                                                                                                                                                                            ^\n[error]   18 | // Import AI modules;\n[error]   19 | const AIOptimizer = require('./ai-optimizer');'const CursorIntegration = require('./cursor-integration');'\n[error]   20 | class EnhancedAutomation {\n[error] automation/continuous-improvement/improve.js: SyntaxError: Unterminated string constant. (9:171)\n[error]    7 |  */\n[error]    8 | ;\n[error] >  9 | const fs = require('fs');'const path = require('path');'const { execSync } = require('child_process');'const axios = require('axios');'const winston = require('winston');'\n[error]      |                                                                                                                                                                           ^\n[error]   10 | // Configure logging;\n[error]   11 | const logger = winston.createLogger({\n[error]   12 |   level: 'info','  format: winston.format.combine(\n[error] automation/continuous-improvement/index.js: SyntaxError: Unterminated string constant. (11:172)\n[error]    9 |  */\n[error]   10 | ;\n[error] > 11 | const fs = require('fs');'const path = require('path');'const { execSync, spawn } = require('child_process');'const https = require('https');'const http = require('http');'\n[error]      |                                                                                                                                                                            ^\n[error]   12 | // Configuration;\n[error]   13 | const CONFIG = {\n[error]   14 |   // Monitoring intervals (in milliseconds)\n[error] automation/continuous-improvement/monitor.js: SyntaxError: Unterminated string constant. (12:17)\n[error]   10 | // Configure logging;\n[error]   11 | const logger = winston.createLogger({\n[error] > 12 |   level: 'info','  format: winston.format.combine(\n[error]      |                 ^\n[error]   13 |     winston.format.timestamp(),\n[error]   14 |     winston.format.errors({ stack: true }),\n[error]   15 |     winston.format.json()\n[error] automation/continuous-improvement/start.js: SyntaxError: Unterminated string constant. (10:100)\n[error]    8 |  */\n[error]    9 | ;\n[error] > 10 | const path = require('path');'const fs = require('fs');'const { spawn } = require('child_process');'\n[error]      |                                                                                                    ^\n[error]   11 | // Import the enhanced automation system;\n[error]   12 | const EnhancedAutomation = require('./enhanced-automation');'\n[error]   13 | class AutomationStartup {\n[error] automation/continuous-improvement/test-system.js: SyntaxError: Unterminated string constant. (9:92)\n[error]    7 |  */\n[error]    8 | ;\n[error] >  9 | const fs = require('fs');'const path = require('path');'const winston = require('winston');'\n[error]      |                                                                                            ^\n[error]   10 | // Configure logging;\n[error]   11 | const logger = winston.createLogger({\n[error]   12 |   level: 'info','  format: winston.format.combine(\n[error] automation/index.js: SyntaxError: Unterminated string constant. (4:28)\n[error]   2 | /* eslint-disable @typescript-eslint/no-require-imports */\n[error]   3 |\n[error] > 4 | require('dotenv').config();';\n[error]     |                            ^\n[error]   5 | const OptimizationSlackBot = require('./slack/slack-bot');'const PerformanceMonitor = require('./performance/monitor');'const EnhancedAutomation = require('./continuous-improvement/enhanced-automation');'const express = require('express');'const path = require('path');'\n[error]   6 | class OptimizationAutomation {\n[error]   7 |   constructor() {\n[error] automation/performance/monitor.js: SyntaxError: Unterminated string constant. (21:59)\n[error]   19 |   async start() {\n[error]   20 |     if (this.isMonitoring) {\n[error] > 21 |       console.warn('Performance monitor already running');'      return;\n[error]      |                                                           ^\n[error]   22 |     }\n[error]   23 |\n[error]   24 |     console.warn('🚀 Starting Performance Monitor...');'    this.isMonitoring = true;\n[error] automation/slack/slack-bot.js: SyntaxError: Unterminated string constant. (21:81)\n[error]   19 |   setupCommands() {\n[error]   20 |     // Main optimization command\n[error] > 21 |     this.app.command('/optimize', async ({ command, ack, respond, client }) => {'      await ack();\n[error]      |                                                                                 ^\n[error]   22 |       \n[error]   23 |       const args = command.text.split(' ');'      const target = args[0] || 'all';'      const options = args.slice(1);\n[error]   24 |\n[error] automation/tests/system-diagnostic.js: SyntaxError: Unterminated string constant. (12:25)\n[error]   10 |       connections: {},\n[error]   11 |       files: {},\n[error] > 12 |       overall: 'unknown''    };\n[error]      |                         ^\n[error]   13 |   }\n[error]   14 |\n[error]   15 |   async run() {\n[error] browserstack.config.ts: SyntaxError: Unterminated string literal. (1:60)\n[error] > 1 | import { defineConfig, devices } from '@playwright/test';';\n[error]     |                                                            ^\n[error]   2 | export default defineConfig({\n[error]   3 |   testDir: 'tests/e2e','  use: {\n[error]   4 |     baseURL: process.env.PLAYWRIGHT_BASE_URL || 'http://localhost:3000','    trace: 'on-first-retry','  },\n[error] bundle-optimization-results.json: SyntaxError: Unexpected token (1:1)\n[error] > 1 | <<<<<<< HEAD\n[error]     | ^\n[error]   2 | {\n[error]   3 |   \"timestamp\": \"2025-07-18T10:03:47.210Z\",\n[error]   4 |   \"phase\": \"Phase 2\",\n[error] cypress.config.ts: SyntaxError: Unterminated string literal. (1:41)\n[error] > 1 | import { defineConfig } from 'cypress';'\n[error]     |                                         ^\n[error]   2 | // fs and path are no longer needed as getPort() is removed.\n[error]   3 | ;\n[error]   4 | export default defineConfig({\n[error] cypress/e2e/add_to_cart.cy.ts: SyntaxError: Unterminated string literal. (2:53)\n[error]   1 | /* eslint-env cypress/globals */\n[error] > 2 | describe('add to cart', () => {'  beforeEach(() => {\n[error]     |                                                     ^\n[error]   3 |     // Clear the cart from localStorage before each test\n[error]   4 |     window.localStorage.removeItem('cart');'  });\n[error]   5 |\n[error] cypress/e2e/ai_matcher_home_card.cy.ts: SyntaxError: ';' expected. (1:48)\n[error] > 1 | describe('AI Matcher home card', () => {'  it('navigates to the matcher page via Explore button', () => {'    cy.visit('/');'    // Allow extra time for page assets to load on the deployed preview\n[error]     |                                                ^\n[error]   2 |     cy.get('[data-testid=\"explore-ai-talent-matching-cta\"]', { timeout: 10000 }).click();'    cy.url().should('include', '/match');'  });\n[error]   3 | });\n[error]   4 |\n[error] cypress/e2e/auth-integration.cy.ts: SyntaxError: Unterminated string literal. (6:65)\n[error]   4 | //   \"TEST_USER_DISPLAY_NAME\": \"Test User\",\"//   \"TEST_USER_EMAIL\": \"test@example.com\",\"//   \"TEST_USER_PASSWORD\": \"Password123\"\"// }\n[error]   5 |\n[error] > 6 | describe('register and login flow', () => {'  beforeEach(() => {\n[error]     |                                                                 ^\n[error]   7 |     // Ensure environment variables are loaded, or provide defaults for local runs if desired\n[error]   8 |     // For this refactor, we assume they are set in cypress.env.json\n[error]   9 |     if (!Cypress.env('CYPRESS_TEST_USER_EMAIL')) {'      throw new Error('CYPRESS_TEST_USER_EMAIL environment variable is not set.');'    }\n[error] cypress/e2e/black_screen_spec.cy.ts: SyntaxError: ';' expected. (1:46)\n[error] > 1 | describe('Zion App Load Test', () => {'  it('Should load without black screen or major rendering failure', () => {'    cy.visit('https://app.ziontechgroup.com');'    cy.get('body', { timeout: 10000 }).should('be.visible');'    cy.get('body').should('not.have.css', 'background-color', 'rgb(0, 0, 0)');'  });\n[error]     |                                              ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/blank_render.cy.ts: SyntaxError: ',' expected. (2:23)\n[error]   1 | const routesToCheck = [\n[error] > 2 |   '/','  '/marketplace','  '/services','  '/talent','  '/equipment','  '/about','  '/blog','];\n[error]     |                       ^\n[error]   3 |\n[error]   4 | describe('Blank render detection', () => {'  routesToCheck.forEach((path) => {\n[error]   5 |     it(`renders content for ${path}`, () => {\n[error] cypress/e2e/blog.cy.ts: SyntaxError: ';' expected. (1:43)\n[error] > 1 | describe('blog navigation', () => {'  it('shows blog page header', () => {'    cy.visit('/blog');'    cy.get('h1').should('be.visible').and('contain.text', 'Latest Articles');'  });\n[error]     |                                           ^\n[error]   2 |   it('opens article from list', () => {'    cy.visit('/blog');'    cy.get('a').contains('Read more').first().click();'    cy.url().should('include', '/blog/');'  });\n[error]   3 | });\n[error]   4 |\n[error] cypress/e2e/browse_marketplace.cy.ts: SyntaxError: ';' expected. (1:59)\n[error] > 1 | describe('hero section browse marketplace', () => {'  it('navigates to marketplace from home', () => {'    cy.visit('/');'    cy.get('#browse-marketplace').click();'    cy.url().should('include', '/marketplace');'  });\n[error]     |                                                           ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/browse_talent_detail.cy.ts: SyntaxError: ';' expected. (1:58)\n[error] > 1 | describe('browse talents and view detail', () => {'  it('opens a talent detail page from the listing', () => {'    cy.visit('/talent');'    cy.contains('View').first().click();'    cy.get('[data-testid=\"talent-name\"]').should('be.visible');'  });\n[error]     |                                                          ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/buy_now_login_redirect.cy.ts: SyntaxError: ';' expected. (1:46)\n[error] > 1 | describe('guest buy now flow', () => {'  it('redirects through login to checkout', () => {'    cy.intercept('POST', '/auth/login', {'      statusCode: 200,\n[error]     |                                              ^\n[error]   2 |       body: { token: 'jwt', user: { id: '1', email: 'test@example.com' } },'      headers: { 'set-cookie': 'token=jwt; HttpOnly; Path=/' },'    }).as('login');'\n[error]   3 |     cy.visit('/equipment/pro-camera-x1000');'    cy.contains('Buy Now').click();'    cy.url().should('include', '/login?next=%2Fcheckout%3Fsku%3Dpro-camera-x1000');'\n[error]   4 |     cy.get('input[name=\"email\"]').type('test@example.com');'    cy.get('input[name=\"password\"]').type('Password123');'    cy.contains('Login').click();'    cy.wait('@login');'\n[error] cypress/e2e/cart_badge.cy.ts: SyntaxError: ';' expected. (1:38)\n[error] > 1 | describe('cart badge', () => {'  it('shows count after adding first item', () => {'    cy.visit('/marketplace');'    cy.contains('Add to Cart').first().click();'    cy.url().should('include', '/cart');'    cy.get('[aria-label=\"Cart\"]').find('span').should('contain', '1');'  });\n[error]     |                                      ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/cart_page.cy.ts: SyntaxError: ';' expected. (1:43)\n[error] > 1 | describe('cart page loads', () => {'  it('shows cart heading', () => {'    cy.visit('/cart');'    cy.contains('Your Cart');'  });\n[error]     |                                           ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/checkout_flow_spec.cy.ts: SyntaxError: Unterminated string literal. (1:101)\n[error] > 1 | import { mockStripeTokenCreation, mockStripePaymentConfirmation } from '../support/stripe_mock.js';'\n[error]     |                                                                                                     ^\n[error]   2 | describe('Checkout Flow with Mocked Stripe', () => {'  it('should successfully complete the checkout process with mocked Stripe API calls', () => {'    // Navigate to the application's checkout page'    cy.visit('/checkout');'\n[error]   3 |     // Fill in basic dummy data for checkout form fields\n[error]   4 |     cy.get('[data-testid=checkout-name-input]').type('John Doe');'    cy.get('[data-testid=checkout-address-input]').type('123 Main St');'    cy.get('[data-testid=checkout-email-input]').type('john.doe@example.com');'    // Add more fields as necessary, e.g., city, postal code, etc.\n[error] cypress/e2e/checkout_payment.cy.ts: SyntaxError: ';' expected. (1:50)\n[error] > 1 | describe('test checkout purchase', () => {'  it('completes a $0.50 test purchase', () => {'    cy.intercept('POST', '/api/auth/login', {'      statusCode: 200,\n[error]     |                                                  ^\n[error]   2 |       body: {\n[error]   3 |         user: { id: 'test-user-id', email: 'existing@test.com' },'        accessToken: 'mock-access-token','        refreshToken: 'mock-refresh-token','      },\n[error]   4 |     }).as('mockLogin');'\n[error] cypress/e2e/checkout_test_route_spec.cy.ts: SyntaxError: Unterminated string literal. (1:61)\n[error] > 1 | describe('Checkout Test Route', () => {'  beforeEach(() => {\n[error]     |                                                             ^\n[error]   2 |     // Visit the test checkout page\n[error]   3 |     cy.visit('/checkout-test');'  });\n[error]   4 |\n[error] cypress/e2e/community-auth.cy.ts: SyntaxError: ';' expected. (1:63)\n[error] > 1 | describe('community create post auth redirect', () => {'  it('redirects to login and back to create post', () => {'    cy.intercept('POST', '/auth/login', {'      statusCode: 200,\n[error]     |                                                               ^\n[error]   2 |       body: { token: 'jwt', user: { id: '1', email: 'test@example.com' } },'      headers: { 'set-cookie': 'token=jwt; HttpOnly; Path=/' },'    }).as('login');'\n[error]   3 |     cy.visit('/community');'    cy.contains('Create New Post').click();'    cy.contains('Please log in to create a post');'    cy.url().should('include', '/login');'    cy.get('input[name=\"email\"]').type('test@example.com');'    cy.get('input[name=\"password\"]').type('Password123');'    cy.contains('Login').click();'    cy.wait('@login');'    cy.url().should('include', '/community?new=1');'  });\n[error]   4 | });\n[error] cypress/e2e/community-category.cy.ts: SyntaxError: ';' expected. (1:54)\n[error] > 1 | describe('community category listing', () => {'  it('displays posts in Getting Hired category', () => {'    cy.visit('/community');'    cy.contains('Getting Hired').click();'    cy.get('[data-testid=\"post-card\"]').its('length').should('be.greaterThan', 0);'  });\n[error]     |                                                      ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/community-empty.cy.ts: SyntaxError: ';' expected. (1:52)\n[error] > 1 | describe('community empty category', () => {'  it('shows empty state with disabled CTA', () => {'    cy.intercept('GET', '**/forum_posts*category_id=eq.announcements*', {'      statusCode: 200,\n[error]     |                                                    ^\n[error]   2 |       body: [],\n[error]   3 |     }).as('getPosts');'\n[error]   4 |     cy.visit('/community/announcements');'    cy.wait('@getPosts');'\n[error] cypress/e2e/criticalPaths.cy.ts: SyntaxError: ';' expected. (7:85)\n[error]    5 |\n[error]    6 | // Define constants for frequently used strings or identifiers if they are not dynamic;\n[error] >  7 | const COMMUNITY_POST_TITLE = 'Automated test post';'const COMMUNITY_POST_CONTENT = 'This post was created by Cypress during an automated test.';'\n[error]      |                                                                                     ^\n[error]    8 | describe('Critical user journeys', () => {'  beforeEach(function () {\n[error]    9 |     cy.visit('/');'    // Ensure environment variables are loaded\n[error]   10 |     if (!Cypress.env('EXISTING_USER_EMAIL') || !Cypress.env('EXISTING_USER_PASSWORD') ||'        !Cypress.env('TEST_USER_NAME') || !Cypress.env('STRIPE_TEST_CARD')) {'      cy.log('Required environment variables are missing, skipping test suite');'      this.skip();\n[error] cypress/e2e/error_handling.cy.ts: SyntaxError: Unterminated string literal. (3:101)\n[error]   1 | // cypress/e2e/error_handling.cy.ts\n[error]   2 |\n[error] > 3 | describe('Error Handling', () => {'  // No longer need reloadStub for the GlobalErrorBoundary tests,\n[error]     |                                                                                                     ^\n[error]   4 |   // as it uses navigate(0) which doesn't call window.location.reload().'  // If other tests in this file were for different error boundaries that DO use reload,\n[error]   5 |   // we might need to conditionally apply the beforeEach for those.\n[error]   6 |   // For now, assuming all tests here will target the GlobalErrorBoundary behavior.\n[error] cypress/e2e/footer_newsletter.cy.ts: SyntaxError: Unterminated string literal. (1:64)\n[error] > 1 | describe('Footer Newsletter Form', () => {'  beforeEach(() => {\n[error]     |                                                                ^\n[error]   2 |     cy.visit('/');'  });\n[error]   3 |\n[error]   4 |   it('should allow a user to subscribe with a valid email', () => {'    // Mock the API response for consistent testing\n[error] cypress/e2e/forgot-password.cy.ts: SyntaxError: Unterminated string literal. (2:62)\n[error]   1 | /* eslint-env cypress/globals */\n[error] > 2 | describe('Forgot Password Page', () => {'  beforeEach(() => {\n[error]     |                                                              ^\n[error]   3 |     // Visit the page before each test\n[error]   4 |     cy.visit('/forgot-password');'  });\n[error]   5 |\n[error] cypress/e2e/full_checkout_flow.cy.ts: SyntaxError: ';' expected. (1:49)\n[error] > 1 | describe('buy now full checkout', () => {'  it('adds item and completes payment', () => {'    cy.loginByApi('existing@test.com', 'password123');'\n[error]     |                                                 ^\n[error]   2 |     cy.intercept('POST', '/api/create-payment-intent', {'      statusCode: 200,\n[error]   3 |       body: { clientSecret: 'test_secret', id: 'pi_test123' },'    }).as('pi');'\n[error]   4 |     cy.visit('/equipment/pro-camera-x1000');'    cy.contains('Buy Now').click();'\n[error] cypress/e2e/health-check.cy.ts: SyntaxError: ';' expected. (2:44)\n[error]   1 | /* eslint-env cypress/globals */\n[error] > 2 | describe('API Health Check', () => {'  it('should return a 200 OK status and correct body for /api/health', () => {'    cy.request('GET', '/api/health')'      .then((response) => {\n[error]     |                                            ^\n[error]   3 |         expect(response.status).to.eq(200);\n[error]   4 |         expect(response.body).to.have.property('status', 'ok');'        expect(response.body).to.have.property('timestamp'); // Check if timestamp exists'        // Optional: Check if timestamp is a valid ISO string\n[error]   5 |         const timestamp = response.body.timestamp;\n[error] cypress/e2e/home_error_boundary.cy.ts: SyntaxError: ';' expected. (1:52)\n[error] > 1 | describe('home page error handling', () => {'  it('shows fallback banner when server-side props fail', () => {'    cy.visit('/?forceError=1');'    cy.contains('Failed to load home page.').should('be.visible');'  });\n[error]     |                                                    ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/home_page_health.cy.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | describe('Home Page Health', () => {'  it('should load the home page without runtime errors and display content', () => {'    // Navigate to the specified URL\n[error]     |                                            ^\n[error]   2 |     cy.visit('https://app.ziontechgroup.com/');'\n[error]   3 |     // Check for the presence and content of the main container\n[error]   4 |     // Wait up to 5 seconds for the element to exist and have children\n[error] cypress/e2e/loader_overlay.cy.ts: SyntaxError: ';' expected. (1:46)\n[error] > 1 | describe('app loader overlay', () => {'  it('hides overlay after navigation', () => {'    cy.visit('/about');'    cy.get('body', { timeout: 16000 })'      .find('[data-testid=\"loader-overlay\"]')'      .should('not.exist');'  });\n[error]     |                                              ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/login_api.cy.ts: SyntaxError: ';' expected. (1:46)\n[error] > 1 | describe('login API endpoint', () => {'  it('returns error on 401', () => {'    cy.intercept('POST', '/auth/login', {'      statusCode: 401,\n[error]     |                                              ^\n[error]   2 |       body: { error: 'Invalid credentials' },'    }).as('login');'\n[error]   3 |     cy.visit('/login');'    cy.get('input[name=\"email\"]').type('test@example.com');'    cy.get('input[name=\"password\"]').type('wrongpass');'    cy.contains('Login').click();'    cy.wait('@login');'    cy.contains('Invalid credentials');'  });\n[error]   4 |\n[error] cypress/e2e/login_contains_signin.cy.ts: SyntaxError: ';' expected. (1:55)\n[error] > 1 | describe('login page contains Sign In', () => {'  it('shows Sign In text', () => {'    cy.visit('/login');'    cy.contains('Sign In');'  });\n[error]     |                                                       ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/login_marketplace.cy.ts: SyntaxError: ';' expected. (1:54)\n[error] > 1 | describe('login to reach marketplace', () => {'  it('allows user to login and redirect to marketplace', () => {'    cy.intercept('POST', '/auth/login', {'      statusCode: 200,\n[error]     |                                                      ^\n[error]   2 |       body: { token: 'jwt', user: { id: '1', email: 'test@example.com' } },'      headers: { 'set-cookie': 'token=jwt; HttpOnly; Path=/' },'    }).as('login');'\n[error]   3 |     cy.visit('/login?next=/marketplace');'    cy.get('input[name=\"email\"]').type('test@example.com');'    cy.get('input[name=\"password\"]').type('Password123');'    cy.contains('Login').click();'    cy.wait('@login');'    cy.url().should('include', '/marketplace');'  });\n[error]   4 | });\n[error] cypress/e2e/login_nav.cy.ts: SyntaxError: ';' expected. (1:49)\n[error] > 1 | describe('login link navigation', () => {'  it('navigates to login page from header', () => {'    cy.visit('/');'    cy.get('[data-testid=\"login-link\"]').click();'    cy.url().should('include', '/login');'    cy.get('input[name=\"email\"]').should('be.visible');'  });\n[error]     |                                                 ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/login-page-renders-and-attempts-auth.cy.ts: SyntaxError: Unterminated string literal. (1:85)\n[error] > 1 | describe('Login Page Rendering and Basic Auth Attempt', () => {'  beforeEach(() => {\n[error]     |                                                                                     ^\n[error]   2 |     // Visit the login page before each test\n[error]   3 |     cy.visit('/login');'  });\n[error]   4 |\n[error] cypress/e2e/login.cy.ts: SyntaxError: Unterminated string literal. (1:52)\n[error] > 1 | describe('login flow', () => {'  beforeEach(() => {\n[error]     |                                                    ^\n[error]   2 |     // Ensure environment variables are set\n[error]   3 |     expect(Cypress.env('TEST_USER_EMAIL'), 'TEST_USER_EMAIL was not set').to.be.a('string');'    expect(Cypress.env('TEST_USER_PASSWORD'), 'TEST_USER_PASSWORD was not set').to.be.a('string');'  });\n[error]   4 |\n[error] cypress/e2e/logout.cy.ts: SyntaxError: Unterminated string literal. (1:53)\n[error] > 1 | describe('logout flow', () => {'  beforeEach(() => {\n[error]     |                                                     ^\n[error]   2 |     expect(Cypress.env('TEST_USER_EMAIL'), 'TEST_USER_EMAIL was not set').to.be.a('string');'    expect(Cypress.env('TEST_USER_PASSWORD'), 'TEST_USER_PASSWORD was not set').to.be.a('string');'  });\n[error]   3 |\n[error]   4 |   it('logs out and shows login link', () => {'    cy.intercept('POST', '/auth/login', {'      statusCode: 200,\n[error] cypress/e2e/marketplace_dropdown.cy.ts: SyntaxError: Unterminated string literal. (2:73)\n[error]   1 | /// <reference types=\"cypress\" />\"\n[error] > 2 | describe('Marketplace dropdown navigation', () => {'  beforeEach(() => {\n[error]     |                                                                         ^\n[error]   3 |     cy.visit('/');'  });\n[error]   4 |\n[error]   5 |   it('shows dropdown items when hovering/clicking marketplace and allows navigation', () => {'    // Click the marketplace trigger\n[error] cypress/e2e/marketplace_overview.cy.ts: SyntaxError: ';' expected. (3:48)\n[error]   1 | // Cypress test to ensure marketplace overview loads products\n[error]   2 |\n[error] > 3 | describe('Marketplace Overview', () => {'  it('displays at least one product card', () => {'    cy.visit('/marketplace');'    cy.get('[data-testid=\"product-card\"]', { timeout: 10000 }).should('have.length.at.least', 1);'  });\n[error]     |                                                ^\n[error]   4 | }); \n[error] cypress/e2e/marketplace_products.cy.ts: SyntaxError: ';' expected. (1:53)\n[error] > 1 | describe('marketplace products page', () => {'  it('displays a grid of products', () => {'    cy.visit('/marketplace/products');'    cy.get('[data-testid=\"products-grid\"]', { timeout: 10000 }).within(() => {'      cy.get('[data-testid=\"product-card\"]').should('have.length.greaterThan', 0);'    });\n[error]     |                                                     ^\n[error]   2 |   });\n[error]   3 | });\n[error]   4 |\n[error] cypress/e2e/marketplace-loads.cy.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | describe('Marketplace Page', () => {'  it('should load and display category cards', () => {'    cy.visit('/marketplace');'\n[error]     |                                            ^\n[error]   2 |     // Wait for category cards to appear\n[error]   3 |     cy.get('[data-testid=\"category-card\"]', { timeout: 10000 }).should('exist');'\n[error]   4 |     // Assert that at least one category card is rendered\n[error] cypress/e2e/marketplace-view.cy.ts: SyntaxError: ';' expected. (1:51)\n[error] > 1 | describe('marketplace view toggle', () => {'  it('switches to list layout', () => {'    cy.visit('/marketplace');'    cy.get('button[aria-label=\"List view\"]').click();'    cy.get('.product-list');'  });\n[error]     |                                                   ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/navigation_links.cy.ts: SyntaxError: ';' expected. (1:49)\n[error] > 1 | describe('Main navigation links', () => {'  it('navigates to each top link without 404', () => {'    const broken: string[] = [];\n[error]     |                                                 ^\n[error]   2 |     cy.visit('/');'    cy.get('header nav a').each(($link) => {'      const href = $link.attr('href');'      if (!href) {\n[error]   3 |         return;\n[error]   4 |       }\n[error] cypress/e2e/oauth_google.cy.ts: SyntaxError: ';' expected. (1:49)\n[error] > 1 | describe('google oauth callback', () => {'  it('stores token and redirects to home', () => {'    const payload = btoa(JSON.stringify({ id: '1', displayName: 'Test User' }));'    const token = `header.${payload}.sig`;\n[error]     |                                                 ^\n[error]   2 |     cy.visit(`/oauth?token=${token}`);\n[error]   3 |     cy.url().should('eq', `${Cypress.config().baseUrl}/`);'    cy.get('[data-testid=\"home-greeting\"]').should('contain', 'Test');'  });\n[error]   4 | });\n[error] cypress/e2e/orders.cy.ts: SyntaxError: ';' expected. (1:39)\n[error] > 1 | describe('orders page', () => {'  it('loads orders and shows download link', function () {'    // Ensure we have a logged in user so the orders query runs\n[error]     |                                       ^\n[error]   2 |     if (!Cypress.env('EXISTING_USER_EMAIL') || !Cypress.env('EXISTING_USER_PASSWORD')) {'      cy.log('EXISTING_USER_EMAIL or EXISTING_USER_PASSWORD not set, skipping test');'      this.skip();\n[error]   3 |     }\n[error]   4 |     cy.loginByApi(\n[error] cypress/e2e/quote-request.cy.ts: SyntaxError: ';' expected. (1:48)\n[error] > 1 | describe('quote request step 1', () => {'  it('cannot continue without selecting a service', () => {'    cy.visit('/request-quote');'    cy.contains('Continue').click();'    cy.contains('Service Required');'  });\n[error]     |                                                ^\n[error]   2 |\n[error]   3 |   it('advances after selecting service', () => {'    cy.visit('/request-quote');'    cy.contains('Services').click();'    cy.contains('AI Development').click();'    cy.contains('Continue').click();'    cy.contains('Tell us about your project');'  });\n[error]   4 | });\n[error] cypress/e2e/register-auto-login.cy.ts: SyntaxError: ';' expected. (1:56)\n[error] > 1 | describe('register auto login redirect', () => {'  it('creates account and goes to dashboard', () => {'    // 🔐 SECURITY: Use environment variables for test credentials\n[error]     |                                                        ^\n[error]   2 |     const email = Cypress.env('DEV_USER_1_EMAIL') || 'test.dev@example.com';'    const password = Cypress.env('DEV_USER_1_PASSWORD') || 'SecureTestPass123!';'\n[error]   3 |     cy.intercept('POST', '/api/auth/register', {'      statusCode: 201,\n[error]   4 |       body: { token: 'jwt', user: { id: '1', email } },'      headers: { 'set-cookie': 'authToken=jwt; HttpOnly; Path=/; Secure; SameSite=Strict' },'    }).as('register');'\n[error] cypress/e2e/register.cy.ts: SyntaxError: Unterminated string literal. (6:55)\n[error]   4 |   return { success: true, user: userData };\n[error]   5 | }\n[error] > 6 | describe('register flow', () => {'  beforeEach(() => {\n[error]     |                                                       ^\n[error]   7 |     // Ensure environment variables are set\n[error]   8 |     expect(Cypress.env('TEST_USER_DISPLAY_NAME'), 'TEST_USER_DISPLAY_NAME was not set').to.be.a('string');'    expect(Cypress.env('TEST_USER_EMAIL'), 'TEST_USER_EMAIL was not set').to.be.a('string');'    expect(Cypress.env('TEST_USER_PASSWORD'), 'TEST_USER_PASSWORD was not set').to.be.a('string');'  });\n[error]   9 |\n[error] cypress/e2e/request-quote-wizard.cy.ts: SyntaxError: ';' expected. (1:48)\n[error] > 1 | describe('request quote wizard', () => {'  it('selecting a service advances to step 2', () => {'    cy.visit('/request-quote');'    cy.get('[data-testid^=\"request-quote-\"]').first().click();'    cy.get('[data-testid=\"step-indicator\"]').should('contain', '2/3');'  });\n[error]     |                                                ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/request-service.cy.ts: SyntaxError: ';' expected. (1:48)\n[error] > 1 | describe('request service form', () => {'  it('submits service request', () => {'    cy.intercept('POST', '/api/service-request').as('request');'    cy.visit('/request-service');'    cy.get('input[placeholder=\"Your name\"]').type('John Doe');'    cy.get('input[placeholder=\"Email\"]').type('john@example.com');'    cy.get('input[placeholder=\"Phone\"]').type('1234567890');'    cy.get('textarea').type('Need help');'    cy.get('.request-btn').click();'    cy.wait('@request').its('response.statusCode').should('eq', 200);'  });\n[error]     |                                                ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/reset-password.cy.ts: SyntaxError: ';' expected. (1:47)\n[error] > 1 | describe('reset password flow', () => {'  it('submits email then resets password', () => {'    cy.intercept('POST', '/auth/forgot-password', { statusCode: 200 }).as('forgot')'    cy.intercept('POST', /\\/auth\\/reset-password\\/.*/, { statusCode: 200 }).as('reset')'\n[error]     |                                               ^\n[error]   2 |     cy.visit('/forgot-password')'    cy.get('input[name=\"email\"]').type('user@example.com')'    cy.contains('Submit').click()'    cy.wait('@forgot')'\n[error]   3 |     cy.visit('/reset-password/uid/token')'    cy.get('input[placeholder=\"New password\"]').type('Password123')'    cy.get('input[placeholder=\"Confirm password\"]').type('Password123')'    cy.contains('Reset Password').click()'    cy.wait('@reset')'    cy.contains('Password updated')'  })\n[error]   4 | })\n[error] cypress/e2e/responsive_layout_spec.cy.js: SyntaxError: Unterminated string constant. (2:46)\n[error]   1 | /* eslint-env cypress/globals */;\n[error] > 2 | const viewports = ['macbook-15', 'iphone-6'];'\n[error]     |                                              ^\n[error]   3 | viewports.forEach(viewport => {\n[error]   4 |   describe(`Layout Test on ${viewport}`, () => {\n[error]   5 |     it('Should render layout correctly', () => {'      cy.viewport(viewport);\n[error] cypress/e2e/return_home_404.cy.ts: SyntaxError: ';' expected. (1:48)\n[error] > 1 | describe('404 Return Home link', () => {'  it('navigates to home from 404 page', () => {'    cy.visit('/nonexistent-path', { failOnStatusCode: false });'    cy.contains('Return to Home').click();'    cy.url().should('eq', Cypress.config().baseUrl + '/');'  });\n[error]     |                                                ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/search_autocomplete.cy.ts: SyntaxError: ';' expected. (2:58)\n[error]   1 | /// <reference types=\"cypress\" />\"\n[error] > 2 | describe('Search autocomplete navigation', () => {'  it('navigates to listing detail when suggestion clicked', () => {'    cy.visit('/');'    cy.get('input[aria-autocomplete=\"list\"]').type('AI Security');'    cy.contains('AI Security Monitoring Suite').click();'    cy.url().should('include','/marketplace/listing/ai-security-16');'    cy.contains('AI Security Monitoring Suite');'  });\n[error]     |                                                          ^\n[error]   3 | }); \n[error] cypress/e2e/search_bar_interactive.cy.ts: SyntaxError: Unterminated string literal. (1:67)\n[error] > 1 | describe('Search Bar Interaction', () => {'  const pagesToTest = [\n[error]     |                                                                   ^\n[error]   2 |     { name: 'Home Page', path: '/' },'    { name: 'Checkout Page', path: '/checkout' }, // Assuming '/checkout' is the correct path'    { name: 'Product Page', path: '/marketplace/listing/sample-product-id' }, // Replace with a valid product ID or path'    { name: 'Talent Page', path: '/talent' },'    { name: 'Services Page', path: '/services' },'  ];\n[error]   3 |\n[error]   4 |   // Selector for the search input within the PrimaryNav component\n[error] cypress/e2e/search_functionality.cy.ts: SyntaxError: Unterminated string literal. (1:62)\n[error] > 1 | describe('Search Functionality', () => {'  beforeEach(() => {\n[error]     |                                                              ^\n[error]   2 |     // Visit the home page or any page with the header search bar\n[error]   3 |     cy.visit('/');'  });\n[error]   4 |\n[error] cypress/e2e/search_product.cy.ts: SyntaxError: ';' expected. (1:42)\n[error] > 1 | describe('Product Search', () => {'  it('should find an existing product and display it in results', () => {'    // Visit the homepage\n[error]     |                                          ^\n[error]   2 |     cy.visit('/'); // Assuming homepage is the root'\n[error]   3 |     // Product to search for (from src/data/newProductsData.ts or indexed ES data)\n[error]   4 |     // Note: For E2E tests, it's better if this data is stable in the test environment's ES index.'    const productName = 'AI-Powered CRM Toolkit';'    const productSearchQuery = 'AI-Powered CRM'; // A partial query that should still find it'\n[error] cypress/e2e/search-suggestions.cy.ts: SyntaxError: Unterminated string literal. (1:71)\n[error] > 1 | describe('Search Suggestions Navigation', () => {'  beforeEach(() => {\n[error]     |                                                                       ^\n[error]   2 |     // Visit the homepage or a page with search functionality\n[error]   3 |     cy.visit('/');'  });\n[error]   4 |\n[error] cypress/e2e/searchbar_mobile_responsiveness.cy.ts: SyntaxError: ';' expected. (1:60)\n[error] > 1 | describe('Search Bar Mobile Responsiveness', () => {'  it('should not have horizontal scroll on mobile and search input should be visible', () => {'    // Set viewport to a small mobile size\n[error]     |                                                            ^\n[error]   2 |     cy.viewport(320, 640);\n[error]   3 |\n[error]   4 |     // Visit the homepage\n[error] cypress/e2e/services_page.cy.ts: SyntaxError: ';' expected. (1:41)\n[error] > 1 | describe('Services page', () => {'  it('visits page and shows service cards', () => {'    cy.request('/services').its('status').should('eq', 200);'    cy.visit('/services');'    cy.get('[data-testid=\"services-list\"]', { timeout: 10000 })'      .children()\n[error]     |                                         ^\n[error]   2 |       .should('have.length.greaterThan', 0);'  });\n[error]   3 | });\n[error]   4 |\n[error] cypress/e2e/signup_cart_persist.cy.ts: SyntaxError: ';' expected. (1:51)\n[error] > 1 | describe('signup auth persistence', () => {'  it('remains logged in after signup and can view cart', () => {'    cy.intercept('POST', '/api/auth/register', {'      statusCode: 201,\n[error]     |                                                   ^\n[error]   2 |       body: { token: 'jwt', user: { id: '1', email: 'test@example.com' } },'    }).as('register');'\n[error]   3 |     cy.visit('/signup');'    cy.get('input[name=\"displayName\"]').type('Test User');'    cy.get('input[name=\"email\"]').type('test@example.com');'    cy.get('input[name=\"password\"]').type('Password123');'    cy.get('input[name=\"confirmPassword\"]').type('Password123');'    cy.get('input[type=\"checkbox\"]').check();'    cy.contains('Create Account').click();'    cy.wait('@register');'\n[error]   4 |     cy.visit('/cart');'    cy.contains('Your cart is empty');'  });\n[error] cypress/e2e/signup_login_checkout.cy.ts: SyntaxError: ';' expected. (1:51)\n[error] > 1 | describe('signup to checkout flow', () => {'  it('registers, logs in, adds to cart and completes checkout', () => {'    cy.intercept('POST', '/auth/register', {'      statusCode: 201,\n[error]     |                                                   ^\n[error]   2 |       body: { token: 'jwt', user: { id: '1', email: 'new@example.com' } },'    }).as('register');'\n[error]   3 |     cy.intercept('POST', '/auth/login', {'      statusCode: 200,\n[error]   4 |       body: { token: 'jwt', user: { id: '1', email: 'new@example.com' } },'      headers: { 'set-cookie': 'token=jwt; HttpOnly; Path=/' },'    }).as('login');'\n[error] cypress/e2e/signup-auto-login.cy.ts: SyntaxError: ';' expected. (2:54)\n[error]   1 | // cypress/e2e/signup-auto-login.cy.ts\n[error] > 2 | describe('Signup and Auto-Login Flow', () => {'  it('should register a new user, auto-login, and redirect to marketplace', () => {'    const testTimestamp = Date.now();\n[error]     |                                                      ^\n[error]   3 |     const uniqueEmail = `testuser_${testTimestamp}@example.com`;\n[error]   4 |     const userName = 'Test User';'    const password = 'Password123!'; // Ensure this meets password strength requirements'\n[error]   5 |     const mockSupabaseUserID = `test-user-id-${testTimestamp}`;\n[error] cypress/e2e/signup.cy.ts: SyntaxError: ';' expected. (1:40)\n[error] > 1 | describe('sign up flow', () => {'  it('registers new user', () => {'    cy.intercept('POST', '/api/auth/register', {'      statusCode: 201,\n[error]     |                                        ^\n[error]   2 |       body: { token: 'jwt', user: { id: '1', email: 'new@example.com' } },'    }).as('register');'\n[error]   3 |     cy.visit('/mobile/onboarding');'    cy.contains('Continue').click();'    cy.contains('Continue').click();'\n[error]   4 |     cy.get('input[name=\"name\"]').type('Test User');'    cy.get('input[name=\"email\"]').type('new@example.com');'    cy.get('input[name=\"password\"]').type('Password123');'    cy.contains('Create Account').click();'\n[error] cypress/e2e/smoke.cy.ts: SyntaxError: Unterminated string literal. (1:57)\n[error] > 1 | describe('Smoke Tests', () => {'  const routesToTest = [\n[error]     |                                                         ^\n[error]   2 |     { path: '/', selector: 'main' },'    { path: '/login', selector: 'main' },'    { path: '/marketplace', selector: 'main' },'    { path: '/community', selector: 'main' },'    { path: '/about', selector: 'main' },'  ];\n[error]   3 |\n[error]   4 |   routesToTest.forEach(route => {\n[error] cypress/e2e/social-login.cy.ts: SyntaxError: Unterminated string literal. (1:88)\n[error] > 1 | describe('social login buttons redirect through NextAuth', () => {'  beforeEach(() => {\n[error]     |                                                                                        ^\n[error]   2 |     cy.visit('/login');'  });\n[error]   3 |\n[error]   4 |   it('google button triggers NextAuth sign-in', () => {'    cy.intercept('GET', '/api/auth/signin/google', (req) => {'      req.reply({ statusCode: 302, headers: { location: '/api/auth/callback/google' } });'    }).as('google');'\n[error] cypress/e2e/talent-profile.cy.ts: SyntaxError: Unterminated string literal. (2:72)\n[error]   1 | // cypress/e2e/talent-profile.cy.ts\n[error] > 2 | describe('Talent Profile Page', () => {'  // Existing test - keep as is\n[error]     |                                                                        ^\n[error]   3 |   it('opens a profile from the directory', () => {'    cy.visit('/talent');'    cy.contains('Alexandra Chen').click(); // Assuming 'Alexandra Chen' exists for this flow'    cy.get('[data-testid=\"talent-details\"]').should('contain', 'Alexandra Chen');'  });\n[error]   4 |\n[error]   5 |   // New test based on issue requirements\n[error] cypress/e2e/talent-view.cy.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | describe('talent card view', () => {'  it('opens detail page from directory', () => {'    cy.visit('/talent');'    cy.contains('View').first().click();'    cy.get('[data-testid=\"talent-name\"]').should('be.visible');'    cy.get('[data-testid=\"talent-details\"]').should('contain', 'Contact');'  });\n[error]     |                                            ^\n[error]   2 | });\n[error]   3 |\n[error] cypress/e2e/temp_login_test.cy.js: SyntaxError: Unterminated string constant. (2:141)\n[error]   1 | /* eslint-env cypress/globals */\n[error] > 2 | describe('Temporary Login Test', () => {'  it('should successfully login via API', () => {'    cy.loginByApi('test@example.com', 'password')'      .then((response) => {\n[error]     |                                                                                                                                             ^\n[error]   3 |         // Ensure the request within loginByApi was successful\n[error]   4 |         expect(response.status).to.be.oneOf([200, 201]);\n[error]   5 |       })\n[error] cypress/e2e/theme_switch_spec.cy.js: SyntaxError: Unterminated string constant. (2:223)\n[error]   1 | /* eslint-env cypress/globals */\n[error] > 2 | describe('Theme Toggle', () => {'  it('Switches from light to dark and persists', () => {'    cy.visit('/');'    cy.get('[data-testid=\"theme-toggle\"]').click();'    cy.get('html').should('have.attr', 'data-theme', 'dark');'    cy.reload();\n[error]     |                                                                                                                                                                                                                               ^\n[error]   3 |     cy.get('html').should('have.attr', 'data-theme', 'dark');'  });\n[error]   4 | });\n[error]   5 |\n[error] cypress/e2e/theme-switching.cy.ts: SyntaxError: ';' expected. (1:43)\n[error] > 1 | describe('Theme Switching', () => {'  it('should apply dark theme from localStorage', () => {'    cy.visit('/');'    cy.window().its('localStorage').invoke('setItem', 'theme', 'dark');'    // To ensure themePreset doesn't override, let's also set it.'    // This is a deviation from the exact prompt but necessary for current ThemeContext logic.\n[error]     |                                           ^\n[error]   2 |     // If this test is strictly for 'theme' item, this line should be removed and ThemeContext might need adjustment.'    cy.window().its('localStorage').invoke('setItem', 'themePreset', 'dark');'    cy.reload();\n[error]   3 |\n[error]   4 |     cy.get('html').should('have.class', 'dark');'\n[error] cypress/e2e/unauthenticated-root-redirect.cy.ts: SyntaxError: ';' expected. (1:55)\n[error] > 1 | describe('Unauthenticated Root Access', () => {'  it('should allow unauthenticated users to view the home page', () => {'    cy.visit('/');'\n[error]     |                                                       ^\n[error]   2 |     // Ensure we remain on the home page\n[error]   3 |     cy.url().should('eq', Cypress.config().baseUrl + '/');'\n[error]   4 |     // Check that a key element from the home page is visible\n[error] cypress/e2e/wallet.cy.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | describe('wallet dashboard', () => {'  it('shows balance after load', () => {'    cy.intercept('GET', '/api/wallet', {'      statusCode: 200,\n[error]     |                                            ^\n[error]   2 |       body: { points: 50, history: [] },\n[error]   3 |     }).as('getWallet');'    cy.visit('/wallet');'    cy.wait('@getWallet');'    cy.contains('Points');'    cy.contains('50');'  });\n[error]   4 | });\n[error] cypress/support/commands.js: SyntaxError: Unterminated string constant. (1:194)\n[error] > 1 | Cypress.Commands.add('loginByApi', (email, password) => {'  cy.request('POST', '/api/auth/login', { email, password }).then((resp) => {'    window.localStorage.setItem('token', resp.body.token)'  })\n[error]     |                                                                                                                                                                                                  ^\n[error]   2 | })\n[error]   3 |\n[error] cypress/support/e2e.ts: SyntaxError: Identifier expected. (1:31)\n[error] > 1 | import './commands';'import './stripe_mock.js';'\n[error]     |                               ^\n[error]   2 | Cypress.on('uncaught:exception', (err, runnable) => {'  // Log the error for better debugging\n[error]   3 |   Cypress.log({\n[error]   4 |     name: 'Uncaught Exception','    message: err.message,\n[error] cypress/support/stripe_mock.js: SyntaxError: Unterminated string constant. (8:30)\n[error]    6 |   return new Cypress.Promise((resolve) => {\n[error]    7 |     resolve({\n[error] >  8 |       id: 'tok_mockToken123','      card: {\n[error]      |                              ^\n[error]    9 |         last4: '4242','        brand: 'Visa','        exp_month: 12,\n[error]   10 |         exp_year: 2025,\n[error]   11 |       },\n[error] dao/codebase/hardhat.config.js: SyntaxError: Unterminated string constant. (2:45)\n[error]   1 | /* eslint-disable @typescript-eslint/no-require-imports */\n[error] > 2 | require(\"@nomicfoundation/hardhat-toolbox\");\"\n[error]     |                                             ^\n[error]   3 | module.exports = {\n[error]   4 |   solidity: \"0.8.19\",\"  networks: {\n[error]   5 |     hardhat: {},\n[error] dao/codebase/scripts/deploy.js: SyntaxError: Unterminated string constant. (2:32)\n[error]   1 | /* eslint-disable @typescript-eslint/no-require-imports */;\n[error] > 2 | const hre = require(\"hardhat\");\"\n[error]     |                                ^\n[error]   3 | async function main() {\n[error]   4 |   const VoteToken = await hre.ethers.getContractFactory(\"VoteToken\");\"  const voteToken = await VoteToken.deploy(\"Zion Vote Token\", \"ZVT\");\"  await voteToken.deployed();\n[error]   5 |\n[error] dao/codebase/test/dao.test.js: SyntaxError: Unterminated string constant. (11:74)\n[error]    9 |     await voteToken.connect(voter).stake(500);\n[error]   10 |\n[error] > 11 |     const QuorumEngine = await ethers.getContractFactory(\"QuorumEngine\");\"    const quorum = await QuorumEngine.deploy(voteToken.address);\n[error]      |                                                                          ^\n[error]   12 |     await quorum.deployed();\n[error]   13 |\n[error]   14 |     const DelegateRegistry = await ethers.getContractFactory(\"DelegateRegistry\");\"    const registry = await DelegateRegistry.deploy();\n[error] dao/zkvote/hardhat.config.js: SyntaxError: Unterminated string constant. (2:45)\n[error]   1 | /* eslint-disable @typescript-eslint/no-require-imports */\n[error] > 2 | require(\"@nomicfoundation/hardhat-toolbox\");\"\n[error]     |                                             ^\n[error]   3 | module.exports = {\n[error]   4 |   solidity: \"0.8.19\",\"  networks: {\n[error]   5 |     hardhat: {},\n[error] dao/zkvote/test/zkballot.test.js: SyntaxError: Unterminated string constant. (9:75)\n[error]    7 |     await token.stake(500);\n[error]    8 |\n[error] >  9 |     const Verifier = await ethers.getContractFactory(\"SemaphoreVerifier\");\"    const verifier = await Verifier.deploy();\n[error]      |                                                                           ^\n[error]   10 |     await verifier.deployed();\n[error]   11 |\n[error]   12 |     const ZkBallot = await ethers.getContractFactory(\"ZkBallot\");\"    const ballot = await ZkBallot.deploy(1, verifier.address, token.address);\n[error] dev-utils/layoutChecker.ts: SyntaxError: Unterminated string literal. (14:76)\n[error]   12 | }\n[error]   13 |\n[error] > 14 | window.addEventListener('load', () => {'  const broken: LayoutIssue[] = [];\n[error]      |                                                                            ^\n[error]   15 |   document.querySelectorAll<HTMLElement>('body *').forEach(el => {'    if (el.offsetHeight === 0 || el.scrollWidth > window.innerWidth) {\n[error]   16 |       broken.push({\n[error]   17 |         tag: el.tagName,\n[error] eslint-report.json: SyntaxError: The input is empty or contains only comments. (1:46)\n[error] > 1 | // Placeholder file - merge conflict resolved\n[error]     |                                              ^\n[error] extension/background.js: SyntaxError: Unterminated string constant. (3:27)\n[error]   1 | /* eslint-env webextensions */\n[error]   2 | ;\n[error] > 3 | const OPENAI_API_KEY = '';'// Base URL for opening Zion pages in a new tab;\n[error]     |                           ^\n[error]   4 | const BASE_URL = 'https://app.ziontechgroup.com';'\n[error]   5 | async function askZionGPT(prompt) {\n[error]   6 |   if (!OPENAI_API_KEY) return { answer: 'Model key missing' };'\n[error] extension/popup.js: SyntaxError: Unterminated string constant. (3:56)\n[error]   1 | // Check if extension is properly loaded\n[error]   2 | if (typeof chrome === 'undefined' || !chrome.runtime) {'  console.warn('Zion Assistant extension not properly loaded');'  // Hide the popup content and show an error message\n[error] > 3 |   document.addEventListener('DOMContentLoaded', () => {'    const body = document.body;\n[error]     |                                                        ^\n[error]   4 |     if (body) {\n[error]   5 |       body.innerHTML = `\n[error]   6 |         <div style=\"padding: 20px; text-align: center; font-family: Arial, sans-serif;\">\"          <h3>Extension Not Available</h3>\n[error] extractFailingCode.js: SyntaxError: Unterminated string constant. (3:26)\n[error]   1 | // extractFailingCode.js\n[error]   2 | /* eslint-disable @typescript-eslint/no-require-imports */;\n[error] > 3 | const fs = require('fs');'\n[error]     |                          ^\n[error]   4 | // Check if the file path is provided\n[error]   5 | if (process.argv.length < 3) {\n[error]   6 |   console.error('Usage: node extractFailingCode.js <path_to_eslint_report.json>');'  process.exit(1);\n[error] fix-corrupted-files.js: SyntaxError: Unterminated string constant. (12:57)\n[error]   10 |     } else if (file.isFile() && /\\.(tsx?|jsx?)$/.test(file.name)) {\n[error]   11 |       try {\n[error] > 12 |         let content = fs.readFileSync(fullPath, 'utf8');'        \n[error]      |                                                         ^\n[error]   13 |         // Check for corrupted content\n[error]   14 |         if (content.includes(';') || '            content.includes('Unexpected token') ||'            content.includes('Unterminated string constant') ||'            content.includes('<<<<<<< HEAD') ||'            content.includes('=======') ||'            content.includes('>>>>>>>')) {'          \n[error]   15 |           console.log(`Replacing corrupted file: ${fullPath}`);\n[error] fix-merge-conflicts.js: SyntaxError: Unterminated string constant. (12:57)\n[error]   10 |     } else if (file.isFile() && /\\.(tsx?|jsx?)$/.test(file.name)) {\n[error]   11 |       try {\n[error] > 12 |         let content = fs.readFileSync(fullPath, 'utf8');'        \n[error]      |                                                         ^\n[error]   13 |         if (content.includes('<<<<<<< HEAD')) {'          console.log(`Fixing merge conflicts in: ${fullPath}`);\n[error]   14 |           \n[error]   15 |           // Remove merge conflict markers and keep HEAD version\n[error] fix-syntax-errors.js: SyntaxError: Unterminated string constant. (12:57)\n[error]   10 |     } else if (file.isFile() && /\\.(tsx?|jsx?)$/.test(file.name)) {\n[error]   11 |       try {\n[error] > 12 |         let content = fs.readFileSync(fullPath, 'utf8');'        let needsFix = false;\n[error]      |                                                         ^\n[error]   13 |         \n[error]   14 |         // Check for common syntax errors\n[error]   15 |         if (content.includes('<<<<<<< HEAD') || '            content.includes('=======') || '            content.includes('>>>>>>>') ||'            content.includes('Unexpected token') ||'            content.includes('Unterminated string constant') ||'            content.includes('Unexpected token ;') ||'            content.includes('Unexpected token {') ||'            content.includes('Unexpected token as') ||'            content.includes('Unexpected token interface') ||'            content.includes('Unexpected token type') ||'            content.includes('Unexpected token :') ||'            content.includes('Unexpected token -') ||'            content.includes('Unexpected token .') ||'            content.includes('Unexpected token (') ||'            content.includes('Unexpected token )') ||'            content.includes('Unexpected token <') ||'            content.includes('Unexpected token |') ||'            content.includes('Unexpected token /') ||'            content.includes('Unexpected token \\'') ||'            content.includes('Unexpected token VariantProps') ||'            content.includes('Unexpected token ControllerProps') ||'            content.includes('Unexpected token \\'return\\' outside of function')) {'          \n[error] instrumentation.client.ts: SyntaxError: Unterminated string literal. (1:38)\n[error] > 1 | import * as Sentry from './sentry';';\n[error]     |                                      ^\n[error]   2 | export { register } from './sentry';'\n[error]   3 | // Export the onRouterTransitionStart hook as required by @sentry/nextjs\n[error]   4 | // so that navigation events are properly captured during runtime.\n[error] lint-results.json: SyntaxError: Unexpected token (2:1)\n[error]   1 |\n[error] > 2 | > project@0.0.0 lint\n[error]     | ^\n[error]   3 | > node scripts/pre-lint-check.cjs json\n[error]   4 |\n[error]   5 |\n[error] middleware.disabled.ts: SyntaxError: ';' expected. (1:47)\n[error] > 1 | import { type NextRequest } from 'next/server''import { updateSession } from '@/utils/supabase/middleware'';\n[error]     |                                               ^\n[error]   2 | export async function middleware(request: NextRequest) {\n[error]   3 |   return await updateSession(request)\n[error]   4 | }\n[error] monitoring/src/alerter.ts: SyntaxError: ';' expected. (1:58)\n[error] > 1 | import { exec } from 'child_process';'import axios from 'axios';'import logger from './logger';'import { EndpointTestResult } from './latencyTester';';\n[error]     |                                                          ^\n[error]   2 | const ALERT_THRESHOLD_MS = 500;\n[error]   3 | const ALERT_WEBHOOK_URL = process.env.ALERT_WEBHOOK_URL;\n[error]   4 |\n[error] monitoring/src/index.ts: SyntaxError: Identifier expected. (1:52)\n[error] > 1 | import cron from 'node-cron';'import logger from './logger';'import { runMonitoring } from './monitor'; // Import the exported function'import path from 'path';'\n[error]     |                                                    ^\n[error]   2 | logger.info(`Cron job process starting. Current working directory: ${process.cwd()}`);\n[error]   3 |  \n[error]   4 | logger.info(`Log files are expected at: ${path.join(__dirname, '..', 'logs', 'perf')}`);'\n[error] monitoring/src/latencyTester.ts: SyntaxError: Identifier expected. (1:49)\n[error] > 1 | import https from 'https';'import logger from './logger';'\n[error]     |                                                 ^\n[error]   2 | interface LatencyResult {\n[error]   3 |   url: string;\n[error]   4 |   responseTime: number;\n[error] monitoring/src/logger.ts: SyntaxError: ';' expected. (1:50)\n[error] > 1 | import winston from 'winston';'import path from 'path';'\n[error]     |                                                  ^\n[error]   2 | // Allow overriding the log directory via WATCHDOG_LOG_PATH so logging works\n[error]   3 | // in read-only environments.;\n[error]   4 | const baseLogDir = process.env.WATCHDOG_LOG_PATH || path.join(__dirname, '..', '..', 'logs');'const logsDir = path.join(baseLogDir, 'perf');'\n[error] monitoring/src/monitor.ts: SyntaxError: Identifier expected. (1:103)\n[error] > 1 | import { measureLatency, Endpoint, _EndpointTestResult } from './latencyTester';'import logger from './logger';'import { triggerAlerts } from './alerter'; // Added this import'\n[error]     |                                                                                                       ^\n[error]   2 | // Define endpoints (base URLs should come from environment variables);\n[error]   3 | const endpoints: Endpoint[] = [\n[error]   4 |   // Django\n[error] netlify/functions/healthCheckCron.ts: SyntaxError: Unterminated string literal. (1:83)\n[error] > 1 | import type { Handler, HandlerEvent, HandlerContext } from \"@netlify/functions\";\";\n[error]     |                                                                                   ^\n[error]   2 | const handler: Handler = async (_event: HandlerEvent, _context: HandlerContext) => {\n[error]   3 |   const siteUrl = process.env.URL;\n[error]   4 |   if (!siteUrl) {\n[error] netlify/functions/self-healing-build.js: SyntaxError: Unterminated string constant. (1:103)\n[error] > 1 | const { execSync } = require('child_process');'const fs = require('fs');'const path = require('path');';\n[error]     |                                                                                                       ^\n[error]   2 | exports.handler = async (event, context) => {\n[error]   3 |   // Only process build events\n[error]   4 |   if (event.httpMethod !== 'POST') {'    return {\n[error] netlify/functions/sentryCheck.js: SyntaxError: Unexpected token, expected \"(\" (3:120)\n[error]   1 | export const handler = async () => {\n[error]   2 |     const dsn = process.env.SENTRY_DSN;\n[error] > 3 |     if (!dsn || dsn.startsWith('YOUR_')) {'        console.error('SENTRY_DSN missing or placeholder in function runtime');'        return { statusCode: 500, body: 'SENTRY_DSN missing or placeholder' };'    }\n[error]     |                                                                                                                        ^\n[error]   4 |     return { statusCode: 204 };\n[error]   5 | };\n[error]   6 |\n[error] netlify/functions/sentryCheck.ts: SyntaxError: Unterminated string literal. (3:54)\n[error]   1 | export const handler = async () => {\n[error]   2 |   const dsn = process.env.SENTRY_DSN;\n[error] > 3 |   if (!dsn || dsn.startsWith('YOUR_')) {'    return {\n[error]     |                                                      ^\n[error]   4 |       statusCode: 500,\n[error]   5 |       body: JSON.stringify({ error: 'Sentry DSN not configured' })'    };\n[error]   6 |   }\n[error] netlify/functions/sentryDsnCheckCron.ts: SyntaxError: Unterminated string literal. (3:45)\n[error]   1 | // scheduled function to check Sentry DSN via API;\n[error]   2 | export const handler = async () => {\n[error] > 3 |   const url = process.env.URL || '';'  try {\n[error]     |                                             ^\n[error]   4 |     const res = await fetch(`${url}/api/sentry-dsn-check`);\n[error]   5 |     if (!res.ok) {\n[error]   6 |       console.error('Failed DSN check:', await res.text());'    }\n[error] offworld/lab/test-env.js: SyntaxError: Unexpected token (2:93)\n[error]   1 | #!/usr/bin/env node;\n[error] > 2 | import { DelayTolerantDAO } from '../../src/offworld/delayDao';'import { initOrbit } from '../../src/offworld/orbitdb';'\n[error]     |                                                                                             ^\n[error]   3 | async function main() {\n[error]   4 |   await initOrbit('./offworld-db');'  const dao = new DelayTolerantDAO();\n[error]   5 |\n[error] pages_backup/[slug].tsx: SyntaxError: ';' expected. (1:40)\n[error] > 1 | import fs from 'fs';'import path from 'path';'import React from 'react';'import type { GetStaticPaths, GetStaticProps } from 'next';'import ReactMarkdown from 'react-markdown';'import { NextSeo } from '@/components/NextSeo';'\n[error]     |                                        ^\n[error]   2 | interface PageMeta {\n[error]   3 |   title?: string;\n[error]   4 |   description?: string;\n[error] pages_backup/500.tsx: SyntaxError: ';' expected. (1:74)\n[error] > 1 | import React from 'react';'import { ErrorBoundary, FallbackProps } from 'react-error-boundary';'import { useRouter } from 'next/router';'import { useAuth } from '@/hooks/useAuth';'import {logErrorToProduction} from '@/utils/logError';';\n[error]     |                                                                          ^\n[error]   2 | function ErrorFallback({ error, resetErrorBoundary }: FallbackProps) {\n[error]   3 |   return (\n[error]   4 |     <div className=\"min-h-screen flex flex-col items-center justify-center text-center space-y-4 p-4\">\"      <h1 className=\"text-2xl font-semibold\">Something went wrong.</h1>\"      {error?.message && <p className=\"text-red-500 break-words\">{error.message}</p>}\"      <button\n[error] pages_backup/SearchPage.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import { useRouter } from 'next/router';'import { useMarketplaceSearch } from '@/hooks/useMarketplaceSearch';'import { ProductListing } from '@/types/listings';'import { ListingCard } from '@/components/ListingCard'; // Assuming this component exists'import { AppLayout } from '@/layout/AppLayout'; // Assuming this component exists'import { NextPageWithLayout } from '@/types/next';'import React, { useEffect } from 'react';';\n[error]     |                                                                                ^\n[error]   2 | const _SearchPage: NextPageWithLayout = () => {\n[error]   3 |   const router = useRouter();\n[error]   4 |   const { _q } = router.query;\n[error] playwright.config.ts: SyntaxError: Unterminated string literal. (1:51)\n[error] > 1 | import { defineConfig } from '@playwright/test';';\n[error]     |                                                   ^\n[error]   2 | export default defineConfig({\n[error]   3 |   testDir: 'tests/e2e','  use: {\n[error]   4 |     baseURL: 'http://localhost:3000','    // Ensures that the trace viewer assets are downloaded, useful for debugging.\n[error] plugins/wallet-connector/cypress/e2e/specs/components/WalletProvider.spec.tsx: SyntaxError: Unterminated string literal. (2:53)\n[error]   1 | /// <reference types=\"cypress\" />\"import React from 'react';'import { mount } from 'cypress/react18'; // Assuming React 18+'import { WalletProvider, useWallet } from '../../../../../../src/context/WalletContext'; // Adjust path as needed'// Corrected import path for appkit mocks;\n[error] > 2 | import * as AppKitReact from '@reown/appkit/react';'\n[error]     |                                                     ^\n[error]   3 | // Define a simple child component to consume the context;\n[error]   4 | const TestComponent = () => {\n[error]   5 |   const wallet = useWallet();\n[error] postcss.config.js: SyntaxError: Unterminated string constant. (3:32)\n[error]   1 | export default {\n[error]   2 |   plugins: {\n[error] > 3 |     '@tailwindcss/postcss': {},'    autoprefixer: {},\n[error]     |                                ^\n[error]   4 |   },\n[error]   5 | }; \n[error] prisma/seed.ts: SyntaxError: Unterminated string literal. (1:49)\n[error] > 1 | import { PrismaClient } from '@prisma/client';';\n[error]     |                                                 ^\n[error]   2 | const prisma = new PrismaClient();\n[error]   3 |\n[error]   4 | async function main() {\n[error] public/process-polyfill.js: SyntaxError: Unterminated string constant. (11:16)\n[error]    9 |\n[error]   10 | (function() {\n[error] > 11 |   'use strict';'  \n[error]      |                ^\n[error]   12 |   // Only run in browser environments, not in Node.js\n[error]   13 |   if (typeof window === 'undefined' || typeof document === 'undefined') {'    return; // Exit if not in browser\n[error]   14 |   }\n[error] public/service-worker.js: SyntaxError: Unterminated string constant. (6:100)\n[error]   4 | // Try multiple CDNs for Workbox\n[error]   5 | try {\n[error] > 6 |   importScripts('https://storage.googleapis.com/workbox-cdn/releases/6.1.5/workbox-sw-no-eval.js');'} catch {\n[error]     |                                                                                                    ^\n[error]   7 |   try {\n[error]   8 |     importScripts('https://cdn.jsdelivr.net/npm/workbox-sw@6.1.5/build/workbox-sw.js');'  } catch {\n[error]   9 |     try {\n[error] remote/dao/test-env.js: SyntaxError: Unexpected token (2:93)\n[error]   1 | #!/usr/bin/env node;\n[error] > 2 | import { DelayTolerantDAO } from '../../src/offworld/delayDao';'import { initOrbit } from '../../src/offworld/orbitdb';'\n[error]     |                                                                                             ^\n[error]   3 | async function main() {\n[error]   4 |   await initOrbit('./remote-dao-db');'  const dao = new DelayTolerantDAO();\n[error]   5 |\n[error] scripts/__mocks__/tail.js: SyntaxError: Missing semicolon. (19:90)\n[error]   17 |   // Helper for tests to simulate line events\n[error]   18 |   this._simulateLine = (data) => {\n[error] > 19 |     if (this.eventCallbacks && this.eventCallbacks['line']) {'      this.eventCallbacks['line'].forEach(cb => cb(data));'    }\n[error]      |                                                                                          ^\n[error]   20 |   };\n[error]   21 |   // Helper for tests to simulate error events\n[error]   22 |   this._simulateError = (error) => {\n[error] scripts/ai-syntax-fixer.cjs: SyntaxError: Unterminated string constant. (71:20)\n[error]   69 |         name: 'Fix extra semicolons',\n[error]   70 |         pattern: /;\\s*;+/g,\n[error] > 71 |         fix: () => ';\n[error]      |                    ^\n[error]   72 |       },\n[error]   73 |       // Fix broken template literals\n[error]   74 |       {\n[error] scripts/auto-fix-all.cjs: SyntaxError: Unexpected token (2:1)\n[error]   1 |\n[error] > 2 | #!/usr/bin/env node\n[error]     | ^\n[error]   3 | const { ComprehensiveAppAutomation } = require('./comprehensive-app-automation.cjs');\n[error]   4 | const automation = new ComprehensiveAppAutomation();\n[error]   5 | automation.runFullAutomation();\n[error] scripts/auto-lint-fix.js: SyntaxError: Unterminated string constant. (3:105)\n[error]   1 | #!/usr/bin/env node\n[error]   2 | ;\n[error] > 3 | const { _execSync } = require('child_process');'const fs = require('fs');'const _path = require('path');';\n[error]     |                                                                                                         ^\n[error]   4 | const PROJECT_ROOT = path.resolve(__dirname, '..');'const GIT_BRANCH_NAME = 'auto/fix-hourly';'const GIT_USER_NAME = process.env.GIT_AUTHOR_NAME || 'GitHub Actions Bot';'const GIT_USER_EMAIL = process.env.GIT_AUTHOR_EMAIL || 'actions-bot@users.noreply.github.com'; // Replace with a suitable bot email';\n[error]   5 | function executeCommand(command, options = {}) {\n[error]   6 |   console.warn(`Executing: ${command}`);\n[error] scripts/automated-app-improvement.cjs: SyntaxError: Unterminated comment. (3:1)\n[error]   1 | #!/usr/bin/env node\n[error]   2 |\n[error] > 3 | /**\n[error]     | ^\n[error] scripts/automated-app-improver.cjs: SyntaxError: Unterminated string constant. (86:22)\n[error]   84 |       {\n[error]   85 |         pattern: /;\\s*;+/g,\n[error] > 86 |         replacement: ';\n[error]      |                      ^\n[error]   87 |       },\n[error]   88 |       // Fix malformed JSX\n[error]   89 |       {\n[error] scripts/build-content-index.js: SyntaxError: Unterminated string constant. (1:83)\n[error] > 1 | import fs from 'fs';'import path from 'path';'import { fileURLToPath } from 'url';'\n[error]     |                                                                                   ^\n[error]   2 | // Use different variable names to avoid conflict with built-in globals;\n[error]   3 | const _currentFilename = path.basename(__filename);\n[error]   4 | const _currentDirname = undefined; // Unused path.dirname(currentFilename);\n[error] scripts/check_coverage_and_notify.js: SyntaxError: Unterminated string constant. (4:85)\n[error]   2 | ;\n[error]   3 | const fs = require('fs');'const { execSync } = require('child_process');';\n[error] > 4 | const summaryPath = process.argv[2] || 'logs/coverage/hourly/coverage-summary.json';'\n[error]     |                                                                                     ^\n[error]   5 | if (!fs.existsSync(summaryPath)) {\n[error]   6 |   console.error(`Coverage summary not found at ${summaryPath}`);\n[error]   7 |   process.exit(1);\n[error] scripts/check-coverage-threshold.js: SyntaxError: Unterminated string constant. (4:109)\n[error]   2 | // Path to the coverage summary file generated by Jest\n[error]   3 | // Adjust this path if your Jest configuration outputs the summary elsewhere;\n[error] > 4 | const coverageSummaryPath = path.join(process.cwd(), 'logs', 'coverage', 'hourly', 'coverage-summary.json');'const coverageThreshold = 80; // Minimum percentage\n[error]     |                                                                                                             ^\n[error]   5 |\n[error]   6 | try {\n[error]   7 |   if (!fs.existsSync(coverageSummaryPath)) {\n[error] scripts/check-env.ts: SyntaxError: Unterminated string literal. (1:81)\n[error] > 1 | import { validateProductionEnvironment } from '../src/utils/environmentConfig';'\n[error]     |                                                                                 ^\n[error]   2 | try {\n[error]   3 |   validateProductionEnvironment();\n[error]   4 |   console.warn('✅ Environment configuration looks good.');'} catch (err: unknown) {\n[error] scripts/check-performance-logs.ts: SyntaxError: ';' expected. (2:40)\n[error]   1 | #!/usr/bin/env node;\n[error] > 2 | import fs from 'fs';'import path from 'path';'import { execSync } from 'child_process';';\n[error]     |                                        ^\n[error]   3 | const LOG_FILE: string = process.env.PERFORMANCE_LOG_FILE || path.join('logs', 'performance.log');'const THRESHOLD_MS: number = parseInt(process.env.PERFORMANCE_THRESHOLD_MS || '500', 10);';\n[error]   4 | function parseTimes(file: string): number[] {\n[error]   5 |   if (!fs.existsSync(file)) return [];\n[error] scripts/clean-cache.js: SyntaxError: Unexpected token, expected \",\" (8:15)\n[error]    6 | import { rmSync } from 'fs';'import { join } from 'path';';\n[error]    7 | const paths = [\n[error] >  8 |   '.next','  'node_modules/.cache','  'coverage','  'logs/perf/hourly.log','  'logs/security/hourly-fix.log','  'test-results','  'temp_file','];\n[error]      |               ^\n[error]    9 |\n[error]   10 | for (const p of paths) {\n[error]   11 |   try {\n[error] scripts/cleanup-duplicate-pages.cjs: SyntaxError: import.meta may appear only with 'sourceType: \"module\"' (13:39)\n[error]   11 |\n[error]   12 | // Use different variable names to avoid conflict with built-in globals\n[error] > 13 | const currentFilename = fileURLToPath(import.meta.url);\n[error]      |                                       ^\n[error]   14 | const _currentDirname = path.dirname(__filename);\n[error]   15 | const pagesDir = path.join(path.dirname(__dirname), 'pages');\n[error]   16 | const error = new Error('Cleanup failed');\n[error] scripts/clear-logs.js: SyntaxError: Unterminated string constant. (8:83)\n[error]    6 |  */\n[error]    7 | ;\n[error] >  8 | import fs from 'fs';'import path from 'path';'import { fileURLToPath } from 'url';'\n[error]      |                                                                                   ^\n[error]    9 | // Use different variable name to avoid conflict with built-in globals;\n[error]   10 | const currentDirname = path.dirname(fileURLToPath(import.meta.url));\n[error]   11 | const LOGS_DIR = path.resolve(__dirname, '../logs');';\n[error] scripts/codex-bug-fix.js: SyntaxError: Unterminated string constant. (3:138)\n[error]   1 | #!/usr/bin/env node\n[error]   2 | // Use different variable name to avoid conflict with built-in globals;\n[error] > 3 | import processEnv from 'process';'import { Octokit } from \"@octokit/rest\";\"import fs from 'fs';'import { execSync } from 'child_process';';\n[error]     |                                                                                                                                          ^\n[error]   4 | const {\n[error]   5 |   GITHUB_TOKEN,\n[error]   6 |   ISSUE_NUMBER,\n[error] scripts/codexApiFixer.js: SyntaxError: Unterminated string constant. (12:31)\n[error]   10 | async function runFixer() {\n[error]   11 |   const response = await openai.createCompletion({\n[error] > 12 |     model: 'code-davinci-002','    prompt: fixPrompt,\n[error]      |                               ^\n[error]   13 |     temperature: 0.2,\n[error]   14 |     max_tokens: 1000\n[error]   15 |   });\n[error] scripts/codexWebhookServer.js: SyntaxError: Unexpected character '🔁'. (6:66)\n[error]   4 | app.use(express.json());\n[error]   5 |\n[error] > 6 | app.post('/webhook/trigger-fix', (req, res) => {'  console.warn('🔁 Webhook received! Starting Codex fix pipeline...');'\n[error]     |                                                                  ^\n[error]   7 |   exec('openai-operator run ./codex-pipeline.yaml', (error, stdout, stderr) => {'    if (error) {\n[error]   8 |       console.error(`❌ Execution error: ${error.message}`);\n[error]   9 |       return res.status(500).send('Fix failed');'    }\n[error] scripts/comprehensive-healer.cjs: SyntaxError: Unexpected token (6:7)\n[error]   4 |           fixed = true;\n[error]   5 |         }\n[error] > 6 |       } catch (error) {\n[error]     |       ^\n[error]   7 |         this.log(`Error fixing merge conflicts in ${file}: ${error.message}`, 'ERROR');\n[error]   8 |       }\n[error]   9 |     }\n[error] scripts/continuous-healing.js: SyntaxError: Unterminated string constant. (8:200)\n[error]    6 |  */\n[error]    7 | ;\n[error] >  8 | const fs = require('fs');'const path = require('path');'const { spawn, execSync } = require('child_process');'const chokidar = require('chokidar');'const AutoFixSystem = require('./auto-fix-errors');'\n[error]      |                                                                                                                                                                                                        ^\n[error]    9 | class ContinuousHealer {\n[error]   10 |   constructor() {\n[error]   11 |     this.isRunning = false;\n[error] scripts/continuous-improvement.cjs: SyntaxError: Unexpected token (2:1)\n[error]   1 |\n[error] > 2 | #!/usr/bin/env node\n[error]     | ^\n[error]   3 | const { ComprehensiveAppAutomation } = require('./comprehensive-app-automation.cjs');\n[error]   4 | const automation = new ComprehensiveAppAutomation();\n[error]   5 | automation.startContinuousImprovement();\n[error] scripts/debug-login.js: SyntaxError: Unterminated string constant. (12:63)\n[error]   10 | async function testLoginApi() {\n[error]   11 |   try {\n[error] > 12 |     console.warn('🔧 DEBUG: Testing login API components...');'    \n[error]      |                                                               ^\n[error]   13 |     // 🔐 SECURITY: Check environment configuration\n[error]   14 |     console.warn('\\n🔐 Security Check...');'    const isDevMode = process.env.NODE_ENV === 'development';'    console.warn('📋 Environment mode:', process.env.NODE_ENV || 'undefined');'    console.warn('📋 Development mode:', isDevMode);'    \n[error]   15 |     if (!isDevMode) {\n[error] scripts/deploy-zion-ipfs.js: SyntaxError: Leading decorators must be attached to a class declaration. (2:114)\n[error]   1 | #!/usr/bin/env node;\n[error] > 2 | import fs from 'fs';'import path from 'path';'import { createHelia } from 'helia';'import { unixfs } from '@helia/unixfs';'import { MemoryBlockstore } from 'blockstore-memory';'import { MemoryDatastore } from 'datastore-memory';'// Libp2p stack is needed for Helia to operate, even for local-only operations,\n[error]     |                                                                                                                  ^\n[error]   3 | // though it can be minimal if not connecting to the broader network.;\n[error]   4 | import { createLibp2p } from 'libp2p';'import { identify } from '@libp2p/identify';'import { tcp } from '@libp2p/tcp'; // Or another transport if more appropriate'import { noise } from '@chainsafe/libp2p-noise';'import { yamux } from '@chainsafe/libp2p-yamux';';\n[error]   5 | const buildDir = process.argv[2] || 'dist'; // Default to 'dist''\n[error] scripts/fix-all-remaining-router.cjs: SyntaxError: Unexpected token, expected \",\" (69:28)\n[error]   67 |   {\n[error]   68 |     from: /import\\s+{\\s*Link\\s*}\\s+from\\s+\"react-router-dom\";?/g,\n[error] > 69 |     to: 'import Link from 'next/link';\n[error]      |                            ^\n[error]   70 |   },\n[error]   71 |   {\n[error]   72 |     from: /import\\s+{\\s*useParams\\s*}\\s+from\\s+\"react-router-dom\";?/g,\n[error] scripts/fix-all-syntax-errors.js: SyntaxError: Unterminated string constant. (7:62)\n[error]    5 | const __dirname = path.dirname(__filename);\n[error]    6 |\n[error] >  7 | console.log('🔧 Starting comprehensive syntax error fix...');'\n[error]      |                                                              ^\n[error]    8 | // Function to recursively find all TypeScript/JavaScript files;\n[error]    9 | function findSourceFiles(dir, extensions = ['.ts', '.tsx', '.js', '.jsx']) {'  const files = [];\n[error]   10 |   \n[error] scripts/fix-api-types.js: SyntaxError: Unterminated string constant. (3:101)\n[error]   1 | #!/usr/bin/env node\n[error]   2 | ;\n[error] > 3 | import fs from 'fs';'import path from 'path';'import { fileURLToPath as _fileURLToPath } from 'url';'\n[error]     |                                                                                                     ^\n[error]   4 | console.warn('🔧 Fixing API TypeScript errors...');'\n[error]   5 | // Common patterns to fix;\n[error]   6 | const fixes = [\n[error] scripts/fix-remaining-router-imports.cjs: SyntaxError: Unexpected token, expected \",\" (28:58)\n[error]   26 |       // Replace React Router imports\n[error]   27 |       if (content.includes('import { Link } from \"react-router-dom\"')) {\n[error] > 28 |         content = content.replace('import { Link } from 'react-router-dom';, 'import Link from 'next/link';);\n[error]      |                                                          ^\n[error]   29 |         hasChanges = true;\n[error]   30 |       }\n[error]   31 |\n[error] scripts/fix-remaining-router-issues.cjs: SyntaxError: Unexpected token, expected \",\" (27:51)\n[error]   25 |     replacements: [\n[error]   26 |       {\n[error] > 27 |         from: 'import { useLocation, Link } from 'react-router-dom';,\n[error]      |                                                   ^\n[error]   28 |         to: 'import { useRouter } from \"next/router\";\\nimport Link from 'next/link';\n[error]   29 |       },\n[error]   30 |       {\n[error] scripts/fix-self-global.js: SyntaxError: Unterminated string constant. (4:58)\n[error]   2 | // This must run before any webpack chunks are loaded\n[error]   3 |\n[error] > 4 | console.warn('🔧 Applying webpack runtime polyfills...');'\n[error]     |                                                          ^\n[error]   5 | // Ensure self is defined globally in Node.js\n[error]   6 | if (typeof global !== 'undefined') {'  if (typeof global.self === 'undefined') {'    global.self = global;\n[error]   7 |     console.warn('  ✅ self -> global');'  }\n[error] scripts/generate-ai-blog-post.js: SyntaxError: Unterminated string constant. (2:41)\n[error]   1 | #!/usr/bin/env node;\n[error] > 2 | import { writeFile } from 'fs/promises';';\n[error]     |                                         ^\n[error]   3 | const OPENAI_API_KEY = process.env.OPENAI_API_KEY;\n[error]   4 |\n[error]   5 | if (!OPENAI_API_KEY) {\n[error] scripts/heal-and-deploy.js: SyntaxError: Unexpected token (8:143)\n[error]    6 |  */\n[error]    7 | ;\n[error] >  8 | const fs = require('fs');'const path = require('path');'const { execSync, spawn } = require('child_process');'const AutoFixSystem = require('./auto-fix-errors');'\n[error]      |                                                                                                                                               ^\n[error]    9 | class HealAndDeploy {\n[error]   10 |   constructor() {\n[error]   11 |     this.logFile = 'logs/heal-and-deploy.log';'    this.ensureLogDirectory();\n[error] scripts/index-elasticsearch.js: SyntaxError: Unexpected token (1:81)\n[error] > 1 | import { Client } from '@elastic/elasticsearch';'import { NEW_PRODUCTS } from '../src/data/newProductsData.js';'import { NEW_SERVICES } from '../src/data/newServicesData.js';'import { MOCK_TALENTS } from '../src/data/mockTalents.js';';\n[error]     |                                                                                 ^\n[error]   2 | const { ELASTIC_CLOUD_ID, ELASTIC_API_KEY } = process.env;\n[error]   3 |\n[error]   4 | if (!ELASTIC_CLOUD_ID || !ELASTIC_API_KEY) {\n[error] scripts/link-checker/index.js: SyntaxError: Unterminated string constant. (1:240)\n[error] > 1 | const fs = require('fs');'const _path = require('path');'const glob = require('glob');'const MarkdownIt = require('markdown-it');'const babelParser = require('@babel/parser');'const axios = require('axios');'const chalk = require('chalk');';\n[error]     |                                                                                                                                                                                                                                                ^\n[error]   2 | const md = new MarkdownIt();\n[error]   3 |\n[error]   4 | // --- Link Extraction Functions (from previous step, unchanged) ---\n[error] scripts/maintenance/generate-tests.js: SyntaxError: Unterminated string constant. (6:105)\n[error]   4 | // creates placeholder test files under __tests__/auto.\n[error]   5 | ;\n[error] > 6 | const { _execSync } = require('child_process');'const fs = require('fs');'const _path = require('path');'\n[error]     |                                                                                                         ^\n[error]   7 | // Run Jest with coverage summary\n[error]   8 | execSync('npx jest --coverage --coverageReporters=json-summary', {'  stdio: 'inherit','});\n[error]   9 | ;\n[error] scripts/mass-parsing-fixer.cjs: SyntaxError: Unterminated string constant. (66:48)\n[error]   64 |   const duplicateSemicolons = /;{2,}/g;\n[error]   65 |   if (duplicateSemicolons.test(fixed)) {\n[error] > 66 |     fixed = fixed.replace(duplicateSemicolons, ';);\n[error]      |                                                ^\n[error]   67 |     changes++;\n[error]   68 |   }\n[error]   69 |   \n[error] scripts/merge-conflict-healer.cjs: SyntaxError: Unexpected token (6:7)\n[error]   4 |           fixed = true;\n[error]   5 |         }\n[error] > 6 |       } catch (error) {\n[error]     |       ^\n[error]   7 |         this.log(`Error fixing merge conflicts in ${file}: ${error.message}`, 'ERROR');\n[error]   8 |       }\n[error]   9 |     }\n[error] scripts/monitor-backlinks.js: SyntaxError: Unterminated string constant. (9:65)\n[error]    7 |\n[error]    8 | if (!apiUrl || !apiKey) {\n[error] >  9 |   console.error('Missing BACKLINK_API_URL or BACKLINK_API_KEY');'  process.exit(1);\n[error]      |                                                                 ^\n[error]   10 | }\n[error]   11 | ;\n[error]   12 | const DATA_DIR = path.join(process.cwd(), 'seo');'const DATA_FILE = path.join(DATA_DIR, 'backlinks.json');'const REPORT_FILE = path.join(DATA_DIR, 'backlink-report.json');'\n[error] scripts/perf/monitor.js: SyntaxError: Unterminated string constant. (2:74)\n[error]   1 | const cron = require('node-cron');'const fs = require('fs');'const _path = require('path');'const { _exec } = require('child_process');';\n[error] > 2 | const BASE_URL = process.env.BACKEND_BASE_URL || 'http://localhost:3001';'const ENDPOINTS = (process.env.MONITOR_ENDPOINTS\n[error]     |                                                                          ^\n[error]   3 |   ? process.env.MONITOR_ENDPOINTS.split(',').map((p) => p.trim()).filter(Boolean)'  : ['/healthz', '/recommendations', '/sync/status']);';\n[error]   4 | const BASE_LOG_DIR = process.env.WATCHDOG_LOG_PATH || path.join(__dirname, '..', '..', 'logs');'const LOG_DIR = path.join(BASE_LOG_DIR, 'perf');'const LOG_FILE = path.join(LOG_DIR, 'hourly.log');'const MAX_LOG_SIZE = 5 * 1024 * 1024; // 5MB\n[error]   5 | ;\n[error] scripts/post-build-healer.js: SyntaxError: Unexpected token (9:143)\n[error]    7 |  */\n[error]    8 | ;\n[error] >  9 | const fs = require('fs');'const path = require('path');'const { execSync, spawn } = require('child_process');'const AutoFixSystem = require('./auto-fix-errors');'\n[error]      |                                                                                                                                               ^\n[error]   10 | class PostBuildHealer {\n[error]   11 |   constructor() {\n[error]   12 |     this.logFile = 'logs/post-build-healer.log';'    this.ensureLogDirectory();\n[error] scripts/production-readiness-implementation.cjs: SyntaxError: Unexpected token (6:1)\n[error]   4 | CI=true\n[error]   5 |\n[error] > 6 | # Build optimization flags\n[error]     | ^\n[error]   7 | SKIP_TYPE_CHECK=true\n[error]   8 | NEXT_DISABLE_CSS_INLINE=true\n[error]   9 | NEXT_DISABLE_SOURCE_MAPS=true\n[error] scripts/replace-console-statements.cjs: SyntaxError: Unexpected token, expected \"(\" (2:6)\n[error]   1 | This script replaces console.log, console.warn, console.error statements\n[error] > 2 | with production-ready logger calls from @/utils/productionLogger.\n[error]     |      ^\n[error]   3 |\n[error]   4 | Usage:\n[error]   5 |   node scripts/replace-console-statements.cjs\n[error] scripts/security-headers.js: SyntaxError: Unexpected token (5:48)\n[error]   3 | const securityHeaders = [\n[error]   4 |   {\n[error] > 5 |     key: 'X-DNS-Prefetch-Control','    value: 'on''  },\n[error]     |                                                ^\n[error]   6 |   {\n[error]   7 |     key: 'Strict-Transport-Security','    value: 'max-age=63072000; includeSubDomains; preload''  },\n[error]   8 |   {\n[error] scripts/self-grow.js: SyntaxError: Unterminated string constant. (5:64)\n[error]   3 | const OPENAI_API_KEY = process.env.OPENAI_API_KEY;\n[error]   4 | if (!OPENAI_API_KEY) {\n[error] > 5 |   console.error('Missing OPENAI_API_KEY environment variable');'  process.exit(1);\n[error]     |                                                                ^\n[error]   6 | }\n[error]   7 |\n[error]   8 | async function loadFeedback() {\n[error] scripts/setup-auth0.js: SyntaxError: Unexpected token (1:1)\n[error] > 1 | # Sentry Error Monitoring (Optional)\n[error]     | ^\n[error]   2 | # NEXT_PUBLIC_SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id\n[error]   3 |\n[error]   4 | # Reown Wallet Integration (Optional) \n[error] scripts/start-devnet.js: SyntaxError: Unterminated string constant. (2:39)\n[error]   1 | #!/usr/bin/env node;\n[error] > 2 | import { spawn } from 'child_process';';\n[error]     |                                       ^\n[error]   3 | const hardhat = spawn('npx', ['hardhat', 'node'], {'  cwd: './dao/codebase','  stdio: 'inherit''});\n[error]   4 | ;\n[error]   5 | const dev = spawn('npm', ['run', 'dev'], { stdio: 'inherit' });'\n[error] scripts/switch-netlify-site.d.ts: SyntaxError: Unterminated string literal. (1:104)\n[error] > 1 | declare module 'scripts/switch-netlify-site.js' {'  export function switchNetlifySite(): Promise<void>;\n[error]     |                                                                                                        ^\n[error]   2 | }\n[error] scripts/switch-netlify-site.js: SyntaxError: Unterminated string constant. (2:32)\n[error]   1 | #!/usr/bin/env node;\n[error] > 2 | import _process from 'process';';\n[error]     |                                ^\n[error]   3 | const {\n[error]   4 |   NETLIFY_AUTH_TOKEN: token,\n[error]   5 |   NETLIFY_PRIMARY_DOMAIN: domain,\n[error] scripts/sync-wiki-notion.js: SyntaxError: Unterminated string constant. (8:32)\n[error]    6 |   const files = await fs.readdir(WIKI_DIR);\n[error]    7 |   for (const file of files) {\n[error] >  8 |     if (file.endsWith('.md')) {'      const src = path.join(WIKI_DIR, file);\n[error]      |                                ^\n[error]    9 |       const dest = path.join(NOTION_DIR, file);\n[error]   10 |       await fs.copyFile(src, dest);\n[error]   11 |       console.warn(`Copied ${file} to docs/notion`);\n[error] scripts/test-api-performance.js: SyntaxError: Unterminated string constant. (15:43)\n[error]   13 | ;\n[error]   14 | const https = require('http');'const { performance: _performance } = require('perf_hooks');';\n[error] > 15 | const _BASE_URL = 'http://localhost:3000';'const TIMEOUT_THRESHOLD = 5000; // 5 seconds (much less than 30s mentioned in issue);\n[error]      |                                           ^\n[error]   16 | const MAX_ACCEPTABLE_TIME = 2000; // 2 seconds for cached responses\n[error]   17 |\n[error]   18 | // Test endpoints that were timing out;\n[error] scripts/test-login-trace.js: SyntaxError: Unterminated string constant. (9:43)\n[error]    7 |  */\n[error]    8 | ;\n[error] >  9 | const BASE_URL = '_http://localhost:3000';'\n[error]      |                                           ^\n[error]   10 | // 🔐 SECURITY: Generate test cases from environment variables;\n[error]   11 | const getTestCases = () => {\n[error]   12 |   // Only run in development mode\n[error] scripts/test-root-path.js: SyntaxError: Unexpected token, expected \",\" (10:32)\n[error]    8 | const http = require('http');'const https = require('https');';\n[error]    9 | const TEST_URLS = [\n[error] > 10 |   'http://localhost:3000/','  'http://localhost:3000/home',  // Should redirect to /'  'http://localhost:3000', // Without trailing slash'];\n[error]      |                                ^\n[error]   11 | ;\n[error]   12 | function makeRequest(url) {\n[error]   13 |   return new Promise((resolve, reject) => {\n[error] scripts/train-zion-gpt.js: SyntaxError: Unterminated string constant. (2:118)\n[error]   1 | #!/usr/bin/env node;\n[error] > 2 | import { readFile, writeFile } from 'fs/promises';'import { execSync } from 'child_process';'import path from 'path';';\n[error]     |                                                                                                                      ^\n[error]   3 | const OPENAI_API_KEY = process.env.OPENAI_API_KEY;\n[error]   4 | if (!OPENAI_API_KEY) {\n[error]   5 |   console.error('Missing OPENAI_API_KEY environment variable');'  process.exit(1);\n[error] scripts/update-icon-imports.js: SyntaxError: Unterminated string constant. (14:55)\n[error]   12 | function updateIconImportsInFile(filePath) {\n[error]   13 |   try {\n[error] > 14 |     const content = fs.readFileSync(filePath, 'utf8');'    \n[error]      |                                                       ^\n[error]   15 |     // Replace direct lucide imports with our custom icons\n[error]   16 |     const updatedContent = content.replace(\n[error]   17 |       /import\\s+{([^}]*)}\\s+from\\s+['\"]lucide-react['\"]/g,\"      'import {$1} from \"@/components/icons\"''    );\n[error] scripts/validate-environment.ts: SyntaxError: ';' expected. (14:51)\n[error]   12 |  */\n[error]   13 | ;\n[error] > 14 | import { z } from 'zod';'import * as dotenv from 'dotenv';'import path from 'path';'import fs from 'fs';'import { fileURLToPath } from 'url';'\n[error]      |                                                   ^\n[error]   15 | // ES module compatibility;\n[error]   16 | const __filename = fileURLToPath(import.meta.url);\n[error]   17 | const __dirname = path.dirname(__filename);\n[error] scripts/verify-production.js: SyntaxError: Unterminated string constant. (8:77)\n[error]    6 |  */\n[error]    7 | ;\n[error] >  8 | const BASE_URL = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000';';\n[error]      |                                                                             ^\n[error]    9 | const ROUTES_TO_TEST = [\n[error]   10 |   '/','  '/about','  '/marketplace', '  '/services','  '/contact','  '/login','  '/signup''];\n[error]   11 | ;\n[error] scripts/verify-staging.js: SyntaxError: Unterminated string constant. (9:88)\n[error]    7 | ;\n[error]    8 | const https = require('https');'const http = require('http');';\n[error] >  9 | const STAGING_URL = process.env.STAGING_URL || 'https://staging-app.ziontechgroup.com';'const TIMEOUT = 10000; // 10 seconds\n[error]      |                                                                                        ^\n[error]   10 |\n[error]   11 | // Critical routes to test;\n[error]   12 | const CRITICAL_ROUTES = [\n[error] scripts/watchdog.config.js: SyntaxError: Unexpected token (20:161)\n[error]   18 |   \n[error]   19 |   // Log file patterns\n[error] > 20 |   PERF_ERROR_REGEX: new RegExp(process.env.WATCHDOG_PERF_PATTERN || 'error', 'i'),'  SECURITY_PATCH_REGEX: new RegExp(process.env.WATCHDOG_SECURITY_PATTERN || 'patch', 'i'),'  \n[error]      |                                                                                                                                                                 ^\n[error]   21 |   // Self-heal command\n[error]   22 |   HEAL_COMMAND: process.env.WATCHDOG_HEAL_COMMAND || 'git pull && npm install && npm run build && pm2 restart all','  \n[error]   23 |   // Logging\n[error] scripts/watchdog.js: SyntaxError: Unterminated string constant. (12:219)\n[error]   10 |  */\n[error]   11 | ;\n[error] > 12 | import { Tail } from 'tail';'import path from 'path';'import { exec } from 'child_process';'import fs from 'fs';'import os from 'os-utils';'import axios from 'axios';'import { pathToFileURL, fileURLToPath } from 'url';'\n[error]      |                                                                                                                                                                                                                           ^\n[error]   13 | // Linter workaround: define unused variables to satisfy no-undef errors\n[error]   14 | // These are not referenced anywhere in the code, but the linter incorrectly reports them as undefined.\n[error]   15 |  ;\n[error] scripts/watchdog.test.js: SyntaxError: Unterminated string constant. (26:27)\n[error]   24 |   _resetStateForTests,\n[error]   25 |   _getConstantsForTests\n[error] > 26 | } = require('./watchdog');'\n[error]      |                           ^\n[error]   27 | // Mock external dependencies\n[error]   28 | jest.mock('os-utils');'jest.mock('child_process');'jest.mock('axios');'\n[error]   29 | // Mock functions from watchdog.js that are called by other watchdog.js functions\n[error] sdk/js/auth/index.js: SyntaxError: Unterminated string constant. (11:52)\n[error]    9 | // In a real app, next-auth/react's getCsrfToken() is preferred.'async function getCsrfToken() {\n[error]   10 |   try {\n[error] > 11 |     const response = await fetch('/api/auth/csrf');'    if (!response.ok) return null;\n[error]      |                                                    ^\n[error]   12 |     const data = await response.json();\n[error]   13 |     return data.csrfToken;\n[error]   14 |   } catch {\n[error] sdk/js/marketplace/index.js: SyntaxError: Unterminated string constant. (39:99)\n[error]   37 |\n[error]   38 |   if (!response.ok) {\n[error] > 39 |     const errorData = await response.json().catch(() => ({ message: 'Failed to list products' }));'    throw new Error(errorData.message || `Failed to list products. Status: ${response.status}`);\n[error]      |                                                                                                   ^\n[error]   40 |   }\n[error]   41 |\n[error]   42 |   return response.json();\n[error] seed.js: SyntaxError: Unterminated string constant. (1:47)\n[error] > 1 | import { PrismaClient } from '@prisma/client';'const prisma = new PrismaClient();\n[error]     |                                               ^\n[error]   2 |\n[error]   3 | async function main() {\n[error]   4 |   const products = [\n[error] seed.ts: SyntaxError: Unterminated string literal. (1:82)\n[error] > 1 | import { PrismaClient } from '@prisma/client';'const prisma = new PrismaClient();\n[error]     |                                                                                  ^\n[error]   2 |\n[error]   3 | async function main() {\n[error]   4 |   const products = [\n[error] sentry.ts: SyntaxError: Unterminated string literal. (7:63)\n[error]    5 |   if (Sentry) return Sentry;\n[error]    6 |   try {\n[error] >  7 |     Sentry = await import(\"@sentry/nextjs\");\"    if (Sentry) {\n[error]      |                                                               ^\n[error]    8 |       // console.log('Real Sentry SDK loaded.'); // Removed'    } else {\n[error]    9 |       throw new Error('@sentry/nextjs import returned null/undefined');'    }\n[error]   10 |   } catch {\n[error] server/config/index.js: SyntaxError: Unterminated string constant. (2:34)\n[error]   1 |  ;\n[error] > 2 | const dotenv = require('dotenv');'\n[error]     |                                  ^\n[error]   3 | // Load environment variables from .env if present\n[error]   4 | dotenv.config();\n[error]   5 | ;\n[error] server/controllers/authController.js: SyntaxError: Unexpected token (6:147)\n[error]   4 |   return { success: true, user: userData };\n[error]   5 | };\n[error] > 6 | const jwt = require('jsonwebtoken');'const bcrypt = require('bcryptjs');'const User = require('../models/User');'const { _jwtSecret } = require('../config');'\n[error]     |                                                                                                                                                   ^\n[error]   7 | if (!jwtSecret) {\n[error]   8 |   throw new Error('JWT_SECRET not defined');'}\n[error]   9 | ;\n[error] server/controllers/syncController.js: SyntaxError: Unterminated string constant. (1:49)\n[error] > 1 | const syncStore = require('../utils/syncStore');'\n[error]     |                                                 ^\n[error]   2 | // Merge incoming arrays by id to avoid duplicates;\n[error]   3 | function mergeRecords(targetMap, incoming) {\n[error]   4 |   incoming.forEach((item) => {\n[error] server/models/Feedback.js: SyntaxError: Unterminated string constant. (1:38)\n[error] > 1 | const mongoose = require('mongoose');';\n[error]     |                                      ^\n[error]   2 | const feedbackSchema = new mongoose.Schema({\n[error]   3 |   rating: { type: Number, required: true, min: 1, max: 5 },\n[error]   4 |   comment: { type: String },\n[error] server/models/Item.js: SyntaxError: Unterminated string constant. (1:38)\n[error] > 1 | const mongoose = require('mongoose');';\n[error]     |                                      ^\n[error]   2 | const itemSchema = new mongoose.Schema({\n[error]   3 |   title: { type: String, required: true },\n[error]   4 |   category: { type: String, required: true },\n[error] server/models/Subscription.js: SyntaxError: Unterminated string constant. (1:38)\n[error] > 1 | const mongoose = require('mongoose');';\n[error]     |                                      ^\n[error]   2 | const subscriptionSchema = new mongoose.Schema({\n[error]   3 |   userId: {\n[error]   4 |     type: mongoose.Schema.Types.ObjectId,\n[error] server/models/User.js: SyntaxError: Unterminated string constant. (35:40)\n[error]   33 |\n[error]   34 | // Middleware to update `updatedAt` field before saving\n[error] > 35 | userSchema.pre('save', function(next) {'  if (this.isModified()) { // only update if something changed\n[error]      |                                        ^\n[error]   36 |     this.updatedAt = Date.now();\n[error]   37 |   }\n[error]   38 |   next();\n[error] server/routes/alerts.js: SyntaxError: Unterminated string constant. (1:36)\n[error] > 1 | const express = require('express');'const router = express.Router();\n[error]     |                                    ^\n[error]   2 | const { _sendSlackAlert } = require('../../src/integrations/slack/bot'); // Adjust path as needed'\n[error]   3 | router.post('/notify-slack', async (req, res) => {'  const { ip_address, route, reason, timestamp } = req.body;\n[error]   4 |\n[error] server/routes/auth.js: SyntaxError: Unterminated string constant. (6:163)\n[error]   4 |   return { success: true, user: userData };\n[error]   5 | };\n[error] > 6 | const express = require('express');'const rateLimit = require('express-rate-limit');'const { loginUser, registerUser } = require('../controllers/authController');';\n[error]     |                                                                                                                                                                   ^\n[error]   7 | const router = express.Router();\n[error]   8 | const authLimiter = rateLimit({\n[error]   9 |   windowMs: 15 * 60 * 1000, // 15 minutes\n[error] server/routes/authSocial.js: SyntaxError: Unterminated string constant. (1:376)\n[error] > 1 | const express = require('express');'const passport = require('passport');'const jwt = require('jsonwebtoken');'const GoogleStrategy = require('passport-google-oauth20').Strategy;'const FacebookStrategy = require('passport-facebook').Strategy;'const TwitterStrategy = require('passport-twitter').Strategy;'const LinkedInStrategy = require('passport-linkedin-oauth2').Strategy;';\n[error]     |                                                                                                                                                                                                                                                                                                                                                                                        ^\n[error]   2 | const router = express.Router();\n[error]   3 | ;\n[error]   4 | const JWT_SECRET = process.env.JWT_SECRET || 'changeme';'\n[error] server/routes/items.js: SyntaxError: Unexpected token (1:60)\n[error] > 1 | const express = require('express');'const Item = require('../models/Item');'const cache = require('../utils/cache');';\n[error]     |                                                            ^\n[error]   2 | const router = express.Router();\n[error]   3 |\n[error]   4 | router.get('/', cache, async (req, res) => {'  try {\n[error] server/routes/recommendations.js: SyntaxError: Unterminated string constant. (1:36)\n[error] > 1 | const express = require('express');';\n[error]     |                                    ^\n[error]   2 | const cache = require('../utils/cache');'const router = express.Router();\n[error]   3 |\n[error]   4 | router.get('/', cache, (_req, res) =>'  res.json([\n[error] server/routes/stripe.js: SyntaxError: Unterminated string constant. (1:36)\n[error] > 1 | const express = require('express');'const router = express.Router();\n[error]     |                                    ^\n[error]   2 | const stripe = require('stripe'); // Import the stripe library'const User = require('../models/User'); // Assuming you have a User model'const Subscription = require('../models/Subscription'); // Assuming you have a Subscription model';\n[error]   3 | const PROD_DOMAIN = 'app.ziontechgroup.com';'function isProdDomain() {\n[error]   4 |   const context = process.env.CONTEXT;\n[error] server/routes/sync.js: SyntaxError: Unexpected token (1:91)\n[error] > 1 | const express = require('express');'const { receiveSyncUpdate, getSyncState } = require('../controllers/syncController');';\n[error]     |                                                                                           ^\n[error]   2 | const router = express.Router();\n[error]   3 |\n[error]   4 | // Fetch current sync state\n[error] server/stubServer.js: SyntaxError: Unterminated string constant. (1:36)\n[error] > 1 | const express = require('express');';\n[error]     |                                    ^\n[error]   2 | const app = express();\n[error]   3 |\n[error]   4 | app.get('/hello', (req, res) => {'  res.json({ message: 'Hello world' });'});\n[error] server/utils/alertLogger.js: SyntaxError: Unterminated string constant. (1:99)\n[error] > 1 | const fs = require('fs');'const _path = require('path');'const sgMail = require('@sendgrid/mail');';\n[error]     |                                                                                                   ^\n[error]   2 | const logDir = path.resolve(__dirname, '..', 'logs');'// Daily log file for easier log rotation and analysis;\n[error]   3 | function getLogFilePath() {\n[error]   4 |   const date = new Date().toISOString().slice(0, 10); // yyyy-mm-dd\n[error] server/utils/cache.js: SyntaxError: Unterminated string constant. (1:41)\n[error] > 1 | const NodeCache = require('node-cache');'\n[error]     |                                         ^\n[error]   2 | // Create a cache instance with default TTL of 5 minutes;\n[error]   3 | const cache = new NodeCache({ stdTTL: 300, checkperiod: 320 });\n[error]   4 |\n[error] stackbit.config.ts: SyntaxError: Unterminated string literal. (1:58)\n[error] > 1 | import { defineStackbitConfig } from '@stackbit/types';';\n[error]     |                                                          ^\n[error]   2 | export default defineStackbitConfig({\n[error]   3 |     \"stackbitVersion\": \"~0.6.0\",\"    \"nodeVersion\": \"18\",\"    \"ssgName\": \"custom\",\"    \"contentSources\": [],\"    \"postInstallCommand\": \"npm i --no-save @stackbit/types\"\"})\n[error] stories/Pagination.stories.tsx: SyntaxError: ';' expected. (1:79)\n[error] > 1 | import React, { useState } from 'react';'import type { Meta, StoryObj } from '@storybook/react';'import {;  Pagination,\n[error]     |                                                                               ^\n[error]   2 |   PaginationContent,\n[error]   3 |   PaginationItem,\n[error]   4 |   PaginationButton,\n[error] stories/TalentProfilePage.stories.tsx: SyntaxError: ';' expected. (1:65)\n[error] > 1 | import React from 'react';'import type { Meta, StoryObj } from '@storybook/react';'import { MemoryRouter, Routes, Route } from 'react-router-dom';'import TalentProfilePage from '../pages/talent/[id]';';\n[error]     |                                                                 ^\n[error]   2 | const sampleTalent = {\n[error]   3 |   id: 't-001','  user_id: 'user-001','  full_name: 'Sample Talent','  professional_title: 'Software Engineer','  skills: ['React', 'TypeScript'],'  availability_type: 'full_time','};\n[error]   4 | ;\n[error] supabase/functions/_shared/cors.ts: SyntaxError: ':' expected. (3:42)\n[error]   1 |\n[error]   2 | export const corsHeaders = {\n[error] > 3 |   'Access-Control-Allow-Origin': '*','  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type','  'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS','};\n[error]     |                                          ^\n[error]   4 |\n[error] supabase/functions/_shared/shippo.ts: SyntaxError: Unterminated string literal. (12:73)\n[error]   10 | }\n[error]   11 | ;\n[error] > 12 | const token = Deno.env.get('SHIPPO_TOKEN') || '';'const FROM_ADDRESS = {\n[error]      |                                                                         ^\n[error]   13 |   name: Deno.env.get('SHIPPO_FROM_NAME') || 'Sender','  street1: Deno.env.get('SHIPPO_FROM_STREET') || '','  city: Deno.env.get('SHIPPO_FROM_CITY') || '','  state: Deno.env.get('SHIPPO_FROM_STATE') || '','  zip: Deno.env.get('SHIPPO_FROM_ZIP') || '','  country: Deno.env.get('SHIPPO_FROM_COUNTRY') || 'US''};\n[error]   14 | ;\n[error]   15 | export async function createShippoShipment(params: ShippoCreateShipmentParams): Promise<ShippoShipment> {\n[error] supabase/functions/ai-chat/index.ts: SyntaxError: ';' expected. (2:71)\n[error]   1 |\n[error] > 2 | import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\";\n[error]     |                                                                       ^\n[error]   3 | const openAIApiKey = Deno.env.get('OPENAI_API_KEY');';\n[error]   4 | const corsHeaders = {\n[error]   5 |   'Access-Control-Allow-Origin': '*','  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type','};\n[error] supabase/functions/ai-content-enhancer/index.ts: SyntaxError: ';' expected. (2:71)\n[error]   1 |\n[error] > 2 | import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\";\n[error]     |                                                                       ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/ai-listing-generator/index.ts: SyntaxError: ';' expected. (2:113)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { Configuration, OpenAIApi } from \"npm:openai@4.28.0\";\";\n[error]     |                                                                                                                 ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/ai-search/index.ts: SyntaxError: ';' expected. (2:113)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { Configuration, OpenAIApi } from \"npm:openai@4.28.0\";\";\n[error]     |                                                                                                                 ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/analyze-content-fraud/index.ts: SyntaxError: ';' expected. (2:102)\n[error]   1 |\n[error] > 2 | import { serve } from \"_https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.38.4\";\"import { corsHeaders } from \"../_shared/cors.ts\";\"\n[error]     |                                                                                                      ^\n[error]   3 | interface AnalyzeRequest {\n[error]   4 |   content: string;\n[error]   5 |   contentType: string;\n[error] supabase/functions/api-key-manager/index.ts: SyntaxError: Unterminated string literal. (2:147)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.177.0/http/server.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.38.0';'\n[error]     |                                                                                                                                                   ^\n[error]   3 | interface CreateKeyRequest {\n[error]   4 |   name: string;\n[error]   5 |   scopes: string[];\n[error] supabase/functions/check-training-status/index.ts: SyntaxError: ';' expected. (1:79)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                               ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/checkout_sessions/index.ts: SyntaxError: ';' expected. (1:91)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import Stripe from \"https://esm.sh/stripe@14.21.0\";\";\n[error]     |                                                                                           ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/create-checkout/index.ts: SyntaxError: ';' expected. (2:91)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import Stripe from \"https://esm.sh/stripe@14.21.0\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\";\n[error]     |                                                                                           ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/create-shared-whitepaper/index.test.ts: SyntaxError: ';' expected. (1:141)\n[error] > 1 | import { assertEquals, assertExists, assertStringIncludes } from \"https://deno.land/std@0.190.0/testing/asserts.ts\";\"import { sinon } from \"https://deno.land/x/sinon@v.1.13.0/mod.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'import { v4 as uuidv4 } from \"https://deno.land/std@0.83.0/uuid/mod.ts\";\"\n[error]     |                                                                                                                                             ^\n[error]   2 |\n[error]   3 | // --- Global Mocks & Setup ---;\n[error]   4 | let mockSupabaseAdminClient_CreateShared: unknown;\n[error] supabase/functions/create-shared-whitepaper/index.ts: SyntaxError: ';' expected. (1:172)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'import { v4 as uuidv4 } from \"https://deno.land/std@0.83.0/uuid/mod.ts\"; // For generating unique IDs\"import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                                                                                                                            ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/cron-daily-retention/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\"\n[error]     |                                                                                                     ^\n[error]   3 | // Initialize Supabase client;\n[error]   4 | const supabaseUrl = Deno.env.get(\"SUPABASE_URL\") ?? \"\";\"const supabaseServiceKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\") ?? \"\";\"const supabase = createClient(supabaseUrl, supabaseServiceKey);\n[error]   5 |\n[error] supabase/functions/cron-monthly-leaderboard/index.ts: SyntaxError: Unterminated string literal. (1:72)\n[error] > 1 | import { serve } from \"_https://deno.land/std@0.190.0/http/server.ts\";\"\n[error]     |                                                                        ^\n[error]   2 | serve(async (req) => {\n[error]   3 |   if (req.method !== \"POST\") {\"    return new Response(\"Method Not Allowed\", { status: 405 });\"  }\n[error]   4 |\n[error] supabase/functions/escrow-service/index.ts: SyntaxError: ';' expected. (1:92)\n[error] > 1 | import { serve } from \"_https://deno.land/std@0.190.0/http/server.ts\";\"import Stripe from \"https://esm.sh/stripe@14.21.0\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\"import { corsHeaders } from \"../_shared/cors.ts\";\"\n[error]     |                                                                                            ^\n[error]   2 | serve(async (req) => {\n[error]   3 |   if (req.method === \"OPTIONS\") {\"    return new Response(null, { headers: corsHeaders });\n[error]   4 |   }\n[error] supabase/functions/founder-bot/index.ts: SyntaxError: ';' expected. (2:71)\n[error]   1 |\n[error] > 2 | import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\";\n[error]     |                                                                       ^\n[error]   3 | const openAIApiKey = Deno.env.get('OPENAI_API_KEY');';\n[error]   4 | const corsHeaders = {\n[error]   5 |   'Access-Control-Allow-Origin': '*','  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type','};\n[error] supabase/functions/generate-content/index.ts: SyntaxError: ';' expected. (2:79)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                               ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/generate-contract/index.ts: SyntaxError: ';' expected. (2:79)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                               ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   'Access-Control-Allow-Origin': '*','  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type','};\n[error]   5 |\n[error] supabase/functions/generate-milestones/index.ts: SyntaxError: ';' expected. (2:79)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                               ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   'Access-Control-Allow-Origin': '*','  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type','};\n[error]   5 |\n[error] supabase/functions/generate-seo-content/index.ts: SyntaxError: ';' expected. (2:69)\n[error]   1 | // supabase/functions/generate-seo-content/index.ts;\n[error] > 2 | import { serve } from 'https://deno.land/std@0.177.0/http/server.ts''import { OpenAI } from 'https://esm.sh/openai@4.20.0' // Using version from example'import { corsHeaders } from '../_shared/cors.ts'';\n[error]     |                                                                     ^\n[error]   3 | const FINE_TUNED_MODEL_ID = \"gpt-3.5-turbo\"; // Placeholder - Replace with actual fine-tuned model ID\"const OPENAI_API_KEY = Deno.env.get(\"OPENAI_API_KEY\");\"\n[error]   4 | serve(async (req) => {\n[error]   5 |   const requestTimestamp = new Date().toISOString();\n[error] supabase/functions/generate-service-description/index.ts: SyntaxError: ';' expected. (2:113)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { Configuration, OpenAIApi } from \"npm:openai@4.28.0\";\";\n[error]     |                                                                                                                 ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/generate-smart-contract/index.ts: SyntaxError: ';' expected. (2:79)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                               ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   'Access-Control-Allow-Origin': '*','  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type','};\n[error]   5 |\n[error] supabase/functions/generate-whitepaper/index.test.ts: SyntaxError: ';' expected. (1:127)\n[error] > 1 | import { assertEquals, assertStringIncludes } from \"https://deno.land/std@0.190.0/testing/asserts.ts\";\"import { sinon } from \"https://deno.land/x/sinon@v.1.13.0/mod.ts\"; // Using sinon for more robust mocking if needed\"import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\"; // To mock serve if directly testing HTTP part\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'\n[error]     |                                                                                                                               ^\n[error]   2 | // Mock createClient and its chained methods;\n[error]   3 | let mockSupabaseClient: any;\n[error]   4 | const mockInvoke = sinon.stub();\n[error] supabase/functions/generate-whitepaper/index.ts: SyntaxError: ';' expected. (1:150)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                                                                                                      ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/get_event_distribution/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\";\n[error]     |                                                                                                     ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/get_feature_usage_stats/index.ts: SyntaxError: ';' expected. (1:101)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\";\n[error]     |                                                                                                     ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/get-shared-whitepaper/index.test.ts: SyntaxError: ';' expected. (1:127)\n[error] > 1 | import { assertEquals, assertStringIncludes } from \"https://deno.land/std@0.190.0/testing/asserts.ts\";\"import { sinon } from \"https://deno.land/x/sinon@v.1.13.0/mod.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'\n[error]     |                                                                                                                               ^\n[error]   2 | // --- Global Mocks & Setup ---;\n[error]   3 | let mockSupabaseClient_GetShared: unknown;\n[error]   4 | const mockFrom_GetShared = sinon.stub();\n[error] supabase/functions/get-shared-whitepaper/index.ts: SyntaxError: ';' expected. (1:150)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                                                                                                      ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/get-whitepaper-section-suggestions/index.test.ts: SyntaxError: ';' expected. (1:127)\n[error] > 1 | import { assertEquals, assertStringIncludes } from \"https://deno.land/std@0.190.0/testing/asserts.ts\";\"import { sinon } from \"https://deno.land/x/sinon@v.1.13.0/mod.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'\n[error]     |                                                                                                                               ^\n[error]   2 | // --- Global Mocks & Setup ---;\n[error]   3 | let mockSupabaseClientSuggestions: unknown;\n[error]   4 | const mockInvokeSuggestions = sinon.stub();\n[error] supabase/functions/get-whitepaper-section-suggestions/index.ts: SyntaxError: ';' expected. (1:150)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                                                                                                      ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/job-talent-matcher/ai-matcher.ts: SyntaxError: Unterminated string literal. (2:67)\n[error]   1 |\n[error] > 2 | import { JobData, TalentProfile, MatchResult } from \"./types.ts\";\"\n[error]     |                                                                   ^\n[error]   3 | // Get openAI API key from environment variables;\n[error]   4 | const openAiApiKey = Deno.env.get(\"OPENAI_API_KEY\") || \"\";\"\n[error]   5 | // Define job details interface\n[error] supabase/functions/job-talent-matcher/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\"import { processJobMatching, storeMatchResults } from \"./job-matching.ts\";\";\n[error]     |                                                                                                     ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/job-talent-matcher/job-matching.ts: SyntaxError: Identifier expected. (2:126)\n[error]   1 |\n[error] > 2 | import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\"import { JobData, MatchResult, TalentProfile } from \"./types.ts\";\"import { normalizeSkillsWithAI, findBestMatches } from \"./ai-matcher.ts\";\"\n[error]     |                                                                                                                              ^\n[error]   3 | // Initialize the Supabase client;\n[error]   4 | const supabaseUrl = Deno.env.get(\"SUPABASE_URL\") || \"\";\"const supabaseAnonKey = Deno.env.get(\"SUPABASE_ANON_KEY\") || \"\";\"const supabase = createClient(supabaseUrl, supabaseAnonKey);\n[error]   5 |\n[error] supabase/functions/mailchimp-export-segments/index.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { serve } from \"_https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\"import { MailchimpService } from \"../../..//src/integrations/mailchimp/MailchimpService.ts\";\"\n[error]     |                                                                                                      ^\n[error]   2 | serve(async () => {\n[error]   3 |   try {\n[error]   4 |     const supabase = createClient(\n[error] supabase/functions/mailchimp-sync-new-users/index.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { serve } from \"_https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\"import { MailchimpService } from \"../../..//src/integrations/mailchimp/MailchimpService.ts\";\"\n[error]     |                                                                                                      ^\n[error]   2 | serve(async (req) => {\n[error]   3 |   try {\n[error]   4 |     const supabase = createClient(\n[error] supabase/functions/manage-transaction/index.ts: SyntaxError: ';' expected. (2:91)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import Stripe from \"https://esm.sh/stripe@14.21.0\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\";\n[error]     |                                                                                           ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/moderate-listing/index.ts: SyntaxError: ';' expected. (1:101)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\";\n[error]     |                                                                                                     ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/notify-legal-team/index.test.ts: SyntaxError: ';' expected. (1:127)\n[error] > 1 | import { assertEquals, assertStringIncludes } from \"https://deno.land/std@0.190.0/testing/asserts.ts\";\"import { sinon } from \"https://deno.land/x/sinon@v.1.13.0/mod.ts\";\"\n[error]     |                                                                                                                               ^\n[error]   2 | // For this function, we are not mocking Supabase client calls as it doesn't make any in the basic version.'// We will spy on console.log to ensure it logs the correct information.\n[error]   3 |\n[error]   4 | // Simplified handler for notify-legal-team\n[error] supabase/functions/notify-legal-team/index.ts: SyntaxError: ';' expected. (1:150)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                                                                                                      ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/notify-milestone-deadlines/index.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { serve } from \"_https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\"import { corsHeaders } from \"../_shared/cors.ts\";\"\n[error]     |                                                                                                      ^\n[error]   2 | serve(async (req) => {\n[error]   3 |   if (req.method === \"OPTIONS\") {\"    return new Response(null, { headers: corsHeaders });\n[error]   4 |   }\n[error] supabase/functions/onsite-service-request/index.ts: SyntaxError: ';' expected. (1:101)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\";\n[error]     |                                                                                                     ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/personalize-email/index.ts: SyntaxError: ';' expected. (2:71)\n[error]   1 |\n[error] > 2 | import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\"import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\";\n[error]     |                                                                       ^\n[error]   3 | const openAIApiKey = Deno.env.get(\"OPENAI_API_KEY\");\";\n[error]   4 | const corsHeaders = {\n[error]   5 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error] supabase/functions/process-hire-request/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\"import { Configuration, OpenAIApi } from \"https://esm.sh/openai@3.2.1\";\";\n[error]     |                                                                                                     ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/process-quote/index.ts: SyntaxError: ';' expected. (2:71)\n[error]   1 |\n[error] > 2 | import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.7.1\";\";\n[error]     |                                                                       ^\n[error]   3 | const openAIApiKey = Deno.env.get('OPENAI_API_KEY');'const supabaseUrl = Deno.env.get('SUPABASE_URL') || '';'const supabaseServiceKey = Deno.env.get('SUPABASE_SERVICE_ROLE_KEY') || '';';\n[error]   4 | const supabase = createClient(supabaseUrl, supabaseServiceKey);\n[error]   5 | ;\n[error] supabase/functions/process-retention-emails/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\"\n[error]     |                                                                                                     ^\n[error]   3 | // Initialize Supabase client;\n[error]   4 | const supabaseUrl = Deno.env.get(\"SUPABASE_URL\")!;\"const supabaseServiceKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\")!;\"const supabase = createClient(supabaseUrl, supabaseServiceKey);\n[error]   5 | ;\n[error] supabase/functions/process-scheduled-jobs/index.ts: SyntaxError: ';' expected. (1:101)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\";\n[error]     |                                                                                                     ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/process-scheduled-reminders/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.7.1\";\";\n[error]     |                                                                                                     ^\n[error]   3 | const supabaseUrl = Deno.env.get(\"SUPABASE_URL\")!;\"const supabaseServiceKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\")!;\";\n[error]   4 | const corsHeaders = {\n[error]   5 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\":\"    \"authorization, x-client-info, apikey, content-type\",\"};\n[error] supabase/functions/profile-summary-generator/index.ts: SyntaxError: ';' expected. (2:71)\n[error]   1 |\n[error] > 2 | import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.7.1';';\n[error]     |                                                                       ^\n[error]   3 | const OPENAI_API_KEY = Deno.env.get('OPENAI_API_KEY');';\n[error]   4 | const corsHeaders = {\n[error]   5 |   'Access-Control-Allow-Origin': '*','  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type','};\n[error] supabase/functions/resume-enhancer/index.ts: SyntaxError: ';' expected. (2:71)\n[error]   1 |\n[error] > 2 | import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\";\n[error]     |                                                                       ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/resume-scorer/index.ts: SyntaxError: ';' expected. (2:71)\n[error]   1 |\n[error] > 2 | import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\";\n[error]     |                                                                       ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/send-email/index.ts: SyntaxError: ';' expected. (2:95)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { Resend } from \"npm:resend@2.0.0\";\";\n[error]     |                                                                                               ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 | ;\n[error] supabase/functions/send-interview-reminder/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\"import { Resend } from \"npm:resend@2.0.0\";\";\n[error]     |                                                                                                     ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 | ;\n[error] supabase/functions/send-leaderboard-email/index.ts: SyntaxError: ';' expected. (1:101)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\"import { Resend } from \"npm:resend@2.0.0\";\";\n[error]     |                                                                                                     ^\n[error]   2 | const resend = new Resend(Deno.env.get(\"RESEND_API_KEY\"));\"const supabaseUrl = Deno.env.get(\"SUPABASE_URL\") ?? \"\";\"const serviceKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\") ?? \"\";\"const supabase = createClient(supabaseUrl, serviceKey);\n[error]   3 | ;\n[error]   4 | const corsHeaders = {\n[error] supabase/functions/send-newsletter/index.ts: SyntaxError: ';' expected. (2:95)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { Resend } from \"npm:resend@2.0.0\";\";\n[error]     |                                                                                               ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/send-notification-email/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\";\n[error]     |                                                                                                     ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] supabase/functions/send-onboarding-reminder/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.7.1\";\"import { Resend } from \"npm:resend@1.0.0\";\";\n[error]     |                                                                                                     ^\n[error]   3 | const resend = new Resend(Deno.env.get(\"RESEND_API_KEY\"));\"const supabaseUrl = Deno.env.get(\"SUPABASE_URL\")!;\"const supabaseServiceKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\")!;\";\n[error]   4 | const corsHeaders = {\n[error]   5 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\":\"    \"authorization, x-client-info, apikey, content-type\",\"};\n[error] supabase/functions/send-retention-email/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\"import { Resend } from \"npm:resend@2.0.0\";\"\n[error]     |                                                                                                     ^\n[error]   3 | // Initialize Resend with API key;\n[error]   4 | const resend = new Resend(Deno.env.get(\"RESEND_API_KEY\"));\"\n[error]   5 | // Initialize Supabase client;\n[error] supabase/functions/service-profile-enhancer/index.ts: SyntaxError: Unterminated string literal. (2:72)\n[error]   1 |\n[error] > 2 | import { serve } from \"_https://deno.land/std@0.177.0/http/server.ts\";\"\n[error]     |                                                                        ^\n[error]   3 | interface ServiceProfileData {\n[error]   4 |   name: string;\n[error]   5 |   title: string;\n[error] supabase/functions/set-shared-whitepaper-public-status/index.test.ts: SyntaxError: ';' expected. (1:141)\n[error] > 1 | import { assertEquals, assertStringIncludes, assertExists } from \"https://deno.land/std@0.190.0/testing/asserts.ts\";\"import { sinon } from \"https://deno.land/x/sinon@v.1.13.0/mod.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'\n[error]     |                                                                                                                                             ^\n[error]   2 | // --- Global Mocks & Setup ---;\n[error]   3 | let mockSupabaseAdminClient_SetStatus: unknown;\n[error]   4 | const mockFrom_SetStatus = sinon.stub();\n[error] supabase/functions/set-shared-whitepaper-public-status/index.ts: SyntaxError: ';' expected. (1:150)\n[error] > 1 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';'import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                                                                                                      ^\n[error]   2 | const corsHeaders = {\n[error]   3 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   4 |\n[error] supabase/functions/share-blog-post/index.ts: SyntaxError: ';' expected. (1:100)\n[error] > 1 | import { serve } from \"_https://deno.land/std@0.190.0/http/server.ts\";\"import { TwitterApi } from \"npm:twitter-api-v2@1.2.0\";\"import { corsHeaders } from \"../_shared/cors.ts\";\"\n[error]     |                                                                                                    ^\n[error]   2 | interface ShareBlogPostRequest {\n[error]   3 |   title: string;\n[error]   4 |   url: string;\n[error] supabase/functions/stripe-webhook/index.ts: SyntaxError: ';' expected. (1:91)\n[error] > 1 | import { serve } from 'https://deno.land/std@0.190.0/http/server.ts';'import Stripe from 'https://esm.sh/stripe@14.21.0';'import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.45.0';'import { createShippoShipment } from '../_shared/shippo.ts';';\n[error]     |                                                                                           ^\n[error]   2 | const supabase = createClient(\n[error]   3 |   Deno.env.get('SUPABASE_URL') ?? '','  Deno.env.get('SUPABASE_SERVICE_ROLE_KEY') ?? '','  { auth: { persistSession: false } },\n[error]   4 | );\n[error] supabase/functions/talent-profile-enhancer/index.ts: SyntaxError: ';' expected. (2:71)\n[error]   1 |\n[error] > 2 | import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.7.1';';\n[error]     |                                                                       ^\n[error]   3 | const OPENAI_API_KEY = Deno.env.get('OPENAI_API_KEY');';\n[error]   4 | const corsHeaders = {\n[error]   5 |   'Access-Control-Allow-Origin': '*','  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type','};\n[error] supabase/functions/tenant-detector/index.ts: SyntaxError: ';' expected. (1:101)\n[error] > 1 | import { serve } from 'https://deno.land/std@0.208.0/http/server.ts';'import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.39.7';'\n[error]     |                                                                                                     ^\n[error]   2 | interface TenantInfo {\n[error]   3 |   id: string;\n[error]   4 |   brand_name: string;\n[error] supabase/functions/token-manager/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.177.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.38.0\";\"\n[error]     |                                                                                                     ^\n[error]   3 | interface TokenRequest {\n[error]   4 |   userId: string;\n[error]   5 |   amount: number;\n[error] supabase/functions/track-email-event/index.ts: SyntaxError: ';' expected. (2:101)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.0\";\"\n[error]     |                                                                                                     ^\n[error]   3 | // Initialize Supabase client;\n[error]   4 | const supabaseUrl = Deno.env.get(\"SUPABASE_URL\")!;\"const supabaseServiceKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\")!;\"const supabase = createClient(supabaseUrl, supabaseServiceKey);\n[error]   5 |\n[error] supabase/functions/track-referral/index.ts: SyntaxError: ';' expected. (2:102)\n[error]   1 |\n[error] > 2 | import { serve } from \"_https://deno.land/std@0.131.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2.20.0\";\"import { corsHeaders } from \"../_shared/cors.ts\";\"\n[error]     |                                                                                                      ^\n[error]   3 | serve(async (req) => {\n[error]   4 |   // Handle CORS pre-flight request\n[error]   5 |   if (req.method === 'OPTIONS') {'    return new Response('ok', { headers: corsHeaders });'  }\n[error] supabase/functions/translate-content/index.ts: SyntaxError: ';' expected. (2:71)\n[error]   1 |\n[error] > 2 | import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\";\n[error]     |                                                                       ^\n[error]   3 | const OPENAI_API_KEY = Deno.env.get(\"OPENAI_API_KEY\");\";\n[error]   4 | const corsHeaders = {\n[error]   5 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error] supabase/functions/webhook-manager/index.ts: SyntaxError: Unterminated string literal. (2:147)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.177.0/http/server.ts\";\"import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.38.0';'\n[error]     |                                                                                                                                                   ^\n[error]   3 | interface CreateWebhookRequest {\n[error]   4 |   name: string;\n[error]   5 |   url: string;\n[error] supabase/functions/zion-gpt/index.ts: SyntaxError: ';' expected. (2:79)\n[error]   1 |\n[error] > 2 | import { serve } from \"https://deno.land/std@0.190.0/http/server.ts\";\"import \"https://deno.land/x/xhr@0.1.0/mod.ts\";\";\n[error]     |                                                                               ^\n[error]   3 | const corsHeaders = {\n[error]   4 |   \"Access-Control-Allow-Origin\": \"*\",\"  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\"};\n[error]   5 |\n[error] tailwind.config.ts: SyntaxError: ';' expected. (1:67)\n[error] > 1 | import { Config } from 'tailwindcss';'import { fontFamily } from 'tailwindcss/defaultTheme';'import plugin from 'tailwindcss/plugin';'import animatePlugin from 'tailwindcss-animate';';\n[error]     |                                                                   ^\n[error]   2 | const config: Config = {\n[error]   3 |   darkMode: ['class'],'  content: [\n[error]   4 |     './pages/**/*.{ts,tsx}','    './components/**/*.{ts,tsx}','    './app/**/*.{ts,tsx}','    './src/**/*.{ts,tsx}','  ],\n[error] temp_essential_pages/_document.tsx: SyntaxError: Unterminated string literal. (1:73)\n[error] > 1 | import Document, { Html, Head, Main, NextScript } from 'next/document';'\n[error]     |                                                                         ^\n[error]   2 | class MyDocument extends Document {\n[error]   3 |   render() {\n[error]   4 |     return (\n[error] temp_essential_pages/_error.tsx: SyntaxError: ';' expected. (1:66)\n[error] > 1 | import React from 'react';'import type { NextPageContext } from 'next/types';'import { useRouter } from 'next/router';'import Link from 'next/link';'\n[error]     |                                                                  ^\n[error]   2 | interface ErrorProps {\n[error]   3 |   statusCode: number;\n[error]   4 |   hasGetInitialPropsRun?: boolean;\n[error] temp_essential_pages/about.tsx: SyntaxError: ';' expected. (1:46)\n[error] > 1 | import React from 'react';'import Link from 'next/link';'import type { GetServerSideProps } from 'next';'import { SEO } from \"@/components/SEO\";\"import { GradientHeading } from \"@/components/GradientHeading\";\";\n[error]     |                                              ^\n[error]   2 | export const _getServerSideProps: GetServerSideProps = async () => {\n[error]   3 |   return {\n[error]   4 |     props: {}\n[error] temp_essential_pages/api/auth/login.ts: SyntaxError: ';' expected. (1:109)\n[error] > 1 | import { createClient } from '@supabase/supabase-js';'import type { NextApiRequest, NextApiResponse } from 'next';'import * as Sentry from '@sentry/nextjs';'import { withErrorLogging } from '@/utils/withErrorLogging';'import { ENV_CONFIG } from '@/utils/environmentConfig';'\n[error]     |                                                                                                             ^\n[error]   2 | // 🔐 _SECURITY: Development users from environment variables;\n[error]   3 | const getDevUsers = () => {\n[error]   4 |   // Only load development users in development mode\n[error] temp_essential_pages/api/auth/logout.ts: SyntaxError: Unterminated string literal. (1:62)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'\n[error]     |                                                              ^\n[error]   2 | // Simple logout endpoint to clear authToken cookie and invalidate session;\n[error]   3 | export default async function handler(req: NextApiRequest, res: NextApiResponse) {\n[error]   4 |   if (req.method !== 'POST') {'    res.setHeader('Allow', 'POST');'    return res.status(405).end();\n[error] temp_essential_pages/api/auth/register.ts: SyntaxError: ';' expected. (1:109)\n[error] > 1 | import { createClient } from '@supabase/supabase-js';'import type { NextApiRequest, NextApiResponse } from 'next';'import { z } from 'zod';'import { withErrorLogging } from '@/utils/withErrorLogging';';\n[error]     |                                                                                                             ^\n[error]   2 | const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL as string;\n[error]   3 | const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY as string;\n[error]   4 | const supabase = createClient(supabaseUrl, supabaseKey);\n[error] temp_essential_pages/api/auth/resend-verification-email.ts: SyntaxError: ';' expected. (1:109)\n[error] > 1 | import { createClient } from '@supabase/supabase-js';'import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';'import { ENV_CONFIG } from '@/utils/environmentConfig';'\n[error]     |                                                                                                             ^\n[error]   2 | async function handler(req: NextApiRequest, res: NextApiResponse) {\n[error]   3 |   if (req.method !== 'POST') {'    res.setHeader('Allow', 'POST');'    return res.status(405).end();\n[error]   4 |   }\n[error] temp_essential_pages/api/blog.ts: SyntaxError: ';' expected. (1:90)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { BLOG_POSTS } from '@/data/blog-posts';'import type { BlogPost } from '@/types/blog';';\n[error]     |                                                                                          ^\n[error]   2 | export default function handler(\n[error]   3 |   req: NextApiRequest,\n[error]   4 |   res: NextApiResponse<BlogPost[] | { error: string }>\n[error] temp_essential_pages/api/categories.ts: SyntaxError: Unterminated string literal. (1:62)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'\n[error]     |                                                              ^\n[error]   2 | // Mock categories data for development;\n[error]   3 | const mockCategories = [\n[error]   4 |   { id: 'services', name: 'Services', slug: 'services', icon: 'Briefcase' },'  { id: 'talents', name: 'Talents', slug: 'talents', icon: 'Users' },'  { id: 'equipment', name: 'Equipment', slug: 'equipment', icon: 'HardDrive' },'  { id: 'innovation', name: 'Innovation', slug: 'innovation', icon: 'Lightbulb' },'  { id: 'ai-models', name: 'AI Models', slug: 'ai-models', icon: 'Brain' },'  { id: 'data-science', name: 'Data Science', slug: 'data-science', icon: 'BarChart' },'];\n[error] temp_essential_pages/api/categories/[slug]/items.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { PrismaClient } from '@prisma/client';'import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';';\n[error]     |                                                                                                      ^\n[error]   2 | const prisma = new PrismaClient();\n[error]   3 |\n[error]   4 | async function handler(req: NextApiRequest, res: NextApiResponse) {\n[error] temp_essential_pages/api/checkout-session.ts: SyntaxError: ';' expected. (1:82)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import Stripe from 'stripe';'import fs from 'fs';'import path from 'path';';\n[error]     |                                                                                  ^\n[error]   2 | const useTest = process.env.STRIPE_TEST_MODE === 'true';';\n[error]   3 | function getStripeKey() {\n[error]   4 |   const live = process.env.STRIPE_SECRET_KEY || '';'  const test = process.env.STRIPE_TEST_SECRET_KEY || live;\n[error] temp_essential_pages/api/checkout/session.ts: SyntaxError: ';' expected. (1:82)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import Stripe from 'stripe';'import fs from 'fs';'import path from 'path';';\n[error]     |                                                                                  ^\n[error]   2 | const useTest = process.env.STRIPE_TEST_MODE === 'true';';\n[error]   3 | const stripe = new Stripe(\n[error]   4 |   useTest ? process.env.STRIPE_TEST_SECRET_KEY || '' : process.env.STRIPE_SECRET_KEY || '','  {\n[error] temp_essential_pages/api/equipment/recommendations.ts: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import type { ProductListing } from '@/types/listings';'\n[error]     |                                                                                                   ^\n[error]   2 | // Mock personalized equipment recommendations;\n[error]   3 | const mockRecommendations: ProductListing[] = [\n[error]   4 |   {\n[error] temp_essential_pages/api/feedback.ts: SyntaxError: ';' expected. (1:84)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import mongoose from 'mongoose';'import { z } from 'zod';'import type { Document, Model } from 'mongoose';'import { withErrorLogging } from '@/utils/withErrorLogging';';\n[error]     |                                                                                    ^\n[error]   2 | const mongoUri = process.env.MONGO_URI || 'mongodb://localhost:27017/zion';';\n[error]   3 | const feedbackSchema = new mongoose.Schema({\n[error]   4 |   rating: { type: Number, required: true, min: 1, max: 5 },\n[error] temp_essential_pages/api/generate-quiz.ts: SyntaxError: ';' expected. (1:96)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';'\n[error]     |                                                                                                ^\n[error]   2 | async function handler(req: NextApiRequest, res: NextApiResponse) {\n[error]   3 |   if (req.method !== 'POST') {'    res.setHeader('Allow', 'POST');'    return res.status(405).end(`Method ${req.method} Not Allowed`);\n[error]   4 |   }\n[error] temp_essential_pages/api/health.ts: SyntaxError: ';' expected. (1:96)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';'\n[error]     |                                                                                                ^\n[error]   2 | type HealthResponse = {\n[error]   3 |   status: string;\n[error]   4 |   version: string;\n[error] temp_essential_pages/api/log-error.ts: SyntaxError: ';' expected. (1:59)\n[error] > 1 | import { exec } from 'child_process';'import crypto from 'crypto';'import path from 'path';'import { PrismaClient, ErrorAnalysisStatus } from '@prisma/client';'import { captureException } from '../../src/utils/sentry'; // Adjusted path'import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '../../src/utils/withErrorLogging';';\n[error]     |                                                           ^\n[error]   2 | const prisma = new PrismaClient();\n[error]   3 | const CODEX_SCRIPT_PATH = path.resolve(process.cwd(), 'scripts/codex-bug-fix.js');'\n[error]   4 | interface ErrorDetails {\n[error] temp_essential_pages/api/marketplace/index.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { PrismaClient } from '@prisma/client';'import type { NextApiRequest, NextApiResponse } from 'next';'import * as Sentry from '@sentry/nextjs';'import { withErrorLogging } from '@/utils/withErrorLogging';'import { MARKETPLACE_PRODUCTS } from '@/data/marketplace-products';'import type { MarketplaceProduct } from '@/types/marketplace';';\n[error]     |                                                                                                      ^\n[error]   2 | const prisma = new PrismaClient();\n[error]   3 |\n[error]   4 | async function handler(\n[error] temp_essential_pages/api/marketplace/overview.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { PrismaClient } from '@prisma/client';'import type { NextApiRequest, NextApiResponse } from 'next';'import * as Sentry from '@sentry/nextjs';';\n[error]     |                                                                                                      ^\n[error]   2 | const prisma = new PrismaClient();\n[error]   3 | ;\n[error]   4 | export default async function handler(\n[error] temp_essential_pages/api/marketplace/product/[productId].ts: SyntaxError: ';' expected. (1:132)\n[error] > 1 | import { PrismaClient, type Product as ProductModel } from '@prisma/client';'import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';';\n[error]     |                                                                                                                                    ^\n[error]   2 | const prisma = new PrismaClient();\n[error]   3 |\n[error]   4 | // Ensure this type is consistent with the one in products.ts\n[error] temp_essential_pages/api/marketplace/products.ts: SyntaxError: ';' expected. (1:140)\n[error] > 1 | import { PrismaClient, type Product as ProductModel, Prisma } from '@prisma/client';'import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';'import * as Sentry from '@sentry/nextjs';'\n[error]     |                                                                                                                                            ^\n[error]   2 | interface ProductStats {\n[error]   3 |   avg: number | null;\n[error]   4 |   count: number;\n[error] temp_essential_pages/api/newsletter.ts: SyntaxError: ';' expected. (1:83)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import isEmail from 'validator/lib/isEmail';'import { subscribeToNewsletter } from '@/services/newsletterService';'import { withErrorLogging } from '@/utils/withErrorLogging';'\n[error]     |                                                                                   ^\n[error]   2 | async function handler(\n[error]   3 |   req: NextApiRequest,\n[error]   4 |   res: NextApiResponse<{ status: string } | { error: string }>\n[error] temp_essential_pages/api/podcast/generate.ts: SyntaxError: ';' expected. (1:96)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';';\n[error]     |                                                                                                ^\n[error]   2 | function handler(req: NextApiRequest, res: NextApiResponse) {\n[error]   3 |   if (req.method !== 'POST') {'    res.setHeader('Allow', 'POST');'    return res.status(405).end(`Method ${req.method} Not Allowed`);\n[error]   4 |   }\n[error] temp_essential_pages/api/points/increment.ts: SyntaxError: ';' expected. (1:109)\n[error] > 1 | import { createClient } from '@supabase/supabase-js';'import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';';\n[error]     |                                                                                                             ^\n[error]   2 | const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL as string;\n[error]   3 | const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY as string;\n[error]   4 | const supabase = createClient(supabaseUrl, supabaseKey);\n[error] temp_essential_pages/api/search.ts: SyntaxError: ';' expected. (1:96)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';'import { MARKETPLACE_LISTINGS } from '@/data/listingData';'import { SERVICES } from '@/data/servicesData';'import { TALENT_PROFILES } from '@/data/talentData';'import type { SearchResult, SearchResponse } from '@/types/search';'\n[error]     |                                                                                                ^\n[error]   2 | interface SearchResult {\n[error]   3 |   id: string;\n[error]   4 |   type: 'product' | 'service' | 'talent' | 'equipment' | 'category';'  title: string;\n[error] temp_essential_pages/api/search/suggest.ts: SyntaxError: ';' expected. (1:92)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { PrismaClient } from '@prisma/client';'import * as Sentry from '@sentry/nextjs';';\n[error]     |                                                                                            ^\n[error]   2 | const prisma = new PrismaClient();\n[error]   3 |\n[error]   4 | interface SearchSuggestion {\n[error] temp_essential_pages/api/sentry-auto-test-api.ts: SyntaxError: Unterminated string literal. (6:129)\n[error]   4 |   // This error should be automatically captured by Sentry's'  // auto-instrumentation for API routes.\n[error]   5 |   // auto-instrumentation for API routes.\n[error] > 6 |   throw new Error('Sentry Auto-Instrumentation Test API Error - This is a test!');'  // The following lines will not be reached.\n[error]     |                                                                                                                                 ^\n[error]   7 |   // res.status(200).json({ message: 'This should not be reached.' });'}\n[error]   8 | ;\n[error]   9 | export default withErrorLogging(handler);\n[error] temp_essential_pages/api/sentry-dsn-check.ts: SyntaxError: Identifier expected. (1:103)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { handler as sentryCheck } from '../../netlify/functions/sentryCheck';'import { withErrorLogging } from '@/utils/withErrorLogging';'\n[error]     |                                                                                                       ^\n[error]   2 | async function handler(\n[error]   3 |   req: NextApiRequest,\n[error]   4 |   res: NextApiResponse\n[error] temp_essential_pages/api/sentry-test-error-api.ts: SyntaxError: ';' expected. (2:87)\n[error]   1 | // pages/api/sentry-test-error-api.ts;\n[error] > 2 | import type { NextApiRequest, NextApiResponse } from 'next';'import * as Sentry from '@sentry/nextjs';'import { withErrorLogging } from '@/utils/withErrorLogging';'\n[error]     |                                                                                       ^\n[error]   3 | async function handler(\n[error]   4 |   _req: NextApiRequest,\n[error]   5 |   res: NextApiResponse\n[error] temp_essential_pages/api/services.ts: SyntaxError: ';' expected. (1:88)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { SERVICES } from '@/data/servicesData';';\n[error]     |                                                                                        ^\n[error]   2 | export default function handler(req: NextApiRequest, res: NextApiResponse) {\n[error]   3 |   if (req.method !== 'GET') {'    res.setHeader('Allow', 'GET');'    return res.status(405).end(`Method ${req.method} Not Allowed`);\n[error]   4 |   }\n[error] temp_essential_pages/api/stripe/webhook.ts: SyntaxError: ';' expected. (1:82)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import Stripe from 'stripe';'import { buffer } from 'micro';'import fs from 'fs';'import path from 'path';'import { randomUUID } from 'crypto';';\n[error]     |                                                                                  ^\n[error]   2 | const useTest = process.env.STRIPE_TEST_MODE === 'true';';\n[error]   3 | export const config = { api: { bodyParser: false } };\n[error]   4 | ;\n[error] temp_essential_pages/api/summarize.ts: SyntaxError: ';' expected. (1:96)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';'\n[error]     |                                                                                                ^\n[error]   2 | async function handler(req: NextApiRequest, res: NextApiResponse) {\n[error]   3 |   if (req.method !== 'POST') {'    res.setHeader('Allow', 'POST');'    return res.status(405).end(`Method ${req.method} Not Allowed`);\n[error]   4 |   }\n[error] temp_essential_pages/api/talent/index.ts: SyntaxError: ';' expected. (1:102)\n[error] > 1 | import { PrismaClient } from '@prisma/client';'import type { NextApiRequest, NextApiResponse } from 'next';'import * as Sentry from '@sentry/nextjs';';\n[error]     |                                                                                                      ^\n[error]   2 | const prisma = new PrismaClient();\n[error]   3 |\n[error]   4 | interface _TalentFilters {\n[error] temp_essential_pages/api/track-referral.ts: SyntaxError: ';' expected. (1:91)\n[error] > 1 | import { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';'\n[error]     |                                                                                           ^\n[error]   2 | async function handler(req: NextApiRequest, res: NextApiResponse) {\n[error]   3 |   if (req.method !== 'POST') {'    res.setHeader('Allow', 'POST');'    return res.status(405).end();\n[error]   4 |   }\n[error] temp_essential_pages/api/users/[id].ts: SyntaxError: ';' expected. (1:96)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { withErrorLogging } from '@/utils/withErrorLogging';'import { users } from './data';';\n[error]     |                                                                                                ^\n[error]   2 | function handler(req: NextApiRequest, res: NextApiResponse) {\n[error]   3 |   const { _id } = req.query as { id: string | string[] };\n[error]   4 |   const user = users[String(id)];\n[error] temp_essential_pages/api/users/me.ts: SyntaxError: Identifier expected. (1:101)\n[error] > 1 | import { withErrorLogging } from '@/utils/withErrorLogging';'import { users, type MockUser } from './data';';\n[error]     |                                                                                                     ^\n[error]   2 | let mockUser = users['1'];'\n[error]   3 | // Generic request/response types so this file works in Node or Next.js\n[error]   4 | interface Req {\n[error] temp_essential_pages/api/zion-gpt/train.ts: SyntaxError: ';' expected. (1:84)\n[error] > 1 | import type { NextApiRequest, NextApiResponse } from 'next';'import { exec } from 'child_process';'import { withErrorLogging } from '@/utils/withErrorLogging';'\n[error]     |                                                                                    ^\n[error]   2 | async function handler(req: NextApiRequest, res: NextApiResponse) {\n[error]   3 |   if (req.method !== 'POST') {'    res.setHeader('Allow', 'POST');'    return res.status(405).end(`Method ${req.method} Not Allowed`);\n[error]   4 |   }\n[error] temp_essential_pages/index.tsx: SyntaxError: ';' expected. (1:55)\n[error] > 1 | import React from 'react';'import { useRouter } from 'next/router';'import Home from '@/src/pages/Home';'import type { GetStaticProps } from 'next';'import { ErrorBanner } from '@/components/talent/ErrorBanner';';\n[error]     |                                                       ^\n[error]   2 | export interface HomePageProps {\n[error]   3 |   hasError?: boolean;\n[error]   4 |   errorMessage?: string;\n[error] test-server.js: SyntaxError: Unterminated string constant. (2:36)\n[error]   1 | // eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error] > 2 | const express = require('express');'const app = express();\n[error]     |                                    ^\n[error]   3 | const port = process.env.PORT || 3000;\n[error]   4 |\n[error]   5 | app.get('/fast', (req, res) => {'  res.status(200).send('Fast response!');'});\n[error] tests/__mocks__/@stripe/react-stripe-js.js: SyntaxError: Unterminated string constant. (3:27)\n[error]   1 |  \n[error]   2 | // tests/__mocks__/@stripe/react-stripe-js.js;\n[error] > 3 | import React from 'react';';\n[error]     |                           ^\n[error]   4 | const mockStripe = {\n[error]   5 |   confirmCardPayment: jest.fn(() => Promise.resolve({ paymentIntent: { id: 'pi_mock', status: 'succeeded' }, error: null })),'  createPaymentMethod: jest.fn(() => Promise.resolve({ paymentMethod: { id: 'pm_mock' }, error: null })),'  retrievePaymentIntent: jest.fn(clientSecret => Promise.resolve({ paymentIntent: { id: 'pi_mock_retrieved', client_secret: clientSecret, status: 'succeeded' }, error: null })),'  // Add other Stripe methods your application uses\n[error]   6 | };\n[error] tests/__mocks__/@stripe/stripe-js.js: SyntaxError: Unexpected token (14:205)\n[error]   12 |     };\n[error]   13 |   }),\n[error] > 14 |   confirmCardPayment: vi.fn(() => Promise.resolve({ paymentIntent: { id: 'pi_mock_core', status: 'succeeded' }, error: null })),'  createPaymentMethod: vi.fn(() => Promise.resolve({ paymentMethod: { id: 'pm_mock_core' }, error: null })),'  retrievePaymentIntent: vi.fn(clientSecret => Promise.resolve({ paymentIntent: { id: 'pi_mock_retrieved_core', client_secret: clientSecret, status: 'succeeded' }, error: null })),'};\n[error]      |                                                                                                                                                                                                             ^\n[error]   15 | ;\n[error]   16 | const loadStripe = vi.fn(_publishableKey => {\n[error]   17 |   return Promise.resolve(mockStripeInstance);\n[error] tests/__mocks__/i18n.js: SyntaxError: Unterminated string constant. (5:38)\n[error]   3 |   __esModule: true,\n[error]   4 |   default: {\n[error] > 5 |     t: (key) => key.split('.').pop(),'    i18n: { changeLanguage: () => Promise.resolve() },\n[error]     |                                      ^\n[error]   6 |   },\n[error]   7 | }; \n[error] tests/__mocks__/next-auth/react.js: SyntaxError: Unexpected token (6:40)\n[error]   4 |   data: {\n[error]   5 |     user: {\n[error] > 6 |       name: 'Mock User','      email: 'test@example.com','      // id: 'mock-user-id', // if your app uses user IDs from the session'      // Add any other user properties your components might expect\n[error]     |                                        ^\n[error]   7 |     },\n[error]   8 |     expires: new Date(Date.now() + 2 * 60 * 60 * 1000).toISOString(), // Mock session to expire in 2 hours\n[error]   9 |   },\n[error] tests/__mocks__/next-cloudinary.js: SyntaxError: Unterminated string constant. (3:32)\n[error]   1 |  \n[error]   2 | // eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error] > 3 | const React = require('react');';\n[error]     |                                ^\n[error]   4 | exports.CldUploadButton = ({ children, onUpload }) => {\n[error]   5 |   const handleClick = () => {\n[error]   6 |     if (onUpload) onUpload({ info: { secure_url: 'http://example.com/avatar.png' } });'  };\n[error] tests/__mocks__/next/config.js: SyntaxError: Unterminated string constant. (4:47)\n[error]   2 | export default () => ({\n[error]   3 |   publicRuntimeConfig: {\n[error] > 4 |     NEXT_PUBLIC_SENTRY_DSN: 'test_sentry_dsn','    // Add other necessary publicRuntimeConfig variables here if they cause errors\n[error]     |                                               ^\n[error]   5 |   },\n[error]   6 |   serverRuntimeConfig: {\n[error]   7 |     // Add serverRuntimeConfig variables if needed\n[error] tests/__mocks__/next/image.js: SyntaxError: Unterminated string constant. (2:27)\n[error]   1 |  ;\n[error] > 2 | import React from 'react';'\n[error]     |                           ^\n[error]   3 | // Mock implementation of Next.js Image component for testing;\n[error]   4 | export default function NextImageMock({ src, alt, style, ...rest }) {\n[error]   5 |   // The 'fill' prop itself isn't passed to the img tag.'  // If 'fill' is true, specific styles might be applied by Next.js,'  // but for a basic mock, we can just ensure it doesn't break.'  // We pass through src, alt, style, and any other props.\n[error] tests/__mocks__/next/link.js: SyntaxError: Unterminated string constant. (3:27)\n[error]   1 |  \n[error]   2 |  ;\n[error] > 3 | import React from 'react';'export default ({ children, ...props }) => {\n[error]     |                           ^\n[error]   4 |   return React.createElement('a', props, children);'};\n[error]   5 |\n[error] tests/__mocks__/next/router.js: SyntaxError: Unexpected token (3:28)\n[error]   1 |  ;\n[error]   2 | export const useRouter = () => ({\n[error] > 3 |   route: '/','  pathname: '','  query: '','  asPath: '','  push: vi.fn(),\n[error]     |                            ^\n[error]   4 |   events: {\n[error]   5 |     on: vi.fn(),\n[error]   6 |     off: vi.fn(),\n[error] tests/__mocks__/vitestMock.js: SyntaxError: Unterminated string constant. (3:46)\n[error]   1 | // Re-export Jest globals so tests written for Vitest compile under Jest\n[error]   2 | // eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error] > 3 | const jestGlobals = require('@jest/globals');'\n[error]     |                                              ^\n[error]   4 | module.exports = {\n[error]   5 |   vi: {\n[error]   6 |     fn: jest.fn,\n[error] tests/404-fallback.test.tsx: SyntaxError: ';' expected. (1:71)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent } from '@testing-library/react';'import { I18nextProvider } from 'react-i18next';'import i18n from 'i18next';'import { initReactI18next } from 'react-i18next';'import { vi } from 'vitest';'\n[error]     |                                                                       ^\n[error]   2 | // Mock the useRouter hook;\n[error]   3 | const mockPush = vi.fn();\n[error]   4 | const mockBack = vi.fn();\n[error] tests/accessibility-comprehensive.test.tsx: SyntaxError: ';' expected. (1:71)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent } from '@testing-library/react';'import userEvent from '@testing-library/user-event';'import { axe, toHaveNoViolations } from 'jest-axe';'import '@testing-library/jest-dom';'\n[error]     |                                                                       ^\n[error]   2 | // Import components to test;\n[error]   3 | import { MobileBottomNav } from '@/components/header/MobileBottomNav';'import { SearchFilter } from '@/components/talent/filters/SearchFilter';'import { LanguageSwitcher } from '@/components/LanguageSwitcher';'import { UserProfileDropdown } from '@/components/header/UserProfileDropdown';'\n[error]   4 | // Add jest-axe matcher\n[error] tests/accessibility-issue-17.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { axe, toHaveNoViolations } from 'jest-axe';'import userEvent from '@testing-library/user-event';'import React from 'react';'// import { vi } from 'vitest'; // Removed Vitest import'\n[error]     |                                                                                                   ^\n[error]   2 | // Components to test for Issue #17 fixes;\n[error]   3 | import UserProfileDropdown from '@/components/header/UserProfileDropdown';'import { ServiceQuoteModal } from '@/components/ServiceQuoteModal';'\n[error]   4 | // Mock the useAuth hook\n[error] tests/Accessibility.test.tsx: SyntaxError: ';' expected. (1:91)\n[error] > 1 | import { render } from '@testing-library/react';'import { axe, toHaveNoViolations } from 'jest-axe';'import { MemoryRouter } from 'react-router-dom';'import React from 'react';'import { vi } from 'vitest';'\n[error]     |                                                                                           ^\n[error]   2 | // Actual Context for AuthProvider;\n[error]   3 | import { AuthContext } from '@/context/auth/AuthContext';'\n[error]   4 | // Mock custom hooks for contexts that are not exported\n[error] tests/apiClient.msw.test.ts: SyntaxError: Unterminated string literal. (1:170)\n[error] > 1 | import { describe, it, expect, vi, beforeAll, afterEach, afterAll } from 'vitest';'// Import apiClient for its own tests, and globalAxiosErrorHandler for direct testing;\n[error]     |                                                                                                                                                                          ^\n[error]   2 | import apiClient, { globalAxiosErrorHandler } from '@/services/apiClient';'import { rest } from 'msw';'import { setupServer } from 'msw/node';'import * as apiError from '@/utils/apiErrorHandler';'import { supabase } from '@/integrations/supabase/client';'\n[error]   3 | vi.mock('@/utils/apiErrorHandler', () => ({'  showApiError: vi.fn(),\n[error]   4 |   parseApiError: vi.fn((e) => ({ status: e?.response?.status, code: e?.response?.data?.code ?? e?.response?.status, message: e?.response?.data?.message || 'Unexpected error – please try again later.' }))'}));\n[error] tests/apiClient.test.ts: SyntaxError: ';' expected. (1:75)\n[error] > 1 | import { describe, expect, it, vi } from 'vitest';'import apiClient from '@/services/apiClient';'import axios from 'axios';'import { supabase } from '@/integrations/supabase/client';'import * as apiError from '@/utils/apiErrorHandler';'import * as sentry from '@/utils/sentry';'\n[error]     |                                                                           ^\n[error]   2 | vi.mock('@/integrations/supabase/client', () => ({'  supabase: { auth: { signOut: vi.fn().mockResolvedValue({}) } }\n[error]   3 | }));\n[error]   4 | vi.mock('@/utils/apiErrorHandler', () => ({'  showApiError: vi.fn(),\n[error] tests/apiErrorHandler.test.ts: SyntaxError: ';' expected. (1:79)\n[error] > 1 | import { describe, it, expect } from 'vitest';'import { parseApiError } from '@/utils/apiErrorHandler';'\n[error]     |                                                                               ^\n[error]   2 | describe('parseApiError', () => {'  it('handles network failure', () => {'    const err = new Error('Network Error');'    expect(parseApiError(err)).toEqual({\n[error]   3 |       status: undefined,\n[error]   4 |       code: undefined,\n[error] tests/auth0-signup-fix.test.js: SyntaxError: Unterminated string constant. (7:167)\n[error]    5 |  */\n[error]    6 | ;\n[error] >  7 | const { generateAuth0Secret, validateAuth0Domain, isPlaceholderValue } = require('../scripts/setup-auth0.js');'const fs = require('fs');'const path = require('path');'\n[error]      |                                                                                                                                                                       ^\n[error]    8 | describe('Auth0 Signup Fix - Critical Issue #1', () => {'  \n[error]    9 |   describe('Environment Variable Validation', () => {'    \n[error]   10 |     test('isPlaceholderValue correctly identifies placeholder values', () => {'      // Placeholder values (should return true)\n[error] tests/authController.test.ts: SyntaxError: ';' expected. (1:87)\n[error] > 1 | import { describe, it, expect, vi, beforeEach } from 'vitest';'import httpMocks from 'node-mocks-http';'import jwt from 'jsonwebtoken';'import bcrypt from 'bcryptjs';'import * as authController from '../server/controllers/authController';'import User from '../server/models/User';'\n[error]     |                                                                                       ^\n[error]   2 | beforeEach(() => {\n[error]   3 |   process.env.JWT_SECRET = 'testsecret';'  vi.restoreAllMocks();\n[error]   4 | });\n[error] tests/authService.test.ts: SyntaxError: ';' expected. (1:71)\n[error] > 1 | import { describe, it, expect, vi } from 'vitest';'import axios from 'axios';'import { loginUser } from '@/services/authService';'import { toast } from '@/hooks/use-toast';'\n[error]     |                                                                       ^\n[error]   2 | vi.mock('axios');'vi.mock('@/hooks/use-toast', () => ({'  toast: { error: vi.fn() }\n[error]   3 | }));\n[error]   4 |\n[error] tests/BlogPostRoute.test.tsx: SyntaxError: ';' expected. (1:103)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { MemoryRouter, Route, Routes } from 'react-router-dom';'import BlogPost from '@/src/pages/BlogPost';'\n[error]     |                                                                                                       ^\n[error]   2 | it('renders blog article from slug', async () => {'  render(\n[error]   3 |     <MemoryRouter initialEntries={['/blog/ai-trends-2025']}>'      <Routes>\n[error]   4 |         <Route path='/blog/:slug' element={<BlogPost />} />'      </Routes>\n[error] tests/BlogSearch.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import Blog from '@/src/pages/Blog';'\n[error]     |                                                                                                   ^\n[error]   2 | it('filters posts when typing in search', async () => {'  render(\n[error]   3 |     <MemoryRouter>\n[error]   4 |       <Blog />\n[error] tests/cart-localization.test.tsx: SyntaxError: ';' expected. (1:84)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { Provider } from 'react-redux';'import { configureStore } from '@reduxjs/toolkit';'import { I18nextProvider } from 'react-i18next';'import i18n from 'i18next';'import { initReactI18next } from 'react-i18next';'\n[error]     |                                                                                    ^\n[error]   2 | // Mock Redux store;\n[error]   3 | const mockStore = configureStore({\n[error]   4 |   reducer: {\n[error] tests/CartPersistence.test.tsx: SyntaxError: Unterminated string literal. (2:71)\n[error]   1 | // SKIP: This test is skipped due to outdated imports from '@/src/pages/Cart'.'// import { render, screen } from '@testing-library/react';'// import { MemoryRouter, Routes, Route } from 'react-router-dom';'// import { describe, it, expect } from 'vitest';'// import CartPage from '@/src/pages/Cart';'// import { CartProvider } from '@/context/CartContext';'// import { AuthContext } from '@/context/auth/AuthContext';'// import PrivateRoute from '@/components/PrivateRoute';'// import { safeStorage } from '@/utils/safeStorage';';\n[error] > 2 | const item = { id: '1', name: 'Test Item', price: 10, quantity: 1 };';\n[error]     |                                                                       ^\n[error]   3 | function renderCart(user: any) {\n[error]   4 |   return render(\n[error]   5 |     <AuthContext.Provider value={{ user, isLoading: false } as any}>\n[error] tests/cartSlice.test.ts: SyntaxError: ';' expected. (1:105)\n[error] > 1 | import { describe, it, expect } from 'vitest';'import cartReducer, { addItem, removeItem, clear } from '@/store/cartSlice';'\n[error]     |                                                                                                         ^\n[error]   2 | describe('cartSlice reducers', () => {'  it('adds new item', () => {'    const state = cartReducer({ items: [] }, addItem({ id: '1', title: 'Prod', price: 5 }));'    expect(state.items).toHaveLength(1);\n[error]   3 |     expect(state.items[0]).toMatchObject({ id: '1', name: 'Prod', price: 5, quantity: 1 });'  });\n[error]   4 |\n[error] tests/CategoryCard.test.tsx: SyntaxError: ';' expected. (1:88)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { CategoryCard } from '@/components/CategoryCard';'\n[error]     |                                                                                        ^\n[error]   2 | it('renders category card with link to slug', () => {'  render(\n[error]   3 |     <MemoryRouter>\n[error]   4 |       <CategoryCard title=\"Test Category\" description=\"desc\" icon=\"*\" />\"    </MemoryRouter>\n[error] tests/CategoryDetail.test.tsx: SyntaxError: ';' expected. (3:88)\n[error]   1 | // SKIP: This test is skipped due to outdated imports from '@/src/pages/CategoryPage'.'// import { render, screen } from '@testing-library/react';'// import { MemoryRouter, Routes, Route } from 'react-router-dom';'// import CategoryPage from '@/src/pages/CategoryPage';'// import { vi } from 'vitest';'\n[error]   2 | // Simplify page dependencies\n[error] > 3 | jest.mock('@/components/header/Header', () => ({ Header: () => <div /> }));'jest.mock('@/components/Footer', () => ({ Footer: () => <div /> }));'\n[error]     |                                                                                        ^\n[error]   4 | it('category \"services\" renders list length >0', async () => {'  global.fetch = vi.fn().mockResolvedValue({\n[error]   5 |     ok: true,\n[error]   6 |     json: async () => ({\n[error] tests/CategoryListingPageLoading.test.tsx: SyntaxError: ';' expected. (1:108)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { vi } from 'vitest';'import { CategoryListingPage } from '@/components/CategoryListingPage';';\n[error]     |                                                                                                            ^\n[error]   2 | const listings = [\n[error]   3 |   {\n[error]   4 |     id: '1','    title: 'Item 1','    description: 'desc','    category: 'test','    createdAt: '2020-01-01''  }\n[error] tests/CheckoutPageSnapshot.test.tsx: SyntaxError: ';' expected. (1:88)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import Checkout from '@/src/pages/Checkout';'import React from 'react';'\n[error]     |                                                                                        ^\n[error]   2 | jest.mock('react-redux', () => ({'  ...jest.requireActual('react-redux'),'  useSelector: jest.fn().mockImplementation((sel) => sel({ cart: { items: [] } })),\n[error]   3 | }));\n[error]   4 |\n[error] tests/CommunityCategory.test.tsx: SyntaxError: ';' expected. (1:103)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { MemoryRouter, Route, Routes } from 'react-router-dom';'import { QueryClient, QueryClientProvider } from '@tanstack/react-query';'import ForumCategoryPage from '@/src/pages/ForumCategoryPage';'import * as forumService from '@/services/forumPostService';'\n[error]     |                                                                                                       ^\n[error]   2 | it('loads posts for category', async () => {'  jest.spyOn(forumService, 'fetchPostsByCategory').mockResolvedValue(['    {\n[error]   3 |       id: '1','      title: 'Sample post','      content: 'Content','      authorId: '1','      authorName: 'Test','      categoryId: 'getting-hired','      tags: [],\n[error]   4 |       createdAt: '','      updatedAt: '','      upvotes: 0,\n[error] tests/ContactPublisherModal.test.tsx: SyntaxError: ';' expected. (1:117)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { ContactPublisherModal } from '@/components/profile/ContactPublisherModal';'import { vi } from 'vitest';'import * as toastHook from '@/hooks/use-toast';'vi.mock('@/hooks/useAuth', () => ({ useAuth: () => ({ user: { id: '1' } }) }));'\n[error]     |                                                                                                                     ^\n[error]   2 | vi.mock('@/hooks/use-toast', () => ({'  toast: {\n[error]   3 |     success: vi.fn(),\n[error]   4 |     error: vi.fn(),\n[error] tests/CreatePostButtonRedirect.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import * as auth from '@/hooks/useAuth';'import * as router from 'react-router-dom';'import CreatePostButton from '@/components/community/CreatePostButton';'\n[error]     |                                                                                                   ^\n[error]   2 | test('redirects to login when user is not authenticated', () => {'  const navigateMock = jest.fn();\n[error]   3 |   jest.spyOn(router, 'useNavigate').mockReturnValue(navigateMock);'  jest.spyOn(auth, 'useAuth').mockReturnValue({ user: null } as any);'\n[error]   4 |   render(\n[error] tests/currency.test.ts: SyntaxError: Unterminated string literal. (1:101)\n[error] > 1 | import { getCurrencyForLocale, convertUSDToCurrency, formatPriceByLocale } from '@/utils/currency';'\n[error]     |                                                                                                     ^\n[error]   2 | describe('currency utils', () => {'  it('maps locales to currencies', () => {'    expect(getCurrencyForLocale('en-US')).toBe('USD');'    expect(getCurrencyForLocale('es-ES')).toBe('EUR');'    expect(getCurrencyForLocale('pt-BR')).toBe('BRL');'  });\n[error]   3 |\n[error]   4 |   it('converts USD amounts using exchange rates', () => {'    expect(convertUSDToCurrency(10, 'EUR')).toBeCloseTo(9.3);'    expect(convertUSDToCurrency(10, 'BRL')).toBeCloseTo(50);'  });\n[error] tests/devtools.test.ts: SyntaxError: ';' expected. (1:122)\n[error] > 1 | import { describe, it, expect, vi } from 'vitest';'import { enableDevToolsInStaging, highlightZeroHeightElements } from '@/utils/devtools';';\n[error]     |                                                                                                                          ^\n[error]   2 | const originalEnv = process.env.NODE_ENV;\n[error]   3 |\n[error]   4 | describe('enableDevToolsInStaging', () => {'  afterEach(() => {\n[error] tests/DynamicListingPage.test.tsx: SyntaxError: ';' expected. (1:88)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { DynamicListingPage } from '@/components/DynamicListingPage';'import { ProductListing } from '@/types/listings';'\n[error]     |                                                                                        ^\n[error]   2 | test('slider min is 0', () => {'  const listings: ProductListing[] = [\n[error]   3 |     {\n[error]   4 |       id: '1','      title: 'Item 1','      description: 'desc','      category: 'test','      price: 100,\n[error] tests/e2e/404-page.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | test('shows 404 page for unknown routes', async ({ page }, testInfo) => {'  const serverURL = await skipIfNoServer(testInfo);\n[error]   3 |   if (!serverURL) return;\n[error]   4 |\n[error] tests/e2e/helpers/server-check.ts: SyntaxError: ';' expected. (3:114)\n[error]   1 | const fetchFn: typeof fetch = (global as any).fetch;\n[error]   2 | ;\n[error] > 3 | const baseURL = process.env.PLAYWRIGHT_BASE_URL || 'http://localhost:3000';'const fallbackURL = baseURL.replace('3000', '3001');'let cachedURL: string | null = null;\n[error]     |                                                                                                                  ^\n[error]   4 |\n[error]   5 | async function isServerRunning(url: string): Promise<boolean> {\n[error]   6 |   const controller = new AbortController();\n[error] tests/e2e/login-error-banner.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | // Ensure login failure shows banner without crashing\n[error]   3 |\n[error]   4 | test('shows error banner on failed login', async ({ page }, testInfo) => {'  const serverURL = await skipIfNoServer(testInfo);\n[error] tests/e2e/login-error-toast.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | // Ensure login failure shows toast without crashing\n[error]   3 |\n[error]   4 | test('shows toast on failed login', async ({ page }, testInfo) => {'  const serverURL = await skipIfNoServer(testInfo);\n[error] tests/e2e/login.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | // Ensure login failure shows toast without crashing\n[error]   3 | test('shows toast on failed login', async ({ page }, testInfo) => {'  const serverURL = await skipIfNoServer(testInfo);\n[error]   4 |   if (!serverURL) return;\n[error] tests/e2e/logout.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | test('user can logout via avatar menu', async ({ page }, testInfo) => {'  const serverURL = await skipIfNoServer(testInfo);\n[error]   3 |   if (!serverURL) return;\n[error]   4 |   await page.route('POST', '/auth/login', route => {'    route.fulfill({\n[error] tests/e2e/public-marketplace.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | test('guest can view marketplace listings', async ({ page }, testInfo) => {'  const url = await skipIfNoServer(testInfo);\n[error]   3 |   if (!url) return;\n[error]   4 |   await page.goto(`${url}/marketplace`);\n[error] tests/e2e/responsive.mobile.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | test.use({ viewport: { width: 375, height: 667 } });\n[error]   3 |\n[error]   4 | test('Mobile layout works on iPhone 6', async ({ page }, testInfo) => {'  const url = await skipIfNoServer(testInfo);\n[error] tests/e2e/searchbar.mobile.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | test.use({ viewport: { width: 375, height: 667 } });\n[error]   3 |\n[error]   4 | test('search suggestions close on outside click on mobile', async ({ page }, testInfo) => {'  const url = await skipIfNoServer(testInfo);\n[error] tests/e2e/searchbar.position.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | test.use({ viewport: { width: 375, height: 667 } });\n[error]   3 |\n[error]   4 | test('search suggestions appear below the nav', async ({ page }, testInfo) => {'  const url = await skipIfNoServer(testInfo);\n[error] tests/e2e/sentry-api.spec.ts: SyntaxError: Unterminated string literal. (1:51)\n[error] > 1 | import { test, expect } from '@playwright/test';';\n[error]     |                                                   ^\n[error]   2 | const SENTRY_API_TOKEN = process.env.SENTRY_API_TOKEN;\n[error]   3 | const SENTRY_PROJECT_SLUG = process.env.SENTRY_PROJECT_SLUG || process.env.SENTRY_PROJECT;\n[error]   4 | const SENTRY_ORG_SLUG = process.env.SENTRY_ORG_SLUG || process.env.SENTRY_ORG;\n[error] tests/e2e/theme-toggle.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | test('Toggle theme from light to dark', async ({ page }, testInfo) => {'  const url = await skipIfNoServer(testInfo);\n[error]   3 |   if (!url) return;\n[error]   4 |   await page.goto(`${url}/`);\n[error] tests/e2e/user-flow.spec.ts: SyntaxError: Identifier expected. (1:83)\n[error] > 1 | import { test, expect } from '@playwright/test';'import { skipIfNoServer } from './helpers/server-check';'\n[error]     |                                                                                   ^\n[error]   2 | // Full user journey covering signup, login, add to cart, checkout and blog navigation\n[error]   3 |\n[error]   4 | test('user can signup, login, checkout and read blog', async ({ page }, testInfo) => {'  const url = await skipIfNoServer(testInfo);\n[error] tests/EquipmentDetail.test.tsx: SyntaxError: Expression expected. (3:1)\n[error]   1 | // SKIP: This test is skipped due to outdated imports from '@/src/pages/EquipmentDetail'.'// import { render } from '@testing-library/react';'// import { MemoryRouter } from 'react-router-dom';'// import EquipmentDetail from '@/src/pages/EquipmentDetail';'// import { AppLayout } from '@/layout/AppLayout';'// import * as router from 'react-router-dom';'// jest.mock('@/hooks/useAuth', () => ({ useAuth: () => ({ isAuthenticated: true }) }));'jest.mock('react-router-dom', () => ({'  ...(jest.requireActual('react-router-dom') as any),'  useParams: jest.fn(),\n[error]   2 |   useNavigate: jest.fn(),\n[error] > 3 | }));\n[error]     | ^\n[error]   4 |\n[error]   5 | describe('EquipmentDetail page', () => {'  it('displays equipment info', () => {'    (router.useParams as jest.Mock).mockReturnValue({ id: 'pro-camera-x1000' });'\n[error]   6 |     const { asFragment, getByText, container } = render(\n[error] tests/EquipmentRecommendations.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { rest } from 'msw';'import { setupServer } from 'msw/node';'import EquipmentPage from '@/src/pages/EquipmentPage';'import { AppLayout } from '@/layout/AppLayout';'import * as auth from '@/hooks/useAuth';';\n[error]     |                                                                                                   ^\n[error]   2 | const recommended = [\n[error]   3 |   {\n[error]   4 |     id: 'rec1','    title: 'Recommended 1','    description: 'Desc','    category: 'Servers','    price: 100,\n[error] tests/EquipmentRouting.test.tsx: SyntaxError: ';' expected. (1:103)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { MemoryRouter, Routes, Route } from 'react-router-dom';'import EquipmentDetail from '@/src/pages/EquipmentDetail';'import { AuthProvider } from '@/context/auth/AuthProvider';'\n[error]     |                                                                                                       ^\n[error]   2 | it('renders equipment detail from slug', async () => {'  render(\n[error]   3 |     <AuthProvider>\n[error]   4 |       <MemoryRouter initialEntries={['/equipment/2u-rack-mount-server']}>'        <Routes>\n[error] tests/forgot-password.test.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import React from 'react';'import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import ForgotPasswordPage from '../pages/forgot-password';'import * as Sentry from '@sentry/nextjs';'\n[error]     |                                                                                ^\n[error]   2 | jest.mock('next/link', () => {'  const MockLink = ({ children, href }: { children: React.ReactNode; href: string }) => (\n[error]   3 |     <a href={href}>{children}</a>\n[error]   4 |   );\n[error] tests/getPreferredTheme.test.ts: SyntaxError: Unterminated string literal. (1:57)\n[error] > 1 | import { getPreferredTheme } from '@/utils/themeUtils';'\n[error]     |                                                         ^\n[error]   2 | describe('getPreferredTheme', () => {'  it('returns dark when system prefers dark', () => {'    (window.matchMedia as jest.Mock).mockReturnValueOnce({\n[error]   3 |       matches: true,\n[error]   4 |       media: '(prefers-color-scheme: dark)','      onchange: null,\n[error] tests/hello.pact.js: SyntaxError: Leading decorators must be attached to a class declaration. (2:53)\n[error]   1 |  ;\n[error] > 2 | import path from 'path';'import { Pact } from '@pact-foundation/pact';'// Use the global fetch API so this test can run without the optional\n[error]     |                                                     ^\n[error]   3 | // `node-fetch` dependency.;\n[error]   4 | const fetch = global.fetch;\n[error]   5 | ;\n[error] tests/hello.provider.test.js: SyntaxError: Unexpected token (2:119)\n[error]   1 |  ;\n[error] > 2 | import path from 'path';'import http from 'http';'import { Verifier } from '@pact-foundation/pact';'import app from '../server/stubServer';';\n[error]     |                                                                                                                       ^\n[error]   3 | let server;\n[error]   4 |\n[error]   5 | beforeAll((done) => {\n[error] tests/HeroSection.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { HeroSection } from '@/components/HeroSection';'import * as router from 'react-router-dom'; // Keep for types if vi.mock needs it'import { vi } from 'vitest';';\n[error]     |                                                                                                   ^\n[error]   2 | const navigateMock = vi.fn();\n[error]   3 |\n[error]   4 | vi.mock('react-router-dom', async (importOriginal) => {'  const actual = await importOriginal<typeof router>();\n[error] tests/itemsService.provider.test.js: SyntaxError: Unexpected token (2:123)\n[error]   1 |  ;\n[error] > 2 | import path from 'path';'import http from 'http';'import { Verifier } from '@pact-foundation/pact';'import handler from '@/src/pages/api/items';';\n[error]     |                                                                                                                           ^\n[error]   3 | let server;\n[error]   4 |\n[error]   5 | beforeAll((done) => {\n[error] tests/jest.setup.ts: SyntaxError: ';' expected. (2:47)\n[error]   1 | // Polyfill fetch and enable fetch mocks;\n[error] > 2 | import 'whatwg-fetch';'import fetchMock from 'jest-fetch-mock';'fetchMock.enableMocks();\n[error]     |                                               ^\n[error]   3 |\n[error]   4 | // Reset fetch mocks before each test to ensure isolation\n[error]   5 | beforeEach(() => {\n[error] tests/ListingNotFound.test.tsx: SyntaxError: ';' expected. (1:81)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import Custom404 from '@/src/pages/404';'import { getStaticProps } from '@/src/pages/marketplace/listing/[slug]';'\n[error]     |                                                                                 ^\n[error]   2 | test('visit unknown slug shows 404 page', async () => {'  const result = await getStaticProps({ params: { slug: 'unknown-slug' } } as any);'  let show404 = false;\n[error]   3 |\n[error]   4 |   if ('notFound' in result && result.notFound) {'    show404 = true;\n[error] tests/login-redirect-fix.test.tsx: SyntaxError: ';' expected. (1:94)\n[error] > 1 | import { render, screen, waitFor } from '@testing-library/react';'import { useRouter } from 'next/router';'import LoginRedirect from '../pages/login';'\n[error]     |                                                                                              ^\n[error]   2 | // Mock Next.js router\n[error]   3 | jest.mock('next/router', () => ({'  useRouter: jest.fn(),\n[error]   4 | }));\n[error] tests/Login.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { describe, it, vi } from 'vitest';'import { LoginForm } from '@/components/auth/login';'import * as authService from '@/services/authService';'import * as authHook from '@/hooks/useAuth';'\n[error]     |                                                                                                   ^\n[error]   2 | vi.spyOn(authHook, 'useAuth').mockReturnValue({ isLoading: false, login: vi.fn() } as any);'\n[error]   3 | describe('LoginForm', () => {'  it('shows server error on 401 response', async () => {'    vi.spyOn(authService, 'loginUser').mockResolvedValue({'      res: { status: 401 } as Response,\n[error]   4 |       data: { error: 'Invalid credentials' },'    });\n[error] tests/LoginForm.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { describe, it, beforeEach, expect, vi } from 'vitest';'import { LoginForm } from '@/components/auth/login';'import * as authService from '@/services/authService';'import * as toastMod from '@/hooks/use-toast';'import * as router from 'react-router-dom';'\n[error]     |                                                                                                   ^\n[error]   2 | vi.mock('@/hooks/useAuth', () => ({'  useAuth: () => ({ isLoading: false, login: vi.fn() }),\n[error]   3 | }));\n[error]   4 | vi.mock('@/hooks/use-toast');'vi.mock('@/services/authService');'vi.mock('react-router-dom', async () => {'  const actual = (await vi.importActual<typeof import('react-router-dom')>('    'react-router-dom''  )) as unknown;\n[error] tests/LoginFormFetch.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { describe, it, expect, vi, afterEach } from 'vitest';'import { LoginForm } from '@/components/auth/login';'import * as authService from '@/services/authService';'\n[error]     |                                                                                                   ^\n[error]   2 | // Use the real loginUser but spy on it\n[error]   3 | vi.spyOn(authService, 'loginUser');'\n[error]   4 | vi.mock('@/hooks/useAuth', () => ({'  useAuth: () => ({\n[error] tests/LoginPage.test.tsx: SyntaxError: ';' expected. (10:72)\n[error]    8 | // }));\n[error]    9 |\n[error] > 10 | describe('Login Page Rendering with Unavailable Wallet', () => {'  it('should render the core login form when WalletContext indicates an unavailable wallet system', () => {'    // render(\n[error]      |                                                                        ^\n[error]   11 |     //   <MemoryRouter initialEntries={['/login']}>'    //     <AuthContext.Provider value={_mockAuthContextValue}>\n[error]   12 |     //       <WalletContext.Provider value={_mockWalletContextValue}>\n[error]   13 |     //         <LoginPage />\n[error] tests/MarketplaceCard.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { PaymentButton } from '@/components/transactions/PaymentButton';'import * as router from 'react-router-dom';'\n[error]     |                                                                                                   ^\n[error]   2 | jest.mock('@/hooks/useAuth', () => ({'  useAuth: () => ({ isAuthenticated: false })\n[error]   3 | }));\n[error]   4 |\n[error] tests/MarketplaceSearch.test.tsx: SyntaxError: ';' expected. (1:100)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import MarketplaceSearch from '@/components/search/MarketplaceSearch';'import { MARKETPLACE_LISTINGS } from '@/data/marketplaceData';'\n[error]     |                                                                                                    ^\n[error]   2 | test('shows suggestion for typed query', async () => {'  render(<MarketplaceSearch products={MARKETPLACE_LISTINGS} />);\n[error]   3 |   const input = screen.getByRole('textbox');'  fireEvent.change(input, { target: { value: 'GP' } });'  expect(await screen.findByText('GPT-4 API Integration Package')).toBeInTheDocument();'});\n[error]   4 |\n[error] tests/MarketplaceViewToggle.test.tsx: SyntaxError: ';' expected. (1:96)\n[error] > 1 | import { render, fireEvent, act } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import Marketplace from '@/src/pages/Marketplace';'\n[error]     |                                                                                                ^\n[error]   2 | jest.mock('@/components/search/EnhancedSearchInput', () => ({'  EnhancedSearchInput: () => <div />,\n[error]   3 | }));\n[error]   4 |\n[error] tests/Navbar.test.tsx: SyntaxError: Unterminated string literal. (11:83)\n[error]    9 | //   expect(container.querySelectorAll('.navbar')).toHaveLength(1);'// });\n[error]   10 |\n[error] > 11 | it('renders single navbar on SearchPage', () => {'  const { _container } = render(\n[error]      |                                                                                   ^\n[error]   12 |     <MemoryRouter>\n[error]   13 |       <AppLayout>\n[error]   14 |         <SearchPage />\n[error] tests/NavLink.test.tsx: SyntaxError: ';' expected. (1:56)\n[error] > 1 | import { render, screen } from '@testing-library/react''import { describe, it, expect, vi } from 'vitest''import NavLink from '@/components/NavLink'';vi.mock('next/link', () => {'  return {\n[error]     |                                                        ^\n[error]   2 |     default: ({ href, children, ...props }: unknown) => (\n[error]   3 |       <a href={href} {...props}>{children}</a>\n[error]   4 |     ),\n[error] tests/NewPostRoute.test.tsx: SyntaxError: ';' expected. (1:103)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { MemoryRouter, Routes, Route } from 'react-router-dom';'import { vi } from 'vitest';'import NewPost from '@/src/pages/NewPost';'import { ProtectedRoute } from '@/components/ProtectedRoute';'import * as auth from '@/hooks/useAuth';'\n[error]     |                                                                                                       ^\n[error]   2 | vi.mock('@/hooks/useAuth');'\n[error]   3 | test('renders new post page when authenticated', () => {'  (auth.useAuth as any).mockReturnValue({ user: { id: '1' }, isLoading: false });'  render(\n[error]   4 |     <MemoryRouter initialEntries={['/community/new']}>'      <Routes>\n[error] tests/NotificationCenter.test.tsx: SyntaxError: ';' expected. (1:114)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { NotificationCenter } from '@/components/NotificationCenter';'import { useNotifications } from '@/context/notifications/NotificationContext';'import { useEnqueueSnackbar } from '@/context';'\n[error]     |                                                                                                                  ^\n[error]   2 | jest.mock('@/context/notifications/NotificationContext');'jest.mock('@/context', () => ({'  useEnqueueSnackbar: jest.fn()\n[error]   3 | }));\n[error]   4 | ;\n[error] tests/page-crashes-fix.test.tsx: SyntaxError: Declaration or statement expected. (1:1)\n[error] > 1 | });\n[error]     | ^\n[error]   2 |\n[error]   3 |     it('should contain required Auth0 configuration', () => {'      const mockEnvContent = `\n[error]   4 |         AUTH0_SECRET=a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456\n[error] tests/pages/index.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import React from 'react';'import { render, screen } from '@testing-library/react';'import * as Sentry from '@sentry/nextjs';'import IndexPage, { getServerSideProps, fetchHomeData } from '../../pages/index';'import ErrorBoundary from '@/components/ErrorBoundary';'\n[error]     |                                                            ^\n[error]   2 | jest.mock('@sentry/nextjs', () => ({'  captureException: jest.fn(),\n[error]   3 | }));\n[error]   4 |\n[error] tests/PointsSystem.test.ts: SyntaxError: ';' expected. (1:65)\n[error] > 1 | import { expect, test, vi } from 'vitest';'import handler from '@/pages/api/points/increment';';\n[error]     |                                                                 ^\n[error]   2 | const insertMock = vi.fn();\n[error]   3 | vi.mock('@supabase/supabase-js', () => ({'  createClient: () => ({\n[error]   4 |     from: () => ({\n[error] tests/PrismaForumPosts.test.ts: SyntaxError: Unterminated string literal. (1:48)\n[error] > 1 | import { PrismaClient } from '@prisma/client';'\n[error]     |                                                ^\n[error]   2 | type Post = { id: number; categoryId: string; title: string };\n[error]   3 |\n[error]   4 | jest.mock('@prisma/client', () => {'  const mPrisma = {\n[error] tests/ProductActions.test.tsx: SyntaxError: ';' expected. (1:120)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { describe, it, expect, vi } from 'vitest';'import { ProductActions } from '@/components/ProductActions';';\n[error]     |                                                                                                                        ^\n[error]   2 | function setup() {\n[error]   3 |   const addToCart = vi.fn().mockResolvedValue(undefined);\n[error]   4 |   render(<ProductActions productId=\"1\" addToCart={addToCart} />);\"  const button = screen.getByRole('button', { name: /add to cart/i });'  return { addToCart, button };\n[error] tests/quoteWizard.pact.js: SyntaxError: Leading decorators must be attached to a class declaration. (2:63)\n[error]   1 |  ;\n[error] > 2 | import path from 'path';'import { Pact, Matchers } from '@pact-foundation/pact';'// Use global fetch to avoid requiring the `node-fetch` package during tests.;\n[error]     |                                                               ^\n[error]   3 | const fetch = global.fetch;\n[error]   4 | ;\n[error]   5 | const provider = new Pact({\n[error] tests/QuoteWizard.test.tsx: SyntaxError: ';' expected. (1:98)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { QuoteWizard } from '@/components/quote/QuoteWizard';'import { rest } from 'msw';'import { setupServer } from 'msw/node';'import { SWRConfig } from 'swr';';\n[error]     |                                                                                                  ^\n[error]   2 | const server = setupServer();\n[error]   3 |\n[error]   4 | beforeAll(() => server.listen());\n[error] tests/RecommendationsPageSnapshot.test.tsx: SyntaxError: ';' expected. (1:97)\n[error] > 1 | import { render, screen, waitFor } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import RecommendationsPage from '@/src/pages/RecommendationsPage.jsx';'\n[error]     |                                                                                                 ^\n[error]   2 | jest.mock('@/hooks/useAuth', () => ({ '  useAuth: () => ({ user: { id: '1' } }) '}));\n[error]   3 |\n[error]   4 | jest.mock('@/hooks/useDelayedError', () => ({'  useDelayedError: (error) => error\n[error] tests/RegisterApi.jest.test.ts: SyntaxError: ';' expected. (1:65)\n[error] > 1 | import { expect, test, vi } from 'vitest';'import handler from '@/pages/api/auth/register';';\n[error]     |                                                                 ^\n[error]   2 | const signUpMock = vi.fn();\n[error]   3 | vi.mock('@supabase/supabase-js', () => ({'  createClient: () => ({\n[error]   4 |     auth: { signUp: signUpMock },\n[error] tests/RegisterApi.test.ts: SyntaxError: Unterminated string literal. (1:51)\n[error] > 1 | import handler from '@/pages/api/auth/register';';\n[error]     |                                                   ^\n[error]   2 | const mockSignUp = jest.fn();\n[error]   3 | jest.mock('@supabase/supabase-js', () => ({'  createClient: jest.fn(() => ({\n[error]   4 |     auth: { signUp: mockSignUp },\n[error] tests/RegisterRoute.test.tsx: SyntaxError: ';' expected. (1:74)\n[error] > 1 | import React, { Suspense } from 'react';'import { render, screen } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import AuthRoutes from '@/routes/AuthRoutes';';\n[error]     |                                                                          ^\n[error]   2 | const MockSignup = () => (\n[error]   3 |   <form>\n[error]   4 |     <label htmlFor=\"first\">First name</label>\"    <input id=\"first\" />\"  </form>\n[error] tests/RegistrationForm.test.tsx: SyntaxError: Argument expression expected. (10:1)\n[error]    8 |     user: null,\n[error]    9 |   }),\n[error] > 10 | }));\n[error]      | ^\n[error]   11 |\n[error]   12 | // Mock use-toast\n[error]   13 | jest.mock('@/hooks/use-toast'); // Changed vi.mock to jest.mock'\n[error] tests/RequestQuotePage.test.tsx: SyntaxError: ';' expected. (1:88)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import RequestQuotePage from '@/src/pages/request-quote';'\n[error]     |                                                                                        ^\n[error]   2 | beforeEach(() => {\n[error]   3 |   global.fetch = vi.fn().mockResolvedValue({\n[error]   4 |     ok: true,\n[error] tests/RequestQuoteSnapshot.test.tsx: SyntaxError: ';' expected. (1:88)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import RequestQuote from '@/src/pages/RequestQuote';'\n[error]     |                                                                                        ^\n[error]   2 | jest.mock('react-redux', () => ({'  ...jest.requireActual('react-redux'),'  useSelector: jest.fn().mockImplementation((sel) => sel({ cart: { items: [] } })),\n[error]   3 | }));\n[error]   4 |\n[error] tests/responsive-320px.test.tsx: SyntaxError: ';' expected. (1:77)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import React from 'react';'// import { vi } from 'vitest'; // Removed Vitest import'import { MemoryRouter } from 'react-router-dom';'\n[error]     |                                                                             ^\n[error]   2 | // Mock components and hooks for testing\n[error]   3 | jest.mock('@/hooks/useAuth', () => ({ // Changed vi.mock to jest.mock'  useAuth: () => ({\n[error]   4 |     user: null,\n[error] tests/RewardsWidget.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { RewardsWidget } from '@/components/RewardsWidget';'import * as auth from '@/hooks/useAuth';'// import { vi } from 'vitest'; // Removed Vitest import'\n[error]     |                                                                                                   ^\n[error]   2 | describe('RewardsWidget', () => {'  it('opens rewards summary when authenticated', () => {'    jest.spyOn(auth, 'useAuth').mockReturnValue({ user: { id: '1', points: 150 } } as unknown); // Changed vi.spyOn to jest.spyOn'\n[error]   3 |     render(\n[error]   4 |       <MemoryRouter>\n[error] tests/RootErrorBoundary.test.tsx: SyntaxError: ';' expected. (1:89)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { ErrorBoundary } from 'react-error-boundary';'import * as sentry from '@/utils/sentry';'\n[error]     |                                                                                         ^\n[error]   2 | jest.mock('@/utils/sentry');';\n[error]   3 | function Bomb() {\n[error]   4 |   throw new Error('boom');'}\n[error] tests/safeStorageClear.test.ts: SyntaxError: ';' expected. (1:109)\n[error] > 1 | import { describe, it, expect, beforeEach } from 'vitest';'import { safeStorage, safeSessionStorage } from '@/utils/safeStorage';'\n[error]     |                                                                                                             ^\n[error]   2 | describe('safeStorage clear', () => {'  beforeEach(() => {\n[error]   3 |     localStorage.clear();\n[error]   4 |     sessionStorage.clear();\n[error] tests/SearchAPI.test.ts: SyntaxError: ';' expected. (1:79)\n[error] > 1 | import { describe, it, expect } from 'vitest';'import { performSearch } from '@/pages/api/search';'\n[error]     |                                                                               ^\n[error]   2 | describe('performSearch', () => {'  it('filters by category and sorts by price desc', () => {'    const { _results } = performSearch('AI', 1, 50, {'      category: 'AI Models & APIs','      sort: 'price_desc''    });\n[error]   3 |     expect(results.length).toBeGreaterThan(0);\n[error]   4 |     for (const r of results) {\n[error] tests/ServiceSlugRoute.test.ts: SyntaxError: Unterminated string literal. (1:60)\n[error] > 1 | import { getStaticProps } from '../pages/services/[slug]';'\n[error]     |                                                            ^\n[error]   2 | it('returns 200 for cloud infrastructure management service page', async () => {'  const result = await getStaticProps({\n[error]   3 |     params: { slug: 'cloud-infrastructure-management' },'  } as any);\n[error]   4 |\n[error] tests/ServicesNavigation.test.tsx: SyntaxError: ';' expected. (1:99)\n[error] > 1 | import { render, screen, fireEvent } from '@testing-library/react';'import { MemoryRouter } from 'react-router-dom';'import { MainNavigation } from '@/components/header/MainNavigation';'import { FeatureCTAs } from '@/components/home/FeatureCTAs';'import * as router from 'react-router-dom';'import { vi } from 'vitest';';\n[error]     |                                                                                                   ^\n[error]   2 | const navigateMock = vi.fn();\n[error]   3 |\n[error]   4 | vi.mock('react-router-dom', async () => {'  const actual = await vi.importActual<typeof router>('react-router-dom');'  return {\n[error] tests/ServiceTypeStep.test.tsx: SyntaxError: ';' expected. (1:111)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { ServiceTypeStep } from '@/components/QuoteRequestForm/ServiceTypeStep';'import { QuoteFormData } from '@/types/quotes';';\n[error]     |                                                                                                               ^\n[error]   2 | const baseData: QuoteFormData = {\n[error]   3 |   serviceType: '','  serviceCategory: '','  specificItem: null,\n[error]   4 |   projectName: '','  projectDescription: '','  startDate: undefined,\n[error] tests/Signup.test.tsx: SyntaxError: ';' expected. (1:105)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';'import { useRouter } from 'next/router';'import Signup from '@/src/pages/Signup';'import * as authHook from '@/hooks/useAuth';'import * as toastHook from '@/hooks/use-toast';'import axios from 'axios';'\n[error]     |                                                                                                         ^\n[error]   2 | // Mock Next.js router\n[error]   3 | jest.mock('next/router', () => ({'  useRouter: jest.fn(),\n[error]   4 | }));\n[error] tests/SkipLink.test.tsx: SyntaxError: ';' expected. (1:81)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import userEvent from '@testing-library/user-event';'import React from 'react';'import { SkipLink } from '@/components/SkipLink';'import { AppLayout } from '@/layout/AppLayout';'\n[error]     |                                                                                 ^\n[error]   2 | // Basic test for SkipLink component\n[error]   3 |\n[error]   4 | describe('SkipLink accessibility', () => {'  test('renders with correct attributes', () => {'    render(<SkipLink />);\n[error] tests/slugify.test.ts: SyntaxError: ';' expected. (1:69)\n[error] > 1 | import { slugify } from '@/lib/slugify';'import { unslugify } from '@/lib/slugify';'\n[error]     |                                                                     ^\n[error]   2 | it('removes accents from strings', () => {'  expect(slugify('Crème Brûlée')).toBe('creme-brulee');'});\n[error]   3 |\n[error]   4 | it('treats underscores as spaces', () => {'  expect(slugify('AI_Tools')).toBe('ai-tools');'});\n[error] tests/storybook/Pagination.visual.test.ts: SyntaxError: Unterminated string literal. (1:56)\n[error] > 1 | import { test, expect } from '@storybook/test-runner';'\n[error]     |                                                        ^\n[error]   2 | // This test verifies the Pagination component renders consistently in Storybook.\n[error]   3 | // It assumes Storybook is running on port 6006.\n[error]   4 |\n[error] tests/storybook/TalentProfilePage.visual.test.ts: SyntaxError: Unterminated string literal. (1:56)\n[error] > 1 | import { test, expect } from '@storybook/test-runner';'\n[error]     |                                                        ^\n[error]   2 | // This test assumes Storybook is running on port 6006\n[error]   3 | // and verifies the TalentProfilePage renders consistently.\n[error]   4 |\n[error] tests/supabaseSafeFetch.test.ts: SyntaxError: ';' expected. (1:79)\n[error] > 1 | import * as client from '@/integrations/supabase/client';'import { vi } from 'vitest';'\n[error]     |                                                                               ^\n[error]   2 | // Test that checkOnline returns false when navigator is offline\n[error]   3 | it('checkOnline returns false when navigator is offline', async () => {'  Object.defineProperty(window, 'navigator', {'    value: { onLine: false },\n[error]   4 |     writable: true,\n[error] tests/SyncRoute.test.ts: SyntaxError: ';' expected. (2:90)\n[error]   1 | // @vitest-environment node;\n[error] > 2 | import { beforeAll, afterAll, describe, it, expect } from 'vitest';'import express from 'express';'import syncRoutes from '../server/routes/sync';'import crypto from 'crypto';';\n[error]     |                                                                                          ^\n[error]   3 | let _server: any;\n[error]   4 | let baseUrl = '';'\n[error]   5 | beforeAll(() => {\n[error] tests/TalentDetail.test.tsx: SyntaxError: ';' expected. (1:103)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import { MemoryRouter, Route, Routes } from 'react-router-dom';'import { QueryClient, QueryClientProvider } from '@tanstack/react-query';'import { rest } from 'msw';'import { setupServer } from 'msw/node';'import TalentDetail from '@/src/pages/TalentDetail';';\n[error]     |                                                                                                       ^\n[error]   2 | const server = setupServer(\n[error]   3 |   rest.get('/api/talent/test-slug', (_req, res, ctx) =>'    res(ctx.json({\n[error]   4 |       profile: {\n[error] tests/TalentNotFound.test.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import NotFound from '@/components/NotFound';'import { getStaticProps } from '@/src/pages/talent/[id]';'\n[error]     |                                                                                ^\n[error]   2 | test('unknown talent id shows NotFound page', async () => {'  const result = await getStaticProps({ params: { id: 'unknown-id' } } as any);'  let show404 = false;\n[error]   3 |\n[error]   4 |   if ('notFound' in result && result.notFound) {'    show404 = true;\n[error] tests/TalentProfilePage.test.tsx: SyntaxError: ';' expected. (2:45)\n[error]   1 | // SKIP: This test is skipped due to outdated imports from '@/src/pages/talent/[id]'.'// import { render, screen } from '@testing-library/react';'// import { MemoryRouter, Route, Routes } from 'react-router-dom';'// import TalentProfilePage from '@/src/pages/talent/[id]';'// import { mockFetch } from './__mocks__/server';'\n[error] > 2 | describe('TalentProfilePage', () => {'  it('fetches and displays profile name', async () => {'    // mockFetch({\n[error]     |                                             ^\n[error]   3 |     //   profile: {\n[error]   4 |     //     id: 't-001','    //     full_name: 'Test Talent','    //     bio: 'Bio','    //     skills: ['React'],'    //     hourly_rate: 100,\n[error]   5 |     //     social: { twitter: 'https://twitter.com/test' }'    //   }\n[error] tests/ThemePersistence.test.tsx: SyntaxError: ';' expected. (1:92)\n[error] > 1 | import { render, fireEvent } from '@testing-library/react';'import { ThemeProvider } from '@/components/ThemeProvider';'import { ModeToggle } from '@/components/ModeToggle';'\n[error]     |                                                                                            ^\n[error]   2 | beforeEach(() => {\n[error]   3 |   localStorage.clear();\n[error]   4 |   window.matchMedia = window.matchMedia || jest.fn().mockImplementation(query => ({\n[error] tests/ThemeToggle.test.tsx: SyntaxError: Unterminated string literal. (3:68)\n[error]   1 | import { render, fireEvent, waitFor } from '@testing-library/react'; // Added waitFor'\n[error]   2 | // Mock Sentry to prevent errors in test environment\n[error] > 3 | jest.mock('@sentry/nextjs', () => ({'  captureException: jest.fn(),\n[error]     |                                                                    ^\n[error]   4 |   init: jest.fn(),\n[error]   5 |   // Add any other Sentry functions that might be called by the component or its dependencies\n[error]   6 |   // For example, if it uses withSentryConfig, Sentry.XYZ, etc.\n[error] tests/usePostsByCategory.test.tsx: SyntaxError: ';' expected. (1:113)\n[error] > 1 | import { renderHook, waitFor } from '@testing-library/react';'import { QueryClient, QueryClientProvider } from '@tanstack/react-query';'import { usePostsByCategory } from '@/hooks/usePostsByCategory';'import * as forumService from '@/services/forumPostService';'\n[error]     |                                                                                                                 ^\n[error]   2 | it('returns posts for slug', async () => {'  jest.spyOn(forumService, 'fetchPostsByCategory').mockResolvedValue(['    {\n[error]   3 |       id: '1','      title: 'Test','      content: 'c','      authorId: '1','      authorName: 'Test','      categoryId: 'getting-hired','      tags: [],\n[error]   4 |       createdAt: '','      updatedAt: '','      upvotes: 0,\n[error] tests/ViewModeContext.test.tsx: SyntaxError: ';' expected. (1:80)\n[error] > 1 | import { render, fireEvent } from '@testing-library/react';'import React from 'react';'import { ViewModeProvider, useViewMode } from '@/context/ViewModeContext';'jest.mock('@/pages/Marketplace.module.css', () => ({ grid: 'grid', list: 'list' }));'import styles from '@/src/pages/Marketplace.module.css';';\n[error]     |                                                                                ^\n[error]   2 | function TestComponent() {\n[error]   3 |   const { viewMode, setViewMode } = useViewMode();\n[error]   4 |   return (\n[error] tests/visual-regression.test.ts: SyntaxError: Unterminated string literal. (1:50)\n[error] > 1 | import { test, expect } from '@playwright/test';'\n[error]     |                                                  ^\n[error]   2 | test('Homepage visual regression', async ({ page }) => {'  await page.goto('/');'  expect(await page.screenshot()).toMatchSnapshot('homepage.png', { threshold: 0.1 });'});\n[error]   3 |\n[error] tests/WalletPage.test.tsx: SyntaxError: ';' expected. (1:82)\n[error] > 1 | import { render, screen } from '@testing-library/react';'import WalletPage from '@/src/pages/Wallet';'import * as useWalletHook from '@/hooks/useWallet';'\n[error]     |                                                                                  ^\n[error]   2 | describe('WalletPage', () => {'  it('renders balance heading', () => {'    jest.spyOn(useWalletHook, 'useWallet').mockReturnValue({'      wallet: { user_id: '1', balance: 100, updated_at: '' },'      transactions: [],\n[error]   3 |       loading: false,\n[error]   4 |       fetchWallet: jest.fn(),\n[error] token/multichain/deploy/deploy.js: SyntaxError: Unterminated string constant. (1:152)\n[error] > 1 | const hre = require(\"hardhat\");\"const fs = require(\"fs\");\"const path = require('path');'const _err = 'error';'const error = new Error('Deploy failed');'\n[error]     |                                                                                                                                                        ^\n[error]   2 | async function main() {\n[error]   3 |   const [deployer] = await hre.ethers.getSigners();\n[error]   4 |   console.warn(\"Deploying with\", deployer.address);\"\n[error] token/multichain/hardhat.config.js: SyntaxError: Unterminated string constant. (2:45)\n[error]   1 |  \n[error] > 2 | require(\"@nomicfoundation/hardhat-toolbox\");\"\n[error]     |                                             ^\n[error]   3 | module.exports = {\n[error]   4 |   solidity: \"0.8.19\",\"  networks: {\n[error]   5 |     hardhat: {},\n[error] types/fs.d.ts: SyntaxError: Unterminated string literal. (1:101)\n[error] > 1 | declare module 'fs' {'  export function readFileSync(path: string, opts?: unknown): string | Buffer;\n[error]     |                                                                                                     ^\n[error]   2 |   export function writeFileSync(path: string, data: unknown, opts?: unknown): void;\n[error]   3 |   export function existsSync(path: string): boolean;\n[error]   4 | }\n[error] types/global.d.ts: SyntaxError: Unterminated string literal. (188:45)\n[error]   186 |     \n[error]   187 |     // Fetch with Priority Hints\n[error] > 188 |     priority?: 'high' | 'low' | 'auto';'    \n[error]       |                                             ^\n[error]   189 |     // Fetch with Credentials\n[error]   190 |     credentials?: RequestCredentials;\n[error]   191 |     \n[error] types/next-cloudinary.d.ts: SyntaxError: Unterminated string literal. (1:155)\n[error] > 1 | import * as React from 'react';'export interface UploadProps { children?: React.ReactNode; onUpload?: (result: unknown) => void; uploadPreset?: string; };\n[error]     |                                                                                                                                                           ^\n[error]   2 | export declare const CldUploadButton: React.FC<UploadProps>;\n[error]   3 | export declare const CldUploadWidget: React.FC<UploadProps>;\n[error]   4 |\n[error] types/next/dynamic.d.ts: SyntaxError: Unterminated string literal. (1:46)\n[error] > 1 | import type { ComponentType } from 'react';';\n[error]     |                                              ^\n[error]   2 | export interface DynamicOptions {\n[error]   3 |   ssr?: boolean;\n[error]   4 |   loading?: ComponentType<unknown>;\n[error] types/next/image.d.ts: SyntaxError: Unterminated string literal. (1:69)\n[error] > 1 | import type { ImgHTMLAttributes, DetailedHTMLProps } from 'react';';\n[error]     |                                                                     ^\n[error]   2 | export interface ImageProps extends DetailedHTMLProps<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> {\n[error]   3 |   src: string;\n[error]   4 | }\n[error] types/next/index.d.ts: SyntaxError: Unterminated string literal. (1:45)\n[error] > 1 | import type { ReactElement } from 'react';';\n[error]     |                                             ^\n[error]   2 | export interface NextApiRequest {\n[error]   3 |   body?: unknown;\n[error]   4 |   query: Record<string, string | string[] | undefined>;\n[error] types/next/link.d.ts: SyntaxError: Unterminated string literal. (1:72)\n[error] > 1 | import type { AnchorHTMLAttributes, DetailedHTMLProps } from 'react';';\n[error]     |                                                                        ^\n[error]   2 | export interface LinkProps extends DetailedHTMLProps<AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement> {\n[error]   3 |   href: string;\n[error]   4 | }\n[error] types/next/server.d.ts: SyntaxError: Unterminated string literal. (1:61)\n[error] > 1 | declare module 'next/server' {'  export class NextResponse {\n[error]     |                                                             ^\n[error]   2 |     constructor(init?: unknown);\n[error]   3 |     static json(body: unknown, init?: unknown): NextResponse;\n[error]   4 |     static redirect(url: string | URL, init?: unknown): NextResponse;\n[error] types/orbitdb__core.d.ts: SyntaxError: Unterminated string literal. (1:118)\n[error] > 1 | declare module '@orbitdb/core' {'  export function createOrbitDB(ipfs: unknown, options?: unknown): Promise<unknown>;\n[error]     |                                                                                                                      ^\n[error]   2 | }\n[error] types/supabase-ssr.d.ts: SyntaxError: Unterminated string literal. (1:33)\n[error] > 1 | declare module '@supabase/ssr';'\n[error]     |                                 ^\n[error] types/vitest.d.ts: SyntaxError: Unterminated string literal. (1:56)\n[error] > 1 | import type { TestAPI } from 'vitest'';declare global {\n[error]     |                                                        ^\n[error]   2 |   const vi: typeof import('vitest').vi;'  const describe: TestAPI['describe'];'  const it: TestAPI['it'];'  const expect: TestAPI['expect'];'  const beforeEach: TestAPI['beforeEach'];'  const afterEach: TestAPI['afterEach'];'  const beforeAll: TestAPI['beforeAll'];'  const afterAll: TestAPI['afterAll'];'  const test: TestAPI['test'];'}\n[error]   3 | ;\n[error]   4 | export {}; \n[error] types/web-push.d.ts: SyntaxError: Unterminated string literal. (1:28)\n[error] > 1 | declare module 'web-push';'\n[error]     |                            ^\n[error] workbox-config.js: SyntaxError: Unexpected token (2:47)\n[error]   1 | module.exports = {\n[error] > 2 |   globDirectory: 'public/','  globPatterns: ['**/*.{html,js,css,svg,png,ico}'],'  swDest: 'public/service-worker.js','  navigateFallback: '/index.html','  // Prevent auth routes from falling back to index.html\n[error]     |                                               ^\n[error]   3 |   navigateFallbackDenylist: [/^\\/auth\\//]\n[error]   4 | };\n[error]   5 |\n",
      "command": "npm run format"
    },
    {
      "name": "Security Audit",
      "success": true,
      "duration": 2007,
      "output": "found 0 vulnerabilities\n",
      "error": "",
      "command": "npm audit --audit-level moderate"
    },
    {
      "name": "Dependency Check",
      "success": true,
      "duration": 1891,
      "output": "project@0.0.0 /Users/miami2/Documents/GitHub/bolt.new.zion.app\n├── @chakra-ui/react@3.22.0\n├── @emnapi/runtime@1.4.5 extraneous\n├── @emotion/react@11.14.0\n├── @emotion/styled@11.14.1\n├── @opentelemetry/context-async-hooks@2.0.1\n├── @opentelemetry/core@2.0.1\n├── @opentelemetry/instrumentation@0.203.0\n├── @opentelemetry/sdk-trace-base@2.0.1\n├── @sentry/nextjs@9.40.0\n├── @slack/bolt@4.4.0\n├── @supabase/ssr@0.6.1\n├── @supabase/supabase-js@2.52.0\n├── @swc/helpers@0.5.17\n├── @testing-library/jest-dom@6.6.3\n├── @testing-library/react@16.3.0\n├── @testing-library/user-event@14.6.1\n├── @types/jest@30.0.0\n├── @types/node@20.19.8\n├── @types/react-dom@19.1.6\n├── @types/react@19.1.8\n├── @types/socket.io-client@1.4.36\n├── @types/socket.io@3.0.1\n├── @typescript-eslint/eslint-plugin@8.37.0\n├── @typescript-eslint/parser@8.37.0\n├── @vitest/ui@3.2.4\n├── cors@2.8.5\n├── eslint-plugin-jsx-a11y@6.10.2\n├── eslint-plugin-react-hooks@5.2.0\n├── eslint-plugin-react@7.37.5\n├── eslint@9.31.0\n├── ethers@6.15.0\n├── express@5.1.0\n├── framer-motion@12.23.6\n├── i18next@25.3.2\n├── jest-environment-jsdom@30.0.4\n├── jest@30.0.4\n├── jsdom@26.1.0\n├── lucide-react@0.525.0\n├── next-auth@4.24.11\n├── next@15.4.2\n├── node-fetch@3.3.2\n├── prettier@3.6.2\n├── react-dom@19.1.0\n├── react-i18next@15.6.0\n├── react@19.1.0\n├── socket.io-client@4.8.1\n├── socket.io@4.8.1\n├── styled-jsx@5.1.7\n├── typescript@5.8.3\n├── vitest@3.2.4\n├── ws@8.18.3\n└── zod@4.0.5\n\n",
      "error": "",
      "command": "npm ls --depth=0"
    },
    {
      "name": "Build Test",
      "success": true,
      "duration": 44513,
      "output": "\n> project@0.0.0 build\n> next build\n\n   ▲ Next.js 15.4.2\n   - Environments: .env.local, .env\n\n   Creating an optimized production build ...\n ✓ Compiled successfully in 12.0s\n   Skipping validation of types\n   Skipping linting\n   Collecting page data ...\n   Generating static pages (0/194) ...\n   Generating static pages (48/194) \r\n   Generating static pages (96/194) \r\n   Generating static pages (145/194) \r\n ✓ Generating static pages (194/194)\n   Finalizing page optimization ...\n   Collecting build traces ...\n\nRoute (pages)                                Size  First Load JS\n┌ ○ /                                       515 B        93.8 kB\n├   /_app                                     0 B        93.3 kB\n├ ○ /403                                    518 B        93.8 kB\n├ ○ /404                                    515 B        93.8 kB\n├ ○ /500                                    516 B        93.8 kB\n├ ○ /about                                  519 B        93.8 kB\n├ ○ /academy/founder-course                 532 B        93.8 kB\n├ ○ /academy/futurescape                    530 B        93.8 kB\n├ ○ /academy/storybook                      529 B        93.8 kB\n├ ○ /account                                521 B        93.8 kB\n├ ○ /activity-log                           526 B        93.8 kB\n├ ○ /admin                                  524 B        93.8 kB\n├ ○ /admin/logs                             523 B        93.8 kB\n├ ○ /admin/performance                      527 B        93.8 kB\n├ ○ /admin/pitch-generator                  531 B        93.8 kB\n├ ○ /admin/products                         527 B        93.8 kB\n├ ○ /admin/vault                            522 B        93.8 kB\n├ ƒ /api/auth/[...nextauth]                   0 B        93.3 kB\n├ ƒ /api/auth/confirm                         0 B        93.3 kB\n├ ƒ /api/auth/forgot                          0 B        93.3 kB\n├ ƒ /api/auth/health                          0 B        93.3 kB\n├ ƒ /api/auth/login                           0 B        93.3 kB\n├ ƒ /api/auth/register                        0 B        93.3 kB\n├ ƒ /api/auth/resend-verification-email       0 B        93.3 kB\n├ ƒ /api/auth/session                         0 B        93.3 kB\n├ ƒ /api/blog                                 0 B        93.3 kB\n├ ƒ /api/blog/[slug]                          0 B        93.3 kB\n├ ƒ /api/categories                           0 B        93.3 kB\n├ ƒ /api/categories/[slug]/items              0 B        93.3 kB\n├ ƒ /api/checkout-session                     0 B        93.3 kB\n├ ƒ /api/checkout/session                     0 B        93.3 kB\n├ ƒ /api/create-payment-intent                0 B        93.3 kB\n├ ƒ /api/dev/dashboard                        0 B        93.3 kB\n├ ƒ /api/equipment                            0 B        93.3 kB\n├ ƒ /api/error-report                         0 B        93.3 kB\n├ ƒ /api/extension-health                     0 B        93.3 kB\n├ ƒ /api/favorites                            0 B        93.3 kB\n├ ƒ /api/feedback                             0 B        93.3 kB\n├ ƒ /api/health                               0 B        93.3 kB\n├ ƒ /api/health/environment                   0 B        93.3 kB\n├ ƒ /api/hello                                0 B        93.3 kB\n├ ƒ /api/image/[...params]                    0 B        93.3 kB\n├ ƒ /api/jobs                                 0 B        93.3 kB\n├ ƒ /api/kb-chat                              0 B        93.3 kB\n├ ƒ /api/logs                                 0 B        93.3 kB\n├ ƒ /api/marketplace/categories               0 B        93.3 kB\n├ ƒ /api/marketplace/equipment                0 B        93.3 kB\n├ ƒ /api/marketplace/overview                 0 B        93.3 kB\n├ ƒ /api/marketplace/product/[productId]      0 B        93.3 kB\n├ ƒ /api/marketplace/products                 0 B        93.3 kB\n├ ƒ /api/marketplace/talent                   0 B        93.3 kB\n├ ƒ /api/newsletter                           0 B        93.3 kB\n├ ƒ /api/performance-metrics                  0 B        93.3 kB\n├ ƒ /api/points/redeem                        0 B        93.3 kB\n├ ƒ /api/products                             0 B        93.3 kB\n├ ƒ /api/push/send                            0 B        93.3 kB\n├ ƒ /api/push/subscribe                       0 B        93.3 kB\n├ ƒ /api/resend-verification-email            0 B        93.3 kB\n├ ƒ /api/reviews                              0 B        93.3 kB\n├ ƒ /api/reviews/[productId]                  0 B        93.3 kB\n├ ƒ /api/search                               0 B        93.3 kB\n├ ƒ /api/search/suggest                       0 B        93.3 kB\n├ ƒ /api/services                             0 B        93.3 kB\n├ ƒ /api/socket                               0 B        93.3 kB\n├ ƒ /api/status                               0 B        93.3 kB\n├ ƒ /api/stripe/webhook                       0 B        93.3 kB\n├ ƒ /api/talent                               0 B        93.3 kB\n├ ƒ /api/talent/[id]                          0 B        93.3 kB\n├ ○ /auth/error                             521 B        93.8 kB\n├ ○ /auth/login                             523 B        93.8 kB\n├ ○ /auth/register                          524 B        93.8 kB\n├ ○ /auth/verify-email                      530 B        93.8 kB\n├ ○ /blog                                   521 B        93.8 kB\n├ ○ /blog/[slug]                            525 B        93.8 kB\n├ ○ /calendar/governance                    528 B        93.8 kB\n├ ○ /careers                                520 B        93.8 kB\n├ ○ /careers/[id]                           525 B        93.8 kB\n├ ○ /cart                                   522 B        93.8 kB\n├ ○ /case-studies                           529 B        93.8 kB\n├ ○ /case-studies/[slug]                    532 B        93.8 kB\n├ ○ /categories                             521 B        93.8 kB\n├ ○ /categories/services                    528 B        93.8 kB\n├ ○ /category/[slug]                        528 B        93.8 kB\n├ ○ /checkout                               527 B        93.8 kB\n├ ○ /checkout-test                          530 B        93.8 kB\n├ ○ /checkout-test/mock                     527 B        93.8 kB\n├ ○ /checkout/[id]                          527 B        93.8 kB\n├ ○ /checkout/success                       528 B        93.8 kB\n├ ○ /client-dashboard                       527 B        93.8 kB\n├ ○ /community                              528 B        93.8 kB\n├ ○ /community/[slug]                       530 B        93.8 kB\n├ ○ /community/blog                         528 B        93.8 kB\n├ ○ /community/category/[categoryId]        538 B        93.8 kB\n├ ○ /community/forum                        528 B        93.8 kB\n├ ○ /company/[companySlug]                  532 B        93.8 kB\n├ ○ /constitution                           521 B        93.8 kB\n├ ○ /contact                                518 B        93.8 kB\n├ ○ /convene                                521 B        93.8 kB\n├ ○ /creator-dashboard                      528 B        93.8 kB\n├ ○ /dao/create-nation                      527 B        93.8 kB\n├ ○ /dao/templates                          525 B        93.8 kB\n├ ○ /dashboard                              528 B        93.8 kB\n├ ○ /dashboard/ai-core                      534 B        93.8 kB\n├ ○ /debug                                  517 B        93.8 kB\n├ ○ /deploy/genesis                         525 B        93.8 kB\n├ ○ /dev/dashboard                          524 B        93.8 kB\n├ ○ /developers/docs/samples                530 B        93.8 kB\n├ ○ /devnet                                 520 B        93.8 kB\n├ ○ /docs                                   521 B        93.8 kB\n├ ○ /docs/[...slug]                         528 B        93.8 kB\n├ ○ /docs/api-reference                     529 B        93.8 kB\n├ ○ /docs/swagger                           524 B        93.8 kB\n├ ○ /economy/simulator                      528 B        93.8 kB\n├ ○ /enterprise                             527 B        93.8 kB\n├ ○ /enterprise/admin                       527 B        93.8 kB\n├ ○ /enterprise/billing                     529 B        93.8 kB\n├ ○ /equipment                              526 B        93.8 kB\n├ ○ /equipment/[id]                         525 B        93.8 kB\n├ ○ /error                        ",
      "error": "",
      "command": "npm run build"
    }
  ],
  "summary": {
    "total": 8,
    "successful": 5,
    "failed": 3,
    "duration": 129341
  }
}
