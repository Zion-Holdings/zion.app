#!/usr/bin/env node
/* eslint-disable */
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

function runTsc() {
  try {
    execSync('npx tsc --noEmit', { stdio: ['ignore', 'pipe', 'pipe'] });
    return { ok: true, output: '' };
  } catch (e) {
    const out = (e.stdout || e.stderr || Buffer.from('')).toString();
    return { ok: false, output: out };
  }
}

function summarize(output) {
  const lines = output.split(/\r?\n/);
  const errors = lines.filter((l) => /error TS\d+:/.test(l)).length;
  return { errors };
}

function toMarkdown(sum) {
  const lines = ['# TypeScript Check Report', '', `Errors: ${sum.errors}`, '', '_Generated by automation/tsc-summary.cjs_'];
  return lines.join('\n');
}

function main() {
  const res = runTsc();
  const sum = res.ok ? { errors: 0 } : summarize(res.output);
  const docs = path.join(process.cwd(), 'docs');
  if (!fs.existsSync(docs)) fs.mkdirSync(docs, { recursive: true });
  fs.writeFileSync(path.join(docs, 'type-check-report.json'), JSON.stringify(sum, null, 2));
  fs.writeFileSync(path.join(docs, 'type-check-report.md'), toMarkdown(sum));
  console.log('tsc-summary: updated docs/type-check-report.*');
}

if (require.main === module) main();