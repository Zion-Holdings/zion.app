{
  "timestamp": "2025-07-25T06:56:27.863Z",
  "cycle": 27,
  "automations": [
    {
      "name": "Zion App Maintainer",
      "success": false,
      "duration": 523,
      "output": "",
      "error": "Command failed: npm run maintain\n/Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/scripts/zion-app-maintainer.cjs:383\nconst timeoutId = \n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at wrapSafe (node:internal/modules/cjs/loader:1662:18)\n    at Module._compile (node:internal/modules/cjs/loader:1704:20)\n    at Object..js (node:internal/modules/cjs/loader:1895:10)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49\n\nNode.js v22.16.0\n",
      "command": "npm run maintain"
    },
    {
      "name": "Complete Zion Automation",
      "success": true,
      "duration": 41136,
      "output": "\n> project@0.0.0 automate\n> node scripts/complete-zion-automation.cjs\n\ninfo: [2025-07-25T06:56:29.079Z] [INFO] 🚀 Starting Zion App Automation {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.081Z\"}\ninfo: [2025-07-25T06:56:29.083Z] [INFO] 🔧 This will fix issues and continuously improve the app {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.083Z\"}\ninfo: [2025-07-25T06:56:29.084Z] [INFO] 🔧 Fixing path-to-regexp issue... {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.084Z\"}\ninfo: [2025-07-25T06:56:29.087Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/api/auth/[...nextauth].ts {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.087Z\"}\ninfo: [2025-07-25T06:56:29.087Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/api/blog/[slug].ts {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.087Z\"}\ninfo: [2025-07-25T06:56:29.088Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/api/image/[...params].ts {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.088Z\"}\ninfo: [2025-07-25T06:56:29.089Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/api/marketplace/product/[productId].ts {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.089Z\"}\ninfo: [2025-07-25T06:56:29.089Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/api/reviews/[productId].ts {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.089Z\"}\ninfo: [2025-07-25T06:56:29.090Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/api/talent/[id].ts {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.090Z\"}\ninfo: [2025-07-25T06:56:29.110Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/blog/[slug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.110Z\"}\ninfo: [2025-07-25T06:56:29.110Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/careers/[id].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.110Z\"}\ninfo: [2025-07-25T06:56:29.111Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/case-studies/[slug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.111Z\"}\ninfo: [2025-07-25T06:56:29.111Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/category/[slug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.111Z\"}\ninfo: [2025-07-25T06:56:29.112Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/checkout/[id].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.112Z\"}\ninfo: [2025-07-25T06:56:29.112Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/community/[slug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.112Z\"}\ninfo: [2025-07-25T06:56:29.112Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/community/category/[categoryId].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.112Z\"}\ninfo: [2025-07-25T06:56:29.112Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/company/[companySlug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.112Z\"}\ninfo: [2025-07-25T06:56:29.113Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/docs/[...slug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.113Z\"}\ninfo: [2025-07-25T06:56:29.113Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/equipment/[id].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.113Z\"}\ninfo: [2025-07-25T06:56:29.114Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/governance/[proposalId].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.114Z\"}\ninfo: [2025-07-25T06:56:29.114Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/it-onsite-services/[country].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.114Z\"}\ninfo: [2025-07-25T06:56:29.115Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/marketplace/listing/[slug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.115Z\"}\ninfo: [2025-07-25T06:56:29.115Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/nations/[slug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.115Z\"}\ninfo: [2025-07-25T06:56:29.115Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/order-confirmation/[orderId].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.115Z\"}\ninfo: [2025-07-25T06:56:29.115Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/orders/[orderId].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.115Z\"}\ninfo: [2025-07-25T06:56:29.116Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/product/[id].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.116Z\"}\ninfo: [2025-07-25T06:56:29.116Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/project-room/[projectId].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.116Z\"}\ninfo: [2025-07-25T06:56:29.117Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/roadmap/[id].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.117Z\"}\ninfo: [2025-07-25T06:56:29.117Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/search/[slug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.117Z\"}\ninfo: [2025-07-25T06:56:29.117Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/services/[slug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.117Z\"}\ninfo: [2025-07-25T06:56:29.118Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/talent/[id].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.118Z\"}\ninfo: [2025-07-25T06:56:29.119Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/tutorials/[slug].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.119Z\"}\ninfo: [2025-07-25T06:56:29.119Z] [INFO] 🔧 Fixing dynamic route: /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/video-call/[roomId].tsx {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.119Z\"}\ninfo: [2025-07-25T06:56:29.119Z] [INFO] 🔧 Fixing route patterns... {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.119Z\"}\ninfo: [2025-07-25T06:56:29.121Z] [INFO] ✅ Path-to-regexp issues fixed {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.121Z\"}\ninfo: [2025-07-25T06:56:29.131Z] [INFO] 🔧 Fixing TypeScript issues... {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:29.131Z\"}\ninfo: [2025-07-25T06:56:41.011Z] [WARN] ⚠️  TypeScript check completed with issues {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:41.011Z\"}\ninfo: [2025-07-25T06:56:41.012Z] [INFO] 🔧 Fixing linting issues... {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:41.012Z\"}\ninfo: [2025-07-25T06:56:55.364Z] [WARN] ⚠️  Linting completed with issues {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:55.364Z\"}\ninfo: [2025-07-25T06:56:55.365Z] [INFO] ⚡ Optimizing performance... {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:56:55.365Z\"}\ninfo: [2025-07-25T06:57:03.407Z] [INFO] 🔒 Checking security... {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:57:03.407Z\"}\ninfo: [2025-07-25T06:57:09.504Z] [INFO] 🔒 Security check passed {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:57:09.504Z\"}\ninfo: [2025-07-25T06:57:09.504Z] [INFO] 📊 Generating automation report... {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:57:09.504Z\"}\ninfo: [2025-07-25T06:57:09.505Z] [INFO] ✅ Report generated: automation/report.json {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:57:09.505Z\"}\ninfo: [2025-07-25T06:57:09.505Z] [INFO] ✅ Automation complete! {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:57:09.505Z\"}\ninfo: [2025-07-25T06:57:09.505Z] [INFO] 📊 Summary: 1 fixes, 0 issues, 1 improvements {\"service\":\"automation-script\",\"timestamp\":\"2025-07-25T06:57:09.505Z\"}\n",
      "error": "",
      "command": "npm run automate"
    },
    {
      "name": "TypeScript Check",
      "success": false,
      "duration": 538,
      "output": "",
      "error": "Command failed: npm run typecheck\nnpm error Missing script: \"typecheck\"\nnpm error\nnpm error Did you mean this?\nnpm error   npm run type-check # run the \"type-check\" package script\nnpm error\nnpm error To see a list of scripts, run:\nnpm error   npm run\nnpm error A complete log of this run can be found in: /Users/klebergarciaalcatrao/.npm/_logs/2025-07-25T06_57_09_851Z-debug-0.log\n",
      "command": "npm run typecheck"
    },
    {
      "name": "Linting Fix",
      "success": false,
      "duration": 745,
      "output": "",
      "error": "Command failed: npm run lint:fix\nnpm error Missing script: \"lint:fix\"\nnpm error\nnpm error To see a list of scripts, run:\nnpm error   npm run\nnpm error A complete log of this run can be found in: /Users/klebergarciaalcatrao/.npm/_logs/2025-07-25T06_57_10_304Z-debug-0.log\n",
      "command": "npm run lint:fix"
    },
    {
      "name": "Code Formatting",
      "success": false,
      "duration": 300180,
      "output": "",
      "error": "Command failed: npm run format\n[error] __mocks__/@sentry/nextjs.js: SyntaxError: Unexpected token (52:1)\n[error]   50 | const wrapErrorGetInitialPropsWithSentry =\n[error]   51 |   Sentry.wrapErrorGetInitialPropsWithSentry;\n[error] > 52 | default Sentry;\n[error]      | ^\n[error]   53 |\n[error] __mocks__/fileMock.js: SyntaxError: Unexpected token (2:1)\n[error]   1 | // __mocks__/fileMock.js;\n[error] > 2 | default test-file-stub';\n[error]     | ^\n[error] __tests__/api/auth/forgot.test.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | import { createMocks } from node-mocks-http';import type { NextApiRequest, NextApiResponse } from 'next';import axios from axios';import forgotHandler from ../../../pages/api/auth/forgot';;jest.mock('axios')const mockedAxios = axios as jest.Mocked<typeof axios>\n[error]     |                                            ^\n[error]   2 |\n[error]   3 | describe('/api/auth/forgot API Endpoint', () => {'  const OLD_ENV = process.env\n[error]   4 |   beforeEach(() => {\n[error] __tests__/api/auth/register.test.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | import { createMocks } from node-mocks-http';import type { NextApiRequest, NextApiResponse } from 'next';// Import the handler directly to test it\n[error]     |                                            ^\n[error]   2 | // We will extract getAuth0ManagementToken for separate unit tests later if needed,\n[error]   3 | // or test it implicitly via the main handler. For now, let's focus on the handler.'import registerHandler from ../../../pages/api/auth/register';\n[error]   4 | // Mock the global fetch function\n[error] __tests__/api/categories.test.ts: SyntaxError: Expression expected. (1:45)\n[error] > 1 | import categoriesApiHandler from @/pages/api/categories'; // Correctly import the default export'import { CATEGORIES } from @/data/categories';// Prisma is now mocked from @prisma/client directly in the jest.mock call;\n[error]     |                                             ^\n[error]   2 | import { createMocks, createRequest as _createRequest, createResponse as _createResponse } from node-mocks-http';import type { NextApiRequest, NextApiResponse } from 'next';import { PrismaClient } from @prisma/client';\n[error]   3 | // Mock Prisma\n[error]   4 | jest.mock('@prisma/client', () => {'  const mockPrismaClient = {\n[error] __tests__/api/feedback.test.ts: SyntaxError: ';' expected. (1:56)\n[error] > 1 | import { MongoMemoryServer } from mongodb-memory-server';import { createMocks } from node-mocks-http';import type { NextApiRequest, NextApiResponse } from 'next';import handler from ../../temp_essential_pages/api/feedback';import mongoose from mongoose';import Feedback from ../../server/models/Feedback';;\n[error]     |                                                        ^\n[error]   2 | let mongoServer: MongoMemoryServer;\n[error]   3 |\n[error]   4 | beforeAll(async () => {\n[error] __tests__/api/health.test.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | import { createMocks } from node-mocks-http';import type { NextApiRequest, NextApiResponse } from 'next';import handler from @/pages/api/health';\n[error]     |                                            ^\n[error]   2 | describe('/api/health API Endpoint', () => {'  it('returns status ok with uptime', async () => {'    const { req, res } = createMocks<NextApiRequest, NextApiResponse>({ method: GET' });\n[error]   3 |     await handler(req, res);\n[error]   4 |\n[error] __tests__/api/log-error.test.js: SyntaxError: Unexpected token (11:67)\n[error]    9 | // Mock PrismaClient and its methods\n[error]   10 | // We need to mock specific methods on the `errorAnalysisSuggestion` model.;\n[error] > 11 | import { describe, test, beforeAll, beforeEach, expect, vi } from vitest';;\n[error]      |                                                                   ^\n[error]   12 | const mockPrismaErrorAnalysisSuggestion = {\n[error]   13 |   findUnique: vi.fn(),\n[error]   14 |   create: vi.fn(),\n[error] __tests__/api/newsletter.subscribe.test.js: SyntaxError: Unexpected token (1:29)\n[error] > 1 | import { createMocks } from node-mocks-http';import fs from fs';import path from path';import handler from ../../api/newsletter/subscribe';;\n[error]     |                             ^\n[error]   2 | const FILE_PATH = path.join(process.cwd(), data', newsletter-subscriptions.json');\n[error]   3 | describe('/api/newsletter/subscribe', () => {'  beforeEach(() => {\n[error]   4 |     fs.writeFileSync(FILE_PATH, JSON.stringify([]));\n[error] __tests__/api/newsletter.test.ts: SyntaxError: ';' expected. (1:59)\n[error] > 1 | import { createMocks, RequestMethod } from node-mocks-http';import type { NextApiRequest, NextApiResponse } from 'next';import handler from @/pages/api/newsletter';import { mailchimpService } from @/integrations/mailchimp';\n[error]     |                                                           ^\n[error]   2 | jest.mock('@/integrations/mailchimp', () => ({'  mailchimpService: { addSubscriber: jest.fn() }\n[error]   3 | }));\n[error]   4 | jest.mock('@/lib/email', () => ({'  sendEmailWithSendGrid: jest.fn().mockResolvedValue(undefined)\n[error] __tests__/api/products.test.ts: SyntaxError: ';' expected. (1:167)\n[error] > 1 | import { NextApiRequest, NextApiResponse } from 'next';import { createMocks, createRequest as _createRequest, createResponse as _createResponse } from node-mocks-http';import productHandler from @/pages/api/products/index';import { PrismaClient } from @prisma/client';\n[error]     |                                                                                                                                                                       ^\n[error]   2 | // Mock Prisma Client\n[error]   3 | jest.mock('@prisma/client', () => {'  const mPrismaClient = {\n[error]   4 |     product: {\n[error] __tests__/api/reset-password.test.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | import { createMocks } from node-mocks-http';import type { NextApiRequest, NextApiResponse } from 'next';import handler from @/pages/api/auth/reset';import { describe, it, expect } from vitest';\n[error]     |                                            ^\n[error]   2 | describe('/api/auth/reset token validation', () => {'  it('returns 400 if token is missing', async () => {'    const { req, res } = createMocks({ method: POST', body: { newPassword: pass12345' } });    await handler(req as NextApiRequest, res as NextApiResponse);\n[error]   3 |     expect(res._getStatusCode()).toBe(400);\n[error]   4 |     expect(res._getJSONData().message).toBe('Token and new password are required.');  });\n[error] __tests__/api/reviews.test.ts: SyntaxError: ';' expected. (1:59)\n[error] > 1 | import { createMocks, RequestMethod } from node-mocks-http';import type { NextApiRequest, NextApiResponse } from 'next';import reviewsHandler from @/pages/api/reviews'; // Handler for POST /api/reviews'import productReviewsHandler from @/pages/api/reviews/[productId]; // Handler for GET /api/reviews/[productId]import { PrismaClient } from @prisma/client';import { supabase } from @/integrations/supabase/client';\n[error]     |                                                           ^\n[error]   2 | // Mock Prisma Client\n[error]   3 | jest.mock('@prisma/client', () => {'  const mockPrismaClient = {\n[error]   4 |     productReview: {\n[error] __tests__/api/status.test.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | import { createMocks } from node-mocks-http';import type { NextApiRequest, NextApiResponse } from 'next';import handler from @/pages/api/status';\n[error]     |                                            ^\n[error]   2 | describe('/api/status API Endpoint', () => {'  it('returns service status list', async () => {'    const { req, res } = createMocks<NextApiRequest, NextApiResponse>({ method: GET' });\n[error]   3 |     await handler(req, res);\n[error]   4 |\n[error] __tests__/api/subscribe.test.js: SyntaxError: Unexpected token (1:29)\n[error] > 1 | import { createMocks } from node-mocks-http';import handler from ../../api/subscribe';\n[error]     |                             ^\n[error]   2 | describe('/api/subscribe', () => {'  it('rejects invalid email', async () => {'    const { req, res } = createMocks({\n[error]   3 |       method: 'POST',      body: { email: 'bad-email' }    });\n[error]   4 |     await handler(req, res);\n[error] __tests__/api/talent.test.ts: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import axios from axios';import { getAllTalent, getTalentBySlug } from @/api/talent';import { TALENT_PROFILES };from @/data/talentData'; // Using actual data for comparison\n[error]     |                        ^\n[error]   2 | // Mock axios\n[error]   3 | jest.mock('axios', () => ({'  ...jest.requireActual('axios'), // Import and retain default behavior'  get: jest.fn(), // Mock only get\n[error]   4 |   isAxiosError: jest.fn((payload): payload is import('axios').AxiosError => { // Explicitly type payload'    // Basic check for AxiosError structure for testing purposes\n[error] __tests__/api/talent/index.test.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | import { createMocks } from node-mocks-http';import type { NextApiRequest, NextApiResponse } from 'next';import talentHandler from @/pages/api/talent/index';import { TALENT_PROFILES } from @/data/talentData';import type { TalentProfile as _TalentProfile } from @/types/talent';\n[error]     |                                            ^\n[error]   2 | describe('/api/talent', () => {'  it('should return 200 and all talent profiles for GET requests', () => {'    const { req, res } = createMocks<NextApiRequest, NextApiResponse>({\n[error]   3 |       method: GET',    });\n[error]   4 |\n[error] __tests__/api/user-id.test.ts: SyntaxError: Unterminated string literal. (1:86)\n[error] > 1 | import { expect, test, vi } from vitest';import handler from @/pages/api/users/[id];;\n[error]     |                                                                                      ^\n[error]   2 | function mockReq(method: string, query: unknown = {}, body?: any) {\n[error]   3 |   return { method, query, body } as any;\n[error]   4 | };\n[error] __tests__/api/user-me.test.ts: SyntaxError: ';' expected. (1:36)\n[error] > 1 | import { expect, test } from vitest';import handler from @/pages/api/users/me';;\n[error]     |                                    ^\n[error]   2 | function mockReq(method: string, body?: any) {\n[error]   3 |   return { method, body } as any;\n[error]   4 | };\n[error] __tests__/auth/login.test.ts: SyntaxError: ';' expected. (1:71)\n[error] > 1 | import { describe, it, expect, vi, beforeEach, afterEach } from vitest';import { loginUser } from @/services/authService';import { NextApiRequest, NextApiResponse } from 'next';;\n[error]     |                                                                       ^\n[error]   2 | const mockSignInWithPassword = vi.fn();\n[error]   3 |\n[error]   4 | vi.mock('@supabase/supabase-js', () => ({'  createClient: vi.fn(() => ({\n[error] __tests__/auth/register.test.ts: SyntaxError: ';' expected. (1:62)\n[error] > 1 | import { describe, expect, test, vi, beforeEach } from vitest';import handler from @/pages/api/auth/register'; // Assuming this is the Next.js API handler\n[error]     |                                                              ^\n[error]   2 | // Mock the Supabase client;\n[error]   3 | const signUpMock = vi.fn();\n[error]   4 | vi.mock('@supabase/supabase-js', () => ({'  createClient: () => ({\n[error] __tests__/AuthContext.test.tsx: SyntaxError: Expression expected. (1:60)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from @testing-library/react';import { AuthProvider } from @/context/auth/AuthProvider';import { AuthContext } from @/context/auth/AuthContext';import { loginUser } from @/services/authService';import { useAuthOperations } from @/hooks/useAuthOperations';import { safeStorage } from @/utils/safeStorage';\n[error]     |                                                            ^\n[error]   2 | jest.mock('@/services/authService');jest.mock('@/hooks/useAuthOperations');jest.mock('@/utils/safeStorage', () => ({'  safeStorage: { setItem: jest.fn(), getItem: jest.fn(), removeItem: jest.fn() },\n[error]   3 |   safeSessionStorage: { setItem: jest.fn(), getItem: jest.fn(), removeItem: jest.fn() }\n[error]   4 | }));\n[error] __tests__/cart-checkout-fixes.test.ts: SyntaxError: ';' expected. (2:76)\n[error]   1 | // Test for cart and checkout fixes - Issue #7\n[error] > 2 | describe('Cart and Checkout Functionality - Issue #7 Fix', () => {'  test('cart page is accessible without authentication', () => {'    // Test that cart page can be accessed without login\n[error]     |                                                                            ^\n[error]   3 |     const mockUseAuth = {\n[error]   4 |       user: null,\n[error]   5 |       isAuthenticated: false,\n[error] __tests__/components/admin/pitch-generator/InputFields.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor } from @testing-library/react';import @testing-library/jest-dom';import InputFields from @/components/admin/pitch-generator/InputFields';\n[error]     |                        ^\n[error]   2 | // Mock the next/router\n[error]   3 | jest.mock('next/router', () => ({'  useRouter: jest.fn()\n[error]   4 | }));\n[error] __tests__/components/ApiErrorBoundary.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor } from @testing-library/react';import { QueryClient, QueryClientProvider } from @tanstack/react-query';import { ApiErrorBoundary } from @/components/ApiErrorBoundary';\n[error]     |                        ^\n[error]   2 | // Mock Sentry\n[error]   3 | jest.mock('@sentry/nextjs', () => ({'  withScope: jest.fn((callback) => callback({\n[error]   4 |     setTag: jest.fn(),\n[error] __tests__/components/auth/SignupForm.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { renderWithProviders, screen, fireEvent, waitFor } from __tests__/test-utils.tsx';import { useRouter } from next/router';import axios from axios';import { toast } from @/hooks/use-toast';import SignupForm from @/components/auth/SignupForm';import { signIn } from next-auth/react';\n[error]     |                        ^\n[error]   2 | // Mock dependencies\n[error]   3 | jest.mock('next/router');jest.mock('axios');jest.mock('@/hooks/use-toast');jest.mock('next-auth/react', () => ({'  signIn: jest.fn()\n[error]   4 | }));\n[error] __tests__/components/cart/GuestCheckoutModal.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent } from @testing-library/react';import @testing-library/jest-dom';import { GuestCheckoutModal } from @/components/cart/GuestCheckoutModal'; // Adjust path as necessary\n[error]     |                        ^\n[error]   2 | // Mock isProdDomain as it's used in the component'jest.mock('@/utils/getStripe', () => ({'  isProdDomain: jest.fn(() => false), // Default to false (not prod) to show test data warning\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/components/CartBadge.test.tsx: SyntaxError: Expression expected. (1:40)\n[error] > 1 | import { render, screen } from @testing-library/react';import userEvent from @testing-library/user-event';import PrimaryNav from @/layout/PrimaryNav';import { Provider } from react-redux';import configureStore from redux-mock-store';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';;\n[error]     |                                        ^\n[error]   2 | const mockStore = configureStore([]);\n[error]   3 | function renderWithStore(cartItems: unknown[]) {\n[error]   4 |   const store = mockStore({ cart: { items: cartItems } });\n[error] __tests__/components/CategoryCard.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import { MemoryRouter } from react-router-dom';import { CategoryCard } from @/components/CategoryCard';;\n[error]     |                        ^\n[error]   2 | const renderCard = (ui: React.ReactElement) => render(<MemoryRouter>{ui}</MemoryRouter>);\n[error]   3 |\n[error]   4 | describe('CategoryCard', () => {'  test('renders title, description and count', () => {'    renderCard(\n[error] __tests__/components/ConnectWalletButton.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent } from @testing-library/react';import ConnectWalletButton from @/components/ConnectWalletButton';import { useWallet } from @/context/WalletContext';import { useTokenBalance } from @/hooks/useTokenBalance';\n[error]     |                        ^\n[error]   2 | jest.mock('@/context/WalletContext');jest.mock('@/hooks/useTokenBalance');;\n[error]   3 | const mockUseWallet = useWallet as jest.Mock;\n[error]   4 | const mockUseTokenBalance = useTokenBalance as jest.Mock;\n[error] __tests__/components/EnhancedNewsletterForm.test.tsx: SyntaxError: Expression expected. (1:60)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from @testing-library/react';import { vi, expect, test, describe, beforeEach, afterEach } from vitest';import { EnhancedNewsletterForm } from @/components/EnhancedNewsletterForm';import * as toastHook from @/hooks/use-toast';\n[error]     |                                                            ^\n[error]   2 | vi.mock('@/hooks/use-toast');\n[error]   3 | describe('EnhancedNewsletterForm', () => {'  let _originalFetch: typeof global.fetch;\n[error]   4 |\n[error] __tests__/components/FavoriteButton.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent } from @testing-library/react';import { Provider } from react-redux';import { configureStore } from @reduxjs/toolkit';import wishlistReducer from @/store/wishlistSlice';import { FavoriteButton } from @/components/FavoriteButton';\n[error]     |                        ^\n[error]   2 | jest.mock('@/hooks/useAuth', () => ({'  useAuth: () => ({ isAuthenticated: true, user: { id: u1' } })}));\n[error]   3 |\n[error]   4 | beforeEach(() => {\n[error] __tests__/components/feedback/FeedbackWidget.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import userEvent from @testing-library/user-event';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import { useRouter } from next/router';import { FeedbackProvider } from @/context/FeedbackContext';import { FeedbackWidget } from @/components/feedback/FeedbackWidget';jest.mock('@/hooks/useAuth', () => ({ useAuth: () => ({ user: null }) }));;\n[error]     |                        ^\n[error]   2 | function TestRoutes() {\n[error]   3 |   const router = useRouter();\n[error]   4 |   return (\n[error] __tests__/components/Footer.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import { Footer } from @/components/Footer';import mockNextRouter from next-router-mock';\n[error]     |                        ^\n[error]   2 | jest.mock('next/router', () => mockNextRouter);\n[error]   3 | /**\n[error]   4 |  * Verify that social media links contain the correct href attributes.\n[error] __tests__/components/GlobalErrorBoundary.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent } from @testing-library/react';import GlobalErrorBoundary from @/components/GlobalErrorBoundary';// We might not need GlobalErrorFallback directly if we test through GlobalErrorBoundary\n[error]     |                        ^\n[error]   2 | // import GlobalErrorFallback from @/components/GlobalErrorBoundary'; // Keep if direct testing is chosen\n[error]   3 | // Mocking logError to prevent actual logging during tests\n[error]   4 | jest.mock('@/utils/logError', () => ({'  logError: jest.fn()\n[error] __tests__/components/LanguageSwitcher.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, fireEvent, screen } from @testing-library/react';import { I18nextProvider } from react-i18next';import i18n from ../../src/i18n/index'; // Adjust path if necessary'import LanguageSwitcher from ../../src/components/LanguageSwitcher'; // Adjust path if necessary'import Home from ../../src/pages/Home'; // Adjust path if necessary\n[error]     |                        ^\n[error]   2 | describe('LanguageSwitcher', () => {'  beforeEach(() => {\n[error]   3 |     // Reset language to English before each test\n[error]   4 |     i18n.changeLanguage('en');  });\n[error] __tests__/components/MarketplaceErrorBoundary.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor } from @testing-library/react';import { MarketplaceErrorBoundary } from @/components/MarketplaceErrorBoundary';import * as Sentry from @sentry/nextjs';import { mutate } from swr';\n[error]     |                        ^\n[error]   2 | // Mock dependencies\n[error]   3 | jest.mock('@sentry/nextjs');jest.mock('swr');;\n[error]   4 | const ThrowError = ({ shouldThrow }: { _shouldThrow: boolean }) => {\n[error] __tests__/components/NewsletterForm.test.tsx: SyntaxError: Expression expected. (1:60)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from @testing-library/react';import { vi, expect, describe, test, beforeEach, afterEach } from vitest';import { NewsletterForm } from @/components/NewsletterForm';import * as toastHook from @/hooks/use-toast';\n[error]     |                                                            ^\n[error]   2 | vi.mock('@/hooks/use-toast');\n[error]   3 | describe('NewsletterForm', () => {'  let _originalFetch: typeof global.fetch;\n[error]   4 |\n[error] __tests__/components/onboarding/GuidedTour.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent } from @testing-library/react';import { GuidedTour } from @/components/onboarding/GuidedTour';\n[error]     |                        ^\n[error]   2 | // Helper to add target elements to the DOM;\n[error]   3 | function setupTargets() {\n[error]   4 |   const profile = document.createElement('button');  profile.id = profile-link';  profile.textContent = profile';  document.body.appendChild(profile);\n[error] __tests__/components/onboarding/SignUpForm.test.tsx: SyntaxError: Declaration or statement expected. (1:1)\n[error] > 1 | import @testing-library/jest-dom';import React from react';import { render, screen, fireEvent } from @testing-library/react';import { vi } from vitest';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import SignUpForm from @/components/onboarding/SignUpForm';import { useAuth as _useAuth } from @/hooks/useAuth';\n[error]     | ^\n[error]   2 | // Create mock functions that can be accessed in tests;\n[error]   3 | const mockLoginWithGoogle = jest.fn();\n[error]   4 | const mockSignup = jest.fn().mockResolvedValue({});\n[error] __tests__/components/ProductCard.test.tsx: SyntaxError: Expression expected. (1:40)\n[error] > 1 | import { render, screen } from @testing-library/react';import ProductCard from @/components/ProductCard';// Use ProductListing from @/types/listings'; as that's what Marketplace.tsx provides'import { ProductListing } from @/types/listings';import { AuthProvider } from @/context/auth/AuthProvider';import { Provider } from react-redux';import { store } from @/store'; // Assuming store is correctly set up for tests'import { FavoritesProvider } from @/context/FavoritesContext';import { GlobalSnackbarProvider } from @/context/SnackbarContext'; // Assuming this is the correct Snackbar provider'import { captureException } from @/utils/sentry';\n[error]     |                                        ^\n[error]   2 | // Mock next/router;\n[error]   3 | const mockPush = jest.fn();\n[error]   4 | jest.mock('next/router', () => ({'  useRouter: () => ({\n[error] __tests__/components/ProtectedRoute.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import { MemoryRouter, Routes, Route } from react-router-dom';import ProtectedRoute from @/components/ProtectedRoute';import { useAuth } from @/hooks/useAuth';import { useTenantAdminStatus } from @/hooks/useWhitelabelTenant';import { useWhitelabel } from @/context/WhitelabelContext';\n[error]     |                        ^\n[error]   2 | jest.mock('@/hooks/useAuth');jest.mock('@/hooks/useWhitelabelTenant');jest.mock('@/context/WhitelabelContext');;\n[error]   3 | const mockUseAuth = useAuth as jest.Mock;\n[error]   4 | const mockUseTenantAdminStatus = useTenantAdminStatus as jest.Mock;\n[error] __tests__/components/ScrollProgressBar.test.tsx: SyntaxError: Expression expected. (1:43)\n[error] > 1 | import { render, fireEvent } from @testing-library/react';import { ScrollProgressBar } from @/components/ScrollProgressBar';\n[error]     |                                           ^\n[error]   2 | describe('ScrollProgressBar', () => {'  test('updates progress width when scrolling', () => {'    Object.defineProperty(window, innerHeight', {'      value: 1000,\n[error]   3 |       writable: true\n[error]   4 |     });\n[error] __tests__/components/WhitepaperPreviewPanel.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import @testing-library/jest-dom';import WhitepaperPreviewPanel from @/components/WhitepaperPreviewPanel';\n[error]     |                        ^\n[error]   2 | // Mock react-markdown\n[error]   3 | jest.mock('react-markdown', () => {'  const MockMarkdown = (props: { children: React.ReactNode }) => <div data-testid=\"mock-markdown\">{props.children}</div>;\"  MockMarkdown.displayName = MockMarkdown';  return MockMarkdown;\n[error]   4 | });\n[error] __tests__/components/WhitepaperSectionEditor.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor } from @testing-library/react';import @testing-library/jest-dom';import WhitepaperSectionEditor from @/components/WhitepaperSectionEditor';import { supabase } from @/integrations/supabase/client'; // To mock its functions\n[error]     |                        ^\n[error]   2 | // Mock Supabase client\n[error]   3 | jest.mock('@/integrations/supabase/client', () => ({'  supabase: {\n[error]   4 |     functions: {\n[error] __tests__/context/AuthProvider.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, act, screen, waitFor } from @testing-library/react';import { AuthProvider, useAuth } from @/context/auth/AuthProvider';import * as authService from @/services/authService';import { toast as originalToast } from @/hooks/use-toast'; // Import original toast'import { supabase } from @/integrations/supabase/client';\n[error]     |                        ^\n[error]   2 | // Mock services and hooks\n[error]   3 | jest.mock('@/services/authService');jest.mock('@/hooks/use-toast', () => ({'  toast: jest.fn()\n[error]   4 | }));\n[error] __tests__/context/WalletContext.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, act, fireEvent } from @testing-library/react';import @testing-library/jest-dom';\n[error]     |                        ^\n[error]   2 | // --- START OF MOCK SETUP ---\n[error]   3 |\n[error]   4 | // Define valid mock Ethereum addresses;\n[error] __tests__/controllers/authController.test.js: SyntaxError: Unexpected token (3:20)\n[error]   1 |\n[error]   2 | ;\n[error] > 3 | import bcrypt from bcrypt';import jwt from jsonwebtoken';// Removed unused import: createClient;\n[error]     |                    ^\n[error]   4 | import User from ../models/User';import { loginUser, registerUser } from ../../server/controllers/authController';\n[error]   5 | jest.mock('../../server/models/User');jest.mock('bcryptjs');jest.mock('jsonwebtoken');\n[error]   6 | describe('authController.loginUser', () => {'  const req = { body: { email: test@example.com', password: 'Password123' } };  const res = { status: jest.fn().mockReturnThis(), json: jest.fn() };\n[error] __tests__/equipment-detail-fixes.test.ts: SyntaxError: Unterminated string literal. (2:120)\n[error]   1 | // Test file to verify equipment details page fixes\n[error] > 2 | describe('Equipment Details Page Fixes', () => {'  // Test the data conversion function that was added to fix the crash\n[error]     |                                                                                                                        ^\n[error]   3 |   test('convertProductListingToEquipmentDetails converts data correctly', () => {'    // Mock ProductListing data (what's stored in sessionStorage)    const productListing = {\n[error]   4 |       id: datacenter-eq-1',      title: NVIDIA A100 GPU Server',      description: High-performance AI training server',      category: AI Hardware',      price: 85000,\n[error]   5 |       currency: $',      brand: NVIDIA',      specifications: ['8x A100 GPUs', 2TB HBM2e', NVLink'],      tags: ['AI', Machine Learning', GPU'],      availability: In Stock',      rating: 4.9,\n[error] __tests__/equipment-details-fix.test.js: SyntaxError: Unexpected token, expected \",\" (4:49)\n[error]   2 | describe('Equipment Details Page - Issue #6 Fix', () => {'  test('data conversion from ProductListing to EquipmentDetails works', () => {'    // This is the core fix - converting sessionStorage data properly\n[error]   3 |     const productListing = {\n[error] > 4 |       id: 'datacenter-eq-1',      title: NVIDIA A100 GPU Server', // ProductListing uses title''      description: High-performance AI training server',      category: AI Hardware',      price: 85000,\n[error]     |                                                 ^\n[error]   5 |       availability: In Stock',      brand: 'NVIDIA',      rating: 4.9,\n[error]   6 |       reviewCount: 27\n[error]   7 |     };\n[error] __tests__/equipment-page-fixes.test.ts: SyntaxError: Unterminated string literal. (2:81)\n[error]   1 | // Test file to verify equipment page fixes;\n[error] > 2 | import { generateDatacenterEquipment } from @/utils/equipmentAutoFeedAlgorithm';\n[error]     |                                                                                 ^\n[error]   3 | describe('Equipment Page Fixes', () => {'  test('generateDatacenterEquipment produces consistent results with same seed', () => {'    const seed = test-seed';    const count = 10;\n[error]   4 |     const startId = 1;\n[error]   5 |\n[error] __tests__/hooks/use-toast.test.tsx: SyntaxError: Expression expected. (1:34)\n[error] > 1 | import { toast } from @/hooks/use-toast';import { vi } from vitest';\n[error]     |                                  ^\n[error]   2 | // Mock sonner\n[error]   3 | vi.mock('sonner', () => ({'  toast: {\n[error]   4 |     error: vi.fn(),\n[error] __tests__/hooks/useAuthOperations.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import { describe, it, expect, beforeEach, vi } from vitest';import { renderHook, act } from @testing-library/react';import { useAuthOperations } from @/hooks/useAuthOperations';import { supabase as supabaseClientModule } from @/integrations/supabase/client';import { showApiError } from @/utils/apiErrorHandler';import { toast } from @/hooks/use-toast';import * as referralUtils from @/utils/referralUtils';// Removed unused authUtils import // Mock Supabase;vi.mock('@/integrations/supabase/client', () => ({ // Changed vi.mock to vi.mock'  supabase: {\n[error]     |                                                            ^\n[error]   2 |     auth: {\n[error]   3 |       signInWithPassword: vi.fn(), // Changed vi.fn to vi.fn\n[error]   4 |       signUp: vi.fn(), // Changed vi.fn to vi.fn\n[error] __tests__/hooks/useSavedTalents.test.tsx: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import { vi, describe, it, expect, beforeEach } from vitest';import { renderHook, act } from @testing-library/react';import { useSavedTalents } from @/hooks/talent/useSavedTalents';import { supabase } from @/integrations/supabase/client';import { showApiError } from @/utils/apiErrorHandler';import { toast } from @/hooks/use-toast'; // Assuming direct toast usage for non-error cases'// Removed unused useRouter import\n[error]     |                                                            ^\n[error]   2 | ;\n[error]   3 | import { supabase as supabaseClientModule } from @/integrations/supabase/client';\n[error]   4 | // Mocks\n[error] __tests__/hooks/useTalentQuotes.test.tsx: SyntaxError: ';' expected. (1:56)\n[error] > 1 | import { describe, it, expect, beforeEach } from vitest';import React from react';import { renderHook, act } from @testing-library/react';import { QueryClient, QueryClientProvider } from @tanstack/react-query';import { useTalentQuotes } from @/hooks/useTalentQuotes';import { quoteRequestService } from @/services/quoteRequestService';import { showApiError } from @/utils/apiErrorHandler';import { useAuth } from @/hooks/useAuth';import { useToast } from @/hooks/use-toast';\n[error]     |                                                        ^\n[error]   2 | // Mocks\n[error]   3 | jest.mock('next/config', () => ({ // Changed vi.mock to jest.mock'  default: () => ({\n[error]   4 |     publicRuntimeConfig: {\n[error] __tests__/hooks/useUndoRedo.test.tsx: SyntaxError: Expression expected. (1:41)\n[error] > 1 | import { renderHook, act } from @testing-library/react';import { useUndoRedo } from @/hooks/useUndoRedo';\n[error]     |                                         ^\n[error]   2 | describe('useUndoRedo', () => {'  it('tracks history and performs undo/redo', () => {'    const { _result } = renderHook(() => useUndoRedo('a'));\n[error]   3 |     act(() => {\n[error]   4 |       result.current.set('b');      result.current.set('c');    });\n[error] __tests__/instrumentation.client.test.ts: SyntaxError: Expression expected. (1:26)\n[error] > 1 | import { register } from ../sentry';import * as Sentry from @sentry/nextjs';import { Integrations } from \"@sentry/tracing\"; // Import this if it's used in the Sentry.init call options\n[error]     |                          ^\n[error]   2 | describe('Sentry Initialization', () => {'  let _consoleWarnSpy: jest.SpyInstance;\n[error]   3 |   let sentryInitSpy: jest.SpyInstance;\n[error]   4 |   const originalEnv = { ...process.env }; // Shallow copy to preserve original values\n[error] __tests__/integration/authFlow.test.js: SyntaxError: Unexpected token (4:24)\n[error]   2 |\n[error]   3 | /** @jest-environment node */;\n[error] > 4 | import { expect } from @playwright/test';// Note: test and createClient are imported but not used in this specific test file\n[error]     |                        ^\n[error]   5 | // eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error]   6 | const jwt = require('jsonwebtoken');// eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error]   7 | const bcrypt = require('bcryptjs');// eslint-disable-next-line @typescript-eslint/no-require-imports;\n[error] __tests__/integration/categoryNavigationAndDisplay.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, waitFor, act } from @testing-library/react';import userEvent from @testing-library/user-event';import fetchMock from jest-fetch-mock';\n[error]     |                        ^\n[error]   2 | // Mock next/router;\n[error]   3 | const mockRouterPush = jest.fn();\n[error]   4 | const mockRouterQuery = { slug:  };jest.mock('next/router', () => ({'  useRouter: () => ({\n[error] __tests__/integration/ErrorBoundary.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, act, fireEvent } from @testing-library/react';import { MemoryRouter } from react-router-dom';import App from ../../src/App';import { vi } from vitest';import type { ReactNode } from react'; // Import necessary types, removed ErrorInfo'import { captureException } from ../../src/utils/sentry'; // Import the mocked captureException\n[error]     |                        ^\n[error]   2 | // Mock Sentry's captureException to avoid actual Sentry calls and console noise during tests'// This is done above the import now, standard practice for vi.mock;vi.mock('../../src/utils/sentry', () => ({'  captureException: vi.fn()\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/integration/registerPersistence.test.js: SyntaxError: Unexpected token (3:35)\n[error]   1 |\n[error]   2 | ;\n[error] > 3 | import { MongoMemoryServer } from mongodb-memory-server';/** @jest-environment node */;\n[error]     |                                   ^\n[error]   4 | import mongoose from mongoose';\n[error]   5 | process.env.JWT_SECRET = testsecret';;\n[error]   6 | import { registerUser } from ../../server/controllers/authController';import User from ../../server/models/User';;\n[error] __tests__/integration/signupAndLoginFlow.test.ts: SyntaxError: Expression expected. (6:52)\n[error]   4 |   return { success: true, user: userData };\n[error]   5 | };\n[error] > 6 | import { registerUser } from @/services/authService';import { supabase } from @/integrations/supabase/client'; // Path to ensure jest.mock works'import fetchMock from jest-fetch-mock';import axios from axios'; // Import axios to be mocked\n[error]     |                                                    ^\n[error]   7 | fetchMock.enableMocks();\n[error]   8 |\n[error]   9 | // --- Mocks Setup ---\n[error] __tests__/integration/topLevelRoutes.test.tsx: SyntaxError: ';' expected. (22:55)\n[error]   20 | };\n[error]   21 | const COMMUNITY_FORUM_TEST_ID = \"community-forum-page\"; // Assume this exists on the forum page\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n[error] > 22 | describe('Top-Level Navigation Routes', () => {'  it('should render the Home page correctly and not the Community Forum', async () => {'    // Assuming src/pages/Home.tsx (via pages/index.tsx) has a unique element like <h1 data-testid=\"home-page-title\">Welcome to Zion</h1>\"    // For this example, let's assume a more generic check for text that should be on the home page.'    // A real test would use a more robust selector.\n[error]      |                                                       ^\n[error]   23 |     await checkPageContent('/', /Welcome to Zion/i, COMMUNITY_FORUM_TEST_ID);    // In a real test, you'd also check for a unique element from the actual Home component.'  });\n[error]   24 |\n[error]   25 |   it('should render the About page correctly and not the Community Forum', async () => {'    // src/pages/About.tsx contains \"Our Mission\"\"    await checkPageContent('/about', /Our Mission/i, COMMUNITY_FORUM_TEST_ID);  });\n[error] __tests__/integration/WalletInitializationFailure.test.tsx: SyntaxError: ';' expected. (2:24)\n[error]   1 | // __tests__/integration/WalletInitializationFailure.test.tsx;\n[error] > 2 | import React from react';import { render, screen, waitFor } from @testing-library/react';import App from @/App';import { MemoryRouter } from react-router-dom';import @testing-library/jest-dom';import { vi } from vitest';\n[error]     |                        ^\n[error]   3 | // Store original import.meta if it exists for cleanup;\n[error]   4 | const originalImportMeta = globalThis.importMeta;\n[error]   5 |\n[error] __tests__/layout/AppHeader.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor as _waitFor } from @testing-library/react';import { AppHeader } from @/layout/AppHeader'; // Adjust path as necessary'import { AuthProviderValue } from @/context/auth/AuthContext'; // Adjust path'import { useAuth } from @/hooks/useAuth'; // Adjust path'import { useMessaging } from @/context/MessagingContext'; // Adjust path'import { useRouter } from next/router'; // Mock this\n[error]     |                        ^\n[error]   2 | // Mock next/router\n[error]   3 | jest.mock('next/router', () => ({'  useRouter: jest.fn()\n[error]   4 | }));\n[error] __tests__/layout/AppLayout.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import { MemoryRouter, Routes, Route } from react-router-dom';import { AppLayout } from @/layout/AppLayout';import { useAuth } from @/hooks/useAuth';import { useGlobalLoader } from @/context/GlobalLoaderContext';\n[error]     |                        ^\n[error]   2 | jest.mock('@/hooks/useAuth');jest.mock('@/context/GlobalLoaderContext');jest.mock('@/layout/PrimaryNav', () => ({ PrimaryNav: () => <div data-testid=\"header\" /> }));\"jest.mock('@/components/Footer', () => ({ Footer: () => <div data-testid=\"footer\" /> }));\"jest.mock('@/components/EmailVerificationBanner', () => {'  const MockBanner = (props: unknown) => <div data-testid=\"verify-banner\">{props.userEmail}</div>;\"  MockBanner.displayName = MockEmailVerificationBanner';  return MockBanner;\n[error]   3 | });\n[error]   4 | const mockUseAuth = useAuth as jest.Mock;\n[error] __tests__/lib/axios.test.ts: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import axios from axios';import fetchMock from jest-fetch-mock';import { safeStorage } from @/utils/safeStorage';\n[error]     |                        ^\n[error]   2 | jest.mock('@/utils/safeStorage', () => ({'  safeStorage: {\n[error]   3 |     getItem: jest.fn(),\n[error]   4 |     setItem: jest.fn(),\n[error] __tests__/LoginFormRtl.test.tsx: SyntaxError: ';' expected. (1:48)\n[error] > 1 | import { describe, it, expect, vi } from vitest';import { render, screen, fireEvent, waitFor } from @testing-library/react';import { LoginForm } from @/components/auth/login';import { useAuth } from @/hooks/useAuth';\n[error]     |                                                ^\n[error]   2 | vi.mock('@/hooks/useAuth');\n[error]   3 | describe('LoginForm error handling', () => {'  it('shows inline error message when login fails', async () => {'    const loginMock = vi.fn().mockResolvedValue({ error: Invalid email or password' });    (useAuth as any).mockReturnValue({ isLoading: false, login: loginMock });\n[error]   4 |\n[error] __tests__/pages/404.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import Custom404 from ../../pages/404';\n[error]     |                        ^\n[error]   2 | describe('Custom404 Page', () => {'  it('renders the 404 heading', () => {'    render(<Custom404 />);\n[error]   3 |     expect(screen.getByText('404 – Page Not Found')).toBeInTheDocument();  });\n[error]   4 | });\n[error] __tests__/pages/Categories.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, waitFor } from @testing-library/react';import Categories from @/src/pages/Categories'; // Corrected import path'import { CATEGORIES } from @/data/categories';import useSWR from swr';import { Category } from @/data/categories'; // Import Category type\n[error]     |                        ^\n[error]   2 | // Mock next/router\n[error]   3 | jest.mock('next/router', () => ({'  useRouter: () => ({\n[error]   4 |     query: {},\n[error] __tests__/pages/categoriesGetStaticProps.test.ts: SyntaxError: Expression expected. (1:50)\n[error] > 1 | import { getStaticProps } from @/pages/Categories';import { CATEGORIES } from @/data/categories';import fetchMock from fetch-mock';\n[error]     |                                                  ^\n[error]   2 | // Mock console methods;\n[error]   3 | let consoleLogSpy: jest.SpyInstance;\n[error]   4 | let consoleErrorSpy: jest.SpyInstance;\n[error] __tests__/pages/Contact.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, waitFor } from @testing-library/react';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import Contact from @/src/pages/Contact';\n[error]     |                        ^\n[error]   2 | // Mock heavy child components\n[error]   3 | jest.mock('@/components/ChatAssistant', () => ({'  ChatAssistant: () => <div data-testid=\"chat-assistant\" />,\"}));\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n[error]   4 |\n[error] __tests__/pages/EquipmentDetail.test.tsx: SyntaxError: ';' expected. (2:24)\n[error]   1 | // __tests__/pages/EquipmentDetail.test.tsx;\n[error] > 2 | import React from react';import { render, screen, fireEvent, act } from @testing-library/react';import @testing-library/jest-dom';import EquipmentDetail, { SAMPLE_EQUIPMENT } from @/src/pages/EquipmentDetail';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import { useRouter } from next/router';import mockNextRouter from next-router-mock';import { useAuth } from @/hooks/useAuth';import { useCart } from @/context/CartContext';\n[error]     |                        ^\n[error]   3 | // Mock functions need to be declared before they are used in mock factories;\n[error]   4 | const mockNavigate = jest.fn();\n[error]   5 | const mockDispatch = jest.fn();\n[error] __tests__/pages/EquipmentPage.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, waitFor } from @testing-library/react';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import EquipmentPage from @/src/pages/EquipmentPage';import { QueryClient, QueryClientProvider } from @tanstack/react-query';import apiClient from @/services/apiClient';import { toast } from @/hooks/use-toast';\n[error]     |                        ^\n[error]   2 | // Mock child components and hooks\n[error]   3 | jest.mock('@/components/DynamicListingPage', () => ({'  DynamicListingPage: (props: unknown) => (\n[error]   4 |     <div data-testid=\"dynamic-listing-page\">\"      <h2>{props.title}</h2>\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n[error] __tests__/pages/forgot-password.api-error.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor } from @testing-library/react';import @testing-library/jest-dom';import axios from axios';import * as Sentry from @sentry/nextjs';import ForgotPasswordPage from ../../pages/forgot-password';\n[error]     |                        ^\n[error]   2 | jest.mock('axios');jest.mock('@sentry/nextjs', () => ({'  captureException: jest.fn()\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/pages/forgot-password.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor } from @testing-library/react';import @testing-library/jest-dom';import ForgotPasswordPage from ../../pages/forgot-password'; // Adjust path if needed'import { forgotPassword } from ../../src/services/auth'; // Adjust path if needed\n[error]     |                        ^\n[error]   2 | // Mock the auth service\n[error]   3 | jest.mock('../../src/services/auth', () => ({'  forgotPassword: jest.fn()\n[error]   4 | }));\n[error] __tests__/pages/ForgotPassword.test.jsx: SyntaxError: Unexpected token (1:19)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor } from @testing-library/react';import @testing-library/jest-dom';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import ForgotPassword from ../../src/pages/ForgotPassword'; // Adjust path as necessary'// Mock the auth service\n[error]     |                   ^\n[error]   2 | // jest.mock('../../src/services/auth', () => ({'//   forgotPassword: jest.fn(),\n[error]   3 | // }));\n[error]   4 |\n[error] __tests__/pages/FounderBot.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import FounderBotPage from @/src/pages/FounderBot';\n[error]     |                        ^\n[error]   2 | jest.mock('@/components/ChatAssistant', () => ({'  ChatAssistant: () => <div data-testid=\"chat-assistant\" />\"}));\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n[error]   3 |\n[error]   4 | jest.mock('@/components/ui/button', () => ({'  Button: ({ children, ...props }) => <button {...props}>{children}</button>\n[error] __tests__/pages/index.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import IndexPage, { getServerSideProps, fetchHomeData } from ../../pages/index';import GlobalErrorBoundary from @/components/GlobalErrorBoundary';import { useRouter } from next/router';\n[error]     |                        ^\n[error]   2 | jest.mock('@sentry/nextjs', () => ({'  captureException: jest.fn()\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/pages/ListingDetail.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import ListingPage from ../../pages/marketplace/listing/[slug];import type { ProductListing } from @/types/listings';\n[error]     |                        ^\n[error]   2 | test('render with listing shows title', () => {'  const listing: ProductListing = {\n[error]   3 |     id: test-id',    title: Test Listing',    description: desc',    category: cat',    price: 10,\n[error]   4 |     currency: $',    tags: [],\n[error] __tests__/pages/login.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, waitFor } from @testing-library/react';import userEvent from @testing-library/user-event';import Login from @/src/pages/auth/login'; // Assuming Login page is now at pages/auth/login.tsx'import { useRouter } from next/router';// useAuth hook is mocked below - no import needed;\n[error]     |                        ^\n[error]   2 | import { safeStorage } from @/utils/safeStorage'; // To be mocked'import * as Sentry from @sentry/nextjs'; // To be mocked'import { fireEvent as fireAnalyticsEvent } from @/lib/analytics'; // To be mocked'import @testing-library/jest-dom';\n[error]   3 | // Mock next/router\n[error]   4 | jest.mock('next/router', () => ({'  useRouter: jest.fn(() => ({\n[error] __tests__/pages/LoginFallbackUI.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, act } from @testing-library/react';import @testing-library/jest-dom';import Login from @/src/pages/Login'; // Target the correct Login page'import { useAuth } from @/context/auth/AuthProvider'; // Correct path to mock'import { useRouter } from next/router';\n[error]     |                        ^\n[error]   2 | // Mock next/router\n[error]   3 | jest.mock('next/router', () => ({'  useRouter: jest.fn()\n[error]   4 | }));\n[error] __tests__/pages/LoginRoute.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import AuthRoutes from @/routes/AuthRoutes';\n[error]     |                        ^\n[error]   2 | jest.mock('@/components/auth/login', () => ({'  LoginForm: () => (\n[error]   3 |     <form>\n[error]   4 |       <label htmlFor=\"email-input\">Email</label>\"      <input id=\"email-input\" />\"    </form>\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n[error] __tests__/pages/loginSubmit.test.tsx: SyntaxError: Expression expected. (1:60)\n[error] > 1 | import { render, screen, fireEvent, waitFor } from @testing-library/react';import Login from @/src/pages/Login';import { useRouter } from next/router';import mockNextRouter from next-router-mock';\n[error]     |                                                            ^\n[error]   2 |  \n[error]   3 | jest.mock('next/router', () => mockNextRouter);\n[error]   4 | // Mock Sentry and toast to avoid network / UI noise\n[error] __tests__/pages/OAuthCallback.test.tsx: SyntaxError: Expression expected. (1:41)\n[error] > 1 | import { render, waitFor } from @testing-library/react';import OAuthCallback from @/src/pages/OAuthCallback';import { useRouter } from next/router';import { safeStorage } from @/utils/safeStorage';import { useAuth } from @/hooks/useAuth';\n[error]     |                                         ^\n[error]   2 | jest.mock('next/router', () => ({'  useRouter: jest.fn()\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/pages/ResetPassword.test.jsx: SyntaxError: Unexpected token (1:19)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor } from @testing-library/react';import @testing-library/jest-dom';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import { useRouter } from next/router';import ResetPassword from ../../src/pages/ResetPassword'; // Adjust path as necessary'// import * as authService from ../../src/services/auth'; // Adjust path\n[error]     |                   ^\n[error]   2 | // Mock react-router-dom's useParams and useNavigate'// const mockNavigate = jest.fn();\n[error]   3 | // jest.mock('react-router-dom', () => ({'//   ...jest.requireActual('react-router-dom'),//   useParams: () => ({ uid: testuid', token: testtoken' }),//   useNavigate: () => mockNavigate,\n[error]   4 | // }));\n[error] __tests__/pages/SignupRender.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen } from @testing-library/react';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import Signup from @/src/pages/Signup';\n[error]     |                        ^\n[error]   2 | describe('Signup page', () => {'  it('renders all form fields', () => {'    render(\n[error]   3 |       <MemoryRouterProvider>\n[error]   4 |         <Signup />\n[error] __tests__/pages/talent/[id].test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, waitFor } from @testing-library/react';// import { vi } from vitest'; // Removed Vitest import'import TalentPage from @/src/pages/talent/[id];import { TALENT_PROFILES } from @/data/talentData'; // Adjust path if necessary'import { useRouter } from next/router'; // Keep Next.js import for mocking';// Mock next/router\n[error]     |                        ^\n[error]   2 | jest.mock('next/router', () => ({'  useRouter: jest.fn()\n[error]   3 | }));\n[error]   4 |\n[error] __tests__/pages/TalentDirectory.test.tsx: SyntaxError: Unterminated string literal. (1:26)\n[error] > 1 | import React from react';\n[error]     |                          ^\n[error]   2 | import { render, screen, waitFor } from @testing-library/react';\n[error]   3 | import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';\n[error]   4 | import TalentDirectory from @/src/pages/TalentDirectory';\n[error] __tests__/pages/WhitepaperGeneratorPage.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor, act } from @testing-library/react';import @testing-library/jest-dom';import WhitepaperGeneratorPage from @/src/pages/WhitepaperGeneratorPage';import { supabase } from @/integrations/supabase/client';import * as recharts from recharts'; // For mocking ResponsiveContainer\n[error]     |                        ^\n[error]   2 | // --- Mocks ---\n[error]   3 | jest.mock('@/integrations/supabase/client', () => ({'  supabase: {\n[error]   4 |     functions: {\n[error] __tests__/pages/WhitepaperViewPage.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, waitFor } from @testing-library/react';import @testing-library/jest-dom';import { useRouter } from next/router';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import mockNextRouter from next-router-mock';import WhitepaperViewPage from @/src/pages/WhitepaperViewPage';import { supabase } from @/integrations/supabase/client';import WhitepaperPreviewPanel from @/components/WhitepaperPreviewPanel';\n[error]     |                        ^\n[error]   2 | // Mock dependencies\n[error]   3 | jest.mock('next/router', () => mockNextRouter);jest.mock('next/link', () => ({'  __esModule: true,\n[error]   4 |   default: ({ children, href }: { children: React.ReactNode; href: string }) => <a href={href}>{children}</a>\n[error] __tests__/profile-page.test.tsx: SyntaxError: ';' expected. (2:78)\n[error]   1 | // import Profile from @/src/pages/Profile'; // FIXED: Module not found\n[error] > 2 | test('saves updated profile', async () => {'  const mockUser = { id: 1', name: Jane', bio: , avatarUrl: , points: 0 };  global.fetch = vi.fn().mockResolvedValue({\n[error]     |                                                                              ^\n[error]   3 |     json: () => Promise.resolve({ ...mockUser, name: New' }),  }) as any;\n[error]   4 |\n[error]   5 |   render(<Profile user={mockUser} orders={[]} />);\n[error] __tests__/routes/backendRoutes.test.js: SyntaxError: Unterminated string constant. (23:35)\n[error]   21 | }\n[error]   22 |\n[error] > 23 | describe('Auth endpoints', () => {'  let app;\n[error]      |                                   ^\n[error]   24 |   beforeEach(() => {\n[error]   25 |     app = createApp();\n[error]   26 |     jest.clearAllMocks();\n[error] __tests__/sdk/signupWithEmail.test.ts: SyntaxError: ';' expected. (1:59)\n[error] > 1 | import { describe, it, expect, vi, afterEach } from vitest';import { signupWithEmail } from ../../sdk/js/auth/index.js';\n[error]     |                                                           ^\n[error]   2 | describe('signupWithEmail', () => {'  afterEach(() => {\n[error]   3 |     vi.restoreAllMocks();\n[error]   4 |   });\n[error] __tests__/signup-auto-login.test.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import { render, screen, fireEvent, waitFor } from @testing-library/react';import { MemoryRouter } from react-router-dom';import { AuthProvider } from @/context/auth/AuthProvider';import { useAuth } from @/hooks/useAuth';import { vi } from vitest';\n[error]     |                        ^\n[error]   2 | // Capture onAuthStateChange callback;\n[error]   3 | let authCallback: unknown;\n[error]   4 |\n[error] __tests__/signup-duplicate-email.test.tsx: SyntaxError: Unterminated string literal. (3:57)\n[error]   1 | // import Signup from @/src/pages/Signup'; // FIXED: Module not found\n[error]   2 | // Mock Next.js router\n[error] > 3 | jest.mock('next/router', () => ({'  useRouter: jest.fn()\n[error]     |                                                         ^\n[error]   4 | }));\n[error]   5 |\n[error]   6 | // Mock axios\n[error] __tests__/signup.test.tsx: SyntaxError: Expression expected. (1:51)\n[error] > 1 | import { render, screen, fireEvent } from @testing-library/react';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import Signup from @/src/pages/Signup';import * as toastHook from @/hooks/use-toast';import { useRouter } from next/router';import { vi, expect, test } from vitest';import mockNextRouter from next-router-mock';\n[error]     |                                                   ^\n[error]   2 | vi.mock('@/hooks/useAuth', () => ({'  useAuth: () => ({\n[error]   3 |     loginWithGoogle: vi.fn(),\n[error]   4 |     loginWithFacebook: vi.fn(),\n[error] __tests__/test-utils.tsx: SyntaxError: ';' expected. (1:24)\n[error] > 1 | import React from react';import type { FC, ReactElement } from react';import { render } from @testing-library/react';import type { RenderOptions } from @testing-library/react';import { QueryClient, QueryClientProvider } from @tanstack/react-query';import { Provider as ReduxProvider } from react-redux';import { AuthProvider } from @/context/auth/AuthProvider';import { WhitelabelProvider } from @/context/WhitelabelContext';import { I18nextProvider } from react-i18next';import { WalletProvider } from @/context/WalletContext';import { CartProvider } from @/context/CartContext';import { AnalyticsProvider } from @/context/AnalyticsContext';import { ThemeProvider } from @/components/ThemeProvider'; // Assuming ThemeProvider is a component'import { ErrorProvider } from @/context/ErrorContext';import { MemoryRouterProvider } from next-router-mock/MemoryRouterProvider';import { store } from @/store'; // Fix: Use named import instead of default import'import i18n from @/i18n'; // Assuming this is the correct path to i18n config\n[error]     |                        ^\n[error]   2 | // Initialize a new QueryClient for each test run to ensure test isolation;\n[error]   3 | const createTestQueryClient = () => new QueryClient({\n[error]   4 |   defaultOptions: {\n[error] __tests__/utils/apiErrorHandler.test.ts: SyntaxError: ';' expected. (1:60)\n[error] > 1 | import { describe, it, expect, beforeEach, vi } from vitest';import { parseApiError, showApiError } from @/utils/apiErrorHandler';import { toast } from @/hooks/use-toast';\n[error]     |                                                            ^\n[error]   2 | // Mock the toast hook using vitest utilities\n[error]   3 | vi.mock('@/hooks/use-toast', () => ({'  toast: vi.fn()\n[error]   4 | }));\n[error] __tests__/utils/currency.test.ts: SyntaxError: ';' expected. (1:44)\n[error] > 1 | import { describe, it, expect } from vitest';import { getCurrencyForLocale, convertUSDToCurrency, formatPriceByLocale } from @/utils/currency';\n[error]     |                                            ^\n[error]   2 | describe('currency utilities', () => {'  it('maps locales to currencies', () => {'    expect(getCurrencyForLocale('en-US')).toBe('USD');    expect(getCurrencyForLocale('fr-FR')).toBe('EUR');    expect(getCurrencyForLocale('pt-BR')).toBe('BRL');  });\n[error]   3 |\n[error]   4 |   it('converts USD amounts using exchange rates', () => {'    expect(convertUSDToCurrency(10, EUR')).toBeCloseTo(9.3);    expect(convertUSDToCurrency(10, BRL')).toBeCloseTo(50);  });\n[error] __tests__/utils/validateEnv.test.ts: SyntaxError: Unterminated string literal. (5:73)\n[error]   3 | // NOTE: DO NOT add a static import for checkEssentialEnvVars here.;// It needs to be dynamically imported within each test after mocks are applied.\n[error]   4 | ;\n[error] > 5 | import { describe, it, expect, beforeEach, afterEach, vi } from vitest';\n[error]     |                                                                         ^\n[error]   6 | // Store original process.env;\n[error]   7 | const ORIGINAL_ENV = process.env;\n[error]   8 |\n[error] .github/workflows/codex-fix.yml: SyntaxError: Plain value cannot start with reserved character ` (90:1)\n[error]   88 |             });\n[error]   89 |             core.setFailed('Codex script failed, notified issue.'); // Optionally fail the workflow job\n[error] > 90 | ```\n[error]      | ^^^\n[error]   91 |\n[error] .github/workflows/generate-tests.yml: SyntaxError: Nested mappings are not allowed in compact mappings (80:15)\n[error]   78 |           done\n[error]   79 |\n[error] > 80 |       - name: Commit and push generated tests (Optional: Create PR instead)\"Commit and push generated tests (Optional: Create PR instead)\"\n[error]      |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 81 |         if: steps.changed_files.outputs.changed_files_list != '' # Only run if files were processed\n[error]      | ^\n[error]   82 |         run: |\n[error]   83 |           git config --global user.name 'github-actions[bot]'\n[error]   84 |           git config --global user.email 'github-actions[bot]@users.noreply.github.com'\n[error] .github/workflows/hourly-check.yml: SyntaxError: Nested mappings are not allowed in compact mappings (30:14)\n[error]   28 |       # Security Audit\n[error]   29 |       - name: Make security audit script executable\n[error] > 30 |         run: chmod +x ./scripts/hourly_audit.sh\n[error]      |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 31 |\n[error]      | ^\n[error] > 32 |               - name: Install GitHub CLI\n[error]      | ^\n[error] > 33 |                 run: |\n[error]      | ^\n[error] > 34 |                   sudo apt-get update\n[error]      | ^\n[error] > 35 |                   sudo apt-get install -y gh\n[error]      | ^\n[error] > 36 |\n[error]      | ^\n[error] > 37 |               - name: Run hourly security audit script\n[error]      | ^\n[error] > 38 |                 env:\n[error]      | ^\n[error] > 39 |                   WEBHOOK_URL: ${{ secrets.MAINTENANCE_WEBHOOK_URL }}\n[error]      | ^\n[error] > 40 |                   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n[error]      | ^\n[error] > 41 |                   MAIN_DEV_BRANCH_ENV_VAR: 'main' # Or your main development branch e.g. 'develop'\n[error]      | ^\n[error] > 42 |                 run: ./scripts/hourly_audit.sh\n[error]      | ^\n[error] > 43 |\n[error]      | ^\n[error] > 44 |               # Performance Audit (Lighthouse)\n[error]      | ^\n[error] > 45 |       - name: Install Lighthouse CI\n[error]      | ^\n[error]   46 |         run: npm install -g @lhci/cli\n[error]   47 |\n[error]   48 |       - name: Build Next.js application\n[error] .github/workflows/netlify-status.yml: SyntaxError: Nested mappings are not allowed in compact mappings (12:13)\n[error]   10 |     steps:\n[error]   11 |       - name: Check Netlify Deploy Status\n[error] > 12 |         id: netlify_status\n[error]      |             ^^^^^^^^^^^^^^\n[error] > 13 |          - uses: actions/checkout@v2\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 14 |       - uses: amondnet/now-deployment@v2\n[error]      | ^\n[error]   15 |         with:\n[error]   16 |           netlify_token: ${{ secrets.NETLIFY_TOKEN }}\n[error]   17 |           site_id: \"ziontechgroup\"\n[error] .github/workflows/scheduled-audits.yml: SyntaxError: A collection cannot be both a mapping and a sequence (39:7)\n[error]   37 |       run: pip install pip-audit\n[error]   38 |\n[error] > 39 |     - name: Run Python Dependency Audit\n[error]      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 40 |       run: pip-audit -r backend/requirements.txt\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 41 |\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 42 |       - name: Run Dependency and Vulnerability Audits\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 43 |         run: bash ./scripts/security-audit.sh\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 44 |         # Runs 'npm run check-updates' and 'npm run audit-vulnerabilities'.\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 45 |\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 46 |       - name: Build application\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 47 |         run: npm run build\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 48 |\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 49 |       - name: Run Performance Checks\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 50 |         run: node scripts/performance-check.cjs | tee performance-report.log\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 51 |\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 52 |       - name: Upload Performance Report\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 53 |         uses: actions/upload-artifact@v4\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 54 |         with:\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 55 |           name: performance-report\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 56 |           path: performance-report.log\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] > 57 |\n[error]      | ^\n[error] .github/workflows/scheduled-test-retry.yml: SyntaxError: All collection items must start at the same column (1:1)\n[error] >  1 | name: Scheduled Tests with Retry\n[error]      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error] >  2 |\n[error]      | ^\n[error] >  3 | on:\n[error]      | ^\n[error] >  4 |   schedule:\n[error]      | ^\n[error] >  5 |     - cron: '*/30 * * * *' # Runs every 30 minutes\n[error]      | ^\n[error] >  6 |   workflow_dispatch: # Allows manual triggering\n[error]      | ^\n[error] >  7 |\n[error]      | ^\n[error] >  8 | jobs:\n[error]      | ^\n[error] >  9 |   test_and_retry:\n[error]      | ^\n[error] >  10 |     runs-on: ubuntu-latest\n[error]       | ^\n[error] >  11 |     steps:\n[error]       | ^\n[error] >  12 |       - name: Checkout repository\n[error]       | ^\n[error] >  13 |         uses: actions/checkout@v4\n[error]       | ^\n[error] >  14 |\n[error]       | ^\n[error] >  15 |       - name: Set up Node.js\n[error]       | ^\n[error] >  16 |         uses: actions/setup-node@v4\n[error]       | ^\n[error] >  17 |         with:\n[error]       | ^\n[error] >  18 |           node-version: '20.x'\n[error]       | ^\n[error] >  19 |           cache: 'npm'\n[error]       | ^\n[error] >  20 |\n[error]       | ^\n[error] >  21 |       - name: Install dependencies\n[error]       | ^\n[error] >  22 |         run: npm ci\n[error]       | ^\n[error] >  23 |\n[error]       | ^\n[error] >  24 |       - name: Run Jest Tests\n[error]       | ^\n[error] >  25 |         id: jest_tests_initial\n[error]       | ^\n[error] >  26 |         continue-on-error: true # Important to allow subsequent steps to evaluate outcome\n[error]       | ^\n[error] >  27 |         run: npm test -- --coverageReporters=json-summary --coverageReporters=text --coverageDirectory=\"./coverage-jest\"\n[error]       | ^\n[error] >  28 |\n[error]       | ^\n[error] >  29 |       - name: Run Playwright Integration Tests\n[error]       | ^\n[error] >  30 |         id: playwright_tests_initial\n[error]       | ^\n[error] >  31 |         continue-on-error: true # Important to allow subsequent steps to evaluate outcome\n[error]       | ^\n[error] >  32 |         run: npm run test:e2e\n[error]       | ^\n[error] >  33 |\n[error]       | ^\n[error] >  34 |       - name: Check for initial test failures\n[error]       | ^\n[error] >  35 |         id: initial_test_run_status\n[error]       | ^\n[error] >  36 |         if: steps.jest_tests_initial.outcome == 'failure' || steps.playwright_tests_initial.outcome == 'failure'\n[error]       | ^\n[error] >  37 |         run: echo \"Initial tests failed. Proceeding with rollback and retry.\"\n[error]       | ^\n[error] >  38 |\n[error]       | ^\n[error] >  39 |       - name: Rollback last commit\n[error]       | ^\n[error] >  40 |         if: steps.initial_test_run_status.conclusion == 'success' # Runs if the previous 'Check for initial test failures' step ran\n[error]       | ^\n[error] >  41 |         run: |\n[error]       | ^\n[error] >  42 |           git config user.name \"GitHub Actions Bot\"\n[error]       | ^\n[error] >  43 |           git config user.email \"actions-bot@github.com\"\n[error]       | ^\n[error] >  44 |           git reset HEAD~1 --hard\n[error]       | ^\n[error] >  45 |           echo \"Rolled back the last commit.\"\n[error]       | ^\n[error] >  46 |\n[error]       | ^\n[error] >  47 |       - name: Reinstall dependencies after rollback\n[error]       | ^\n[error] >  48 |         if: steps.initial_test_run_status.conclusion == 'success'\n[error]       | ^\n[error] >  49 |         run: npm ci\n[error]       | ^\n[error] >  50 |\n[error]       | ^\n[error] >  51 |       - name: Rerun Jest Tests after rollback\n[error]       | ^\n[error] >  52 |         id: jest_tests_retry\n[error]       | ^\n[error] >  53 |         if: steps.initial_test_run_status.conclusion == 'success'\n[error]       | ^\n[error] >  54 |         continue-on-error: true\n[error]       | ^\n[error] >  55 |         run: npm test -- --coverageReporters=json-summary --coverageReporters=text --coverageDirectory=\"./coverage-jest-retry\"\n[error]       | ^\n[error] >  56 |\n[error]       | ^\n[error] >  57 |       - name: Rerun Playwright Integration Tests after rollback\n[error]       | ^\n[error] >  58 |         id: playwright_tests_retry\n[error]       | ^\n[error] >  59 |         if: steps.initial_test_run_status.conclusion == 'success'\n[error]       | ^\n[error] >  60 |         continue-on-error: true\n[error]       | ^\n[error] >  61 |         run: npm run test:e2e\n[error]       | ^\n[error] >  62 |\n[error]       | ^\n[error] >  63 |       - name: Check for retry test failures\n[error]       | ^\n[error] >  64 |         id: retry_test_run_status\n[error]       | ^\n[error] >  65 |         # This step runs if the initial tests failed (meaning initial_test_run_status ran)\n[error]       | ^\n[error] >  66 |         # AND either of the retry tests also failed.\n[error]       | ^\n[error] >  67 |         if: steps.initial_test_run_status.conclusion == 'success' && (steps.jest_tests_retry.outcome == 'failure' || steps.playwright_tests_retry.outcome == 'failure')\n[error]       | ^\n[error] >  68 |         run: echo \"Tests failed after rollback and retry. Proceeding to isolate logs and create GitHub issue.\"\n[error]       | ^\n[error] >  69 |\n[error]       | ^\n[error] >  70 |       - name: Prepare logs for upload\n[error]       | ^\n[error] >  71 |         if: steps.retry_test_run_status.conclusion == 'success' # Runs if the previous 'Check for retry test failures' step ran\n[error]       | ^\n[error] >  72 |         run: |\n[error]       | ^\n[error] >  73 |           mkdir -p ./failure_logs/jest\n[error]       | ^\n[error] >  74 |           mkdir -p ./failure_logs/playwright\n[error]       | ^\n[error] >  75 |           # Copy Jest coverage/logs (assuming text report is in stdout/stderr, json-summary might be useful)\n[error]       | ^\n[error] >  76 |           # The main logs are captured by Actions itself. We'll focus on reports.\n[error]       | ^\n[error] >  77 |           if [ -d \"./coverage-jest-retry\" ]; then\n[error]       | ^\n[error] >  78 |             cp -r ./coverage-jest-retry ./failure_logs/jest/\n[error]       | ^\n[error] >  79 |           fi\n[error]       | ^\n[error] >  80 |           # Copy Playwright reports\n[error]       | ^\n[error] >  81 |           if [ -d \"./playwright-report\" ]; then\n[error]       | ^\n[error] >  82 |             cp -r ./playwright-report ./failure_logs/playwright/\n[error]       | ^\n[error] >  83 |           fi\n[error]       | ^\n[error] >  84 |           # Capture full test output from initial and retry phases for context\n[error]       | ^\n[error] >  85 |           echo \"Initial Jest Test Output:\" > ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  86 |           echo \"${{ steps.jest_tests_initial.outputs.stdout }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  87 |            ec\n[error]       | ^\n[error] >  88 | Initial Jest Test Error Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  89 |\n[error]       | ^\n[error] >  90 |           echo \"\n[error]       | ^\n[error] >  91 | Initial Playwright Test Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  92 |           echo \"${{ steps.playwright_tests_initial.outputs.stdout }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  93 |           echo \"\n[error]       | ^\n[error] >  94 | Initial Playwright Test Error Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  95 |           echo \"${{ steps.playwright_tests_initial.outputs.stderr }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] >  96 |\n[error]       | ^\n[error] >  97 |           if [ -d \"./coverage-jest-retry\" ]; then\n[error]       | ^\n[error] >  98 |             echo \"\n[error]       | ^\n[error] >  99 | Retry Jest Test Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 100 |             echo \"${{ steps.jest_tests_retry.outputs.stdout }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 101 |             echo \"\n[error]       | ^\n[error] > 102 | Retry Jest Test Error Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 103 |             echo \"${{ steps.jest_tests_retry.outputs.stderr }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 104 |           fi\n[error]       | ^\n[error] > 105 |           if [ -d \"./playwright-report\" ]; then # Assuming playwright retry also ran\n[error]       | ^\n[error] > 106 |             echo \"\n[error]       | ^\n[error] > 107 | Retry Playwright Test Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 108 |             echo \"${{ steps.playwright_tests_retry.outputs.stdout }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 109 |             echo \"\n[error]       | ^\n[error] > 110 | Retry Playwright Test Error Output:\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 111 |             echo \"${{ steps.playwright_tests_retry.outputs.stderr }}\" >> ./failure_logs/test_run_summary.txt\n[error]       | ^\n[error] > 112 |           fi\n[error]       | ^\n[error] > 113 |\n[error]       | ^\n[error] > 114 |       - name: Upload failure logs\n[error]       | ^\n[error] > 115 |         if: steps.retry_test_run_status.conclusion == 'success'\n[error]       | ^\n[error] > 116 |         uses: actions/upload-artifact@v4\n[error]       | ^\n[error] > 117 |         with:\n[error]       | ^\n[error] > 118 |           name: test-failure-logs-${{ github.run_id }}\n[error]       | ^\n[error] > 119 |           path: ./failure_logs/\n[error]       | ^\n[error] > 120 |\n[error]       | ^\n[error] > 121 |       - name: Create GitHub Issue on persistent failure\n[error]       | ^\n[error] > 122 |         if: steps.retry_test_run_status.conclusion == 'success'\n[error]       | ^\n[error] > 123 |         uses: peter-evans/create-issue-from-file@v5\n[error]       | ^\n[error] > 124 |         with:\n[error]       | ^\n[error] > 125 |           token: ${{ secrets.GITHUB_TOKEN }}\n[error]       | ^\n[error] > 126 |           title: \"Automated Tests Persistently Failing after Rollback and Retry\"\n[error]       | ^\n[error] > 127 |           content-filepath: ./failure_logs/test_run_summary.txt # Using the summary for the main issue body\n[error]       | ^\n[error] > 128 |           labels: |\n[error]       | ^\n[error] > 129 |             bug\n[error]       | ^\n[error] > 130 |             automated-test-failure\n[error]       | ^\n[error] > 131 |           assignees: '' # Optional: assign to specific users or teams\n[error]       | ^\n[error] > 132 |\n[error]       | ^\n[error] .github/workflows/track-todos.yml: SyntaxError: Plain value cannot start with reserved character ` (56:1)\n[error]   54 |           # The action has its own default excludes like node_modules, .git, etc.\n[error]   55 |           # Adding common directories like 'app', 'packages' for broader coverage.\n[error] > 56 | ```\n[error]      | ^^^\n[error]   57 |\n[error] api/contact.js: SyntaxError: Unexpected token, expected \",\" (2:65)\n[error]   1 | async function handler(req, res) {;\n[error] > 2 |   if (req.method !== 'POST') {'';    res.setHeader('Allow', POST');;    res.end('Method Not Allowed');;    res.json({ error: All fields are required' });;    console.warn('New contact message:', { name, email, message });;    console.error('Contact API error:', error);;    res.json({ error: error.message || Failed to send message' });\n[error]     |                                                                 ^\n[error] api/create-checkout-session.js: SyntaxError: Unexpected token (1:20)\n[error] > 1 | import Stripe from stripe';;const PROD_DOMAIN = app.ziontechgroup.com';;  if (context && context !== 'production') {'';  const url = process.env.URL || ;;  if (req.method !== 'POST') {'';    res.setHeader('Allow', POST');;    res.end('Method Not Allowed');;    res.json({ error: Missing cartItems' });;    const liveKey = process.env.STRIPE_SECRET_KEY || ;;      process.env.STRIPE_TEST_MODE === true' ||'';      (!isProdDomain() && liveKey.startsWith('sk_live'));;    if (!isProdDomain() && liveKey.startsWith('sk_live') && !process.env.STRIPE_TEST_SECRET_KEY) {'';      throw new Error('Refusing to use live Stripe key on non-production domain');;      apiVersion: 2025-06-30.basil',;          currency: 'usd',;      mode: 'payment',;    const fs = await import('fs');;    const path = await import('path');;    const file = path.join(process.cwd(), data', orders.json');;      orders = JSON.parse(fs.readFileSync(file, 'utf8'));;      // File doesn't exist or is invalid, use empty array'';    orders.push({ id: orderId, items: cartItems, status: 'pending', sandbox: useTest });;    console.error('Create checkout session error:', error);\n[error]     |                    ^\n[error] api/create-payment-intent.js: SyntaxError: Unexpected token (1:20)\n[error] > 1 | import Stripe from stripe';;const PROD_DOMAIN = app.ziontechgroup.com';;  if (context && context !== 'production') {'';  const url = process.env.URL || ;;  if (req.method !== 'POST') {'';    res.setHeader('Allow', POST');;    res.end('Method Not Allowed');;  if (typeof amount !== 'number') {'';    res.json({ error: Invalid amount' });;    const liveKey = process.env.STRIPE_SECRET_KEY || ;;      process.env.STRIPE_TEST_MODE === true' ||'';      (!isProdDomain() && liveKey.startsWith('sk_live'));;    if (!isProdDomain() && liveKey.startsWith('sk_live') && !process.env.STRIPE_TEST_SECRET_KEY) {'';      throw new Error('Refusing to use live Stripe key on non-production domain');;      apiVersion: 2025-06-30.basil',;      currency: 'usd',;    console.error('Create payment intent error:', error);\n[error]     |                    ^\n[error] api/feedback.js: SyntaxError: Unexpected token, expected \",\" (1:174)\n[error] > 1 | const { _withSentry } = require('./withSentry.cjs');;const fs = require('fs');;const path = require('path');;  if (req.method !== 'POST') {'';    res.setHeader('Allow', POST');;    res.end('Method Not Allowed');;  if (typeof rating !== 'number') {'';    res.json({ error: rating is required' });;    const file = path.join(process.cwd(), data', feedback.json');;      existing = JSON.parse(fs.readFileSync(file, 'utf8'));;      // File doesn't exist or is invalid, use empty array'';    console.error('Feedback API error:', error);;    res.json({ error: Failed to save feedback' });\n[error]     |                                                                                                                                                                              ^\n[error] api/newsletter/subscribe.js: SyntaxError: Unexpected token, expected \",\" (6:104)\n[error]   4 |   return emailRegex.test(email);\n[error]   5 | };\n[error] > 6 | const fs = require('fs');;const path = require('path');;const FILE_PATH = path.join(process.cwd(), data', newsletter-subscriptions.json');;  if (req.method !== 'POST') {'';    res.setHeader('Allow', POST');;    res.end('Method Not Allowed');;      res.json({ error: Invalid email' });;        ? JSON.parse(fs.readFileSync(FILE_PATH, 'utf8'));      console.error('Failed to persist subscription:', error);;    console.error('Subscribe API error:', error);;    res.json({ error: error.message || Subscription failed' });\n[error]     |                                                                                                        ^\n[error] api/nft/mint.js: SyntaxError: Unexpected token (2:17)\n[error]   1 |\n[error] > 2 | const chains = {;\n[error]     |                 ^\n[error]   3 |   ethereum: Ethereum Mainnet',;  polygon: 'Polygon',;  base: 'Base',;  starknet: 'Starknet',;  arbitrum: 'Arbitrum',;  if (req.method !== 'POST') {'';    res.setHeader('Allow', POST');;    res.end('Method Not Allowed');;    res.json({ error: Invalid chain selected' });;    title: Zion Genesis Artifact #0001',;    description: This NFT marks the moment Zion OS was born.',;    theme: Sovereign AI Protocol',;      manifesto: ipfs://manifesto',;      genesisDAOHash: ipfs://genesis-dao-hash',;      bookCoverArt: ipfs://book-cover-art',;      firstFundingVote: ipfs://first-funding-vote',;      founderSignature: ipfs://founder-signature',;    zionHash: ipfs://zion-dollar-hash',;      svg: <svg><!-- Glowing triangle/eye/multiverse --></svg>,;      revealAnimation: 'fadeInFromManifestoQuote',\n[error] api/onsite-request.js: SyntaxError: Unexpected token, expected \",\" (1:117)\n[error] > 1 | const { withSentry } = require('./withSentry.cjs');;  if (req.method !== 'POST') {'';    res.setHeader('Allow', POST');;    res.end('Method Not Allowed');;    res.json({ error: Missing required fields' });;    const response = await fetch('/functions/v1/onsite-service-request', {'';      method: 'POST',;Content-Type': application/json;    console.error('Onsite request API error:', err);;    res.json({ error: Failed to process request' });\n[error]     |                                                                                                                     ^\n[error] api/quotes.js: SyntaxError: Unexpected token, expected \",\" (1:143)\n[error] > 1 | const { withSentry } = require('./withSentry.cjs');;const fs = require('fs');;  if (req.method !== 'POST') {'';    res.setHeader('Allow', POST');;    res.end('Method Not Allowed');;      res.json({ error: Missing required fields' });;    fs.appendFileSync('quote_requests.log', JSON.stringify(logEntry) + \\n');;    console.error('Quote API error:', err);;    res.json({ error: Quote submission failed' });\n[error]     |                                                                                                                                               ^\n[error] api/service-request.js: SyntaxError: Unexpected token, expected \",\" (1:91)\n[error] > 1 | const fs = require('fs');;  if (req.method !== 'POST') {'';    res.setHeader('Allow', POST');;    res.end('Method Not Allowed');;    res.json({ error: Missing required fields' });;  fs.appendFileSync('service_requests.log', JSON.stringify(entry) + \\n');\n[error]     |                                                                                           ^\n[error] api/stripe-webhook.js: SyntaxError: Unexpected token (1:20)\n[error] > 1 | import Stripe from stripe';;import { buffer } from micro';;import fs from fs';;import path from path';;import { sendEmailWithSendGrid } from ../src/lib/email';;const stripe = new Stripe(process.env.STRIPE_SECRET_KEY || , {'';  apiVersion: 2025-06-30.basil',;  if (req.method !== 'POST') {'';    res.status(405).end('Method Not Allowed');;  const sig = req.headers['stripe-signature'];;  const webhookSecret = process.env.STRIPE_WEBHOOK_SECRET || ;;    console.error('Webhook signature verification failed.', error);;  if (event.type === checkout.session.completed') {'';        const file = path.join(process.cwd(), data', orders.json');;        const orders = JSON.parse(fs.readFileSync(file, 'utf8'));;          orders[idx].status = paid';;        console.error('Failed to update order', error);;          console.error('Failed to send receipt email', error);\n[error]     |                    ^\n[error] api/subscribe.js: SyntaxError: Unexpected token, expected \",\" (1:104)\n[error] > 1 | const fs = require('fs');;const path = require('path');;const FILE_PATH = path.join(process.cwd(), data', newsletter-subscriptions.json');;  if (req.method !== 'POST') {'';    res.setHeader('Allow', POST');;    res.end('Method Not Allowed');;      res.json({ error: Invalid email' });;        ? JSON.parse(fs.readFileSync(FILE_PATH, 'utf8'));      console.error('Failed to persist subscription:', error);;    console.error('Subscribe API error:', error);;    res.json({ error: error.message || Subscription failed' });\n[error]     |                                                                                                        ^\n[error] api/wallet.js: SyntaxError: Unexpected token, expected \",\" (2:63)\n[error]   1 | async function handler(req, res) {;\n[error] > 2 |   if (req.method !== 'GET') {'';    res.setHeader('Allow', GET');;    res.end('Method Not Allowed');;    console.error('Wallet API error:', error);;    res.json({ error: error.message || Failed to fetch wallet' });\n[error]     |                                                               ^\n[error] auto-run-all.js: SyntaxError: Unexpected token (19:3)\n[error]   17 | // File types and their interpreters\n[error]   18 | const FILE_TYPES = {\n[error] > 19 |   .ts': ts-node',\n[error]      |   ^\n[error]   20 |   .tsx': ts-node',\n[error]   21 |   .js': node',\n[error]   22 |   .sh': bash',\n[error] automation/ai-improvement-agents.js: SyntaxError: Unterminated string constant. (105:34)\n[error]   103 | class PerformanceAgent {\n[error]   104 |   constructor() {\n[error] > 105 |     this.name = Performance Agent';\n[error]       |                                  ^\n[error]   106 |     this.description = Optimizes application performance, bundle size, and resource usage';\n[error]   107 |   }\n[error]   108 |\n[error] automation/automation-manager.js: SyntaxError: Unexpected token (45:61)\n[error]   43 |     this.config = {\n[error]   44 |       automationDir: isInAutomationDir ? currentDir : path.join(currentDir, 'automation'),\n[error] > 45 |       scriptsDir: isInAutomationDir ? path.join(currentDir, ..', 'scripts') : path.join(currentDir, 'scripts'),\n[error]      |                                                             ^\n[error]   46 |       logsDir: isInAutomationDir ? path.join(currentDir, ..', 'logs') : path.join(currentDir, 'logs'),\n[error]   47 |       port: process.env.AUTOMATION_PORT || 3001\n[error]   48 |     };\n[error] automation/autonomous-daemon.js: SyntaxError: Unexpected token, expected \",\" (52:41)\n[error]   50 |     this.config = {\n[error]   51 |       scriptPath: path.join(__dirname, 'infinite-improvement-loop.js'),\n[error] > 52 |       logPath: path.join(__dirname, logs', 'daemon.log'),\n[error]      |                                         ^\n[error]   53 |       pidPath: path.join(__dirname, .daemon.pid'),\n[error]   54 |       port: process.env.IMPROVEMENT_PORT || 3002,\n[error]   55 |       autoRestart: true,\n[error] automation/autonomous-orchestrator.js: SyntaxError: Unexpected token, expected \",\" (60:58)\n[error]   58 |     this.projectRoot = process.cwd();\n[error]   59 |     this.logDir = path.join(this.projectRoot, 'logs');\n[error] > 60 |     this.pidFile = path.join(this.projectRoot, automation', .orchestrator.pid');\n[error]      |                                                          ^\n[error]   61 |   }\n[error]   62 |\n[error]   63 |   async start() {\n[error] automation/autonomous-system.js: SyntaxError: Unexpected token, expected \",\" (40:24)\n[error]   38 |       logDir: 'logs/automation',\n[error]   39 |       statusFile: 'logs/automation/status.json',\n[error] > 40 |       aiEndpoint: https://api.openai.com/v1/chat/completions',\n[error]      |                        ^\n[error]   41 |       webSearchEndpoint: https://api.duckduckgo.com/',\n[error]   42 |       checkInterval: 30000, // 30 seconds\n[error]   43 |       maxConcurrentTasks: 5,\n[error] automation/continuous-improvement/ai-optimizer.js: SyntaxError: Unexpected token, expected \",\" (42:59)\n[error]   40 |   // Cursor AI Integration\n[error]   41 |   CURSOR: {\n[error] > 42 |     API_ENDPOINT: process.env.CURSOR_API_ENDPOINT || https://api.cursor.sh',\n[error]      |                                                           ^\n[error]   43 |     API_KEY: process.env.CURSOR_API_KEY,\n[error]   44 |     WORKSPACE_ID: process.env.CURSOR_WORKSPACE_ID\n[error]   45 |   },\n[error] automation/continuous-improvement/AutomationTask.js: SyntaxError: Unterminated string constant. (5:30)\n[error]   3 |     this.config = config;\n[error]   4 |     this.lastRun = null;\n[error] > 5 |     this.lastStatus = pending';\n[error]     |                              ^\n[error]   6 |     this.lastError = null;\n[error]   7 |   }\n[error]   8 |\n[error] automation/continuous-improvement/cursor-integration.js: SyntaxError: Unexpected token, expected \",\" (43:60)\n[error]   41 |   constructor() {\n[error]   42 |     this.config = {\n[error] > 43 |       apiEndpoint: process.env.CURSOR_API_ENDPOINT || https://api.cursor.sh',\n[error]      |                                                            ^\n[error]   44 |       apiKey: process.env.CURSOR_API_KEY,\n[error]   45 |       workspaceId: process.env.CURSOR_WORKSPACE_ID,\n[error]   46 |       projectPath: process.cwd(),\n[error] automation/continuous-improvement/enhanced-automation.js: SyntaxError: Unexpected token, expected \",\" (65:58)\n[error]   63 |         local: {\n[error]   64 |           enabled: process.env.LOCAL_AI_ENABLED === 'true',\n[error] > 65 |           endpoint: process.env.LOCAL_AI_ENDPOINT || http://localhost:11434',\n[error]      |                                                          ^\n[error]   66 |           model: process.env.LOCAL_AI_MODEL || codellama:7b\n[error]   67 |         }\n[error]   68 |       },\n[error] automation/continuous-improvement/index.js: SyntaxError: Unexpected token, expected \",\" (61:59)\n[error]   59 |   // Cursor AI integration\n[error]   60 |   CURSOR: {\n[error] > 61 |     API_ENDPOINT: process.env.CURSOR_API_ENDPOINT || https://api.cursor.sh',\n[error]      |                                                           ^\n[error]   62 |     API_KEY: process.env.CURSOR_API_KEY,\n[error]   63 |     WORKSPACE_ID: process.env.CURSOR_WORKSPACE_ID\n[error]   64 |   },\n[error] automation/continuous-improvement/package.json: SyntaxError: Missing semicolon. (13:9)\n[error]   11 |     try {\n[error]   12 |       {\n[error] > 13 |   \"name\": \"zion-continuous-improvement\",\n[error]      |         ^\n[error]   14 |   \"version\": \"1.0.0\",\n[error]   15 |   \"description\": \"Automatic continuous improvement system for Zion App\",\n[error]   16 |   \"main\": \"index.js\",\n[error] automation/continuous-improvement/start.js: SyntaxError: Unexpected token, expected \",\" (46:46)\n[error]   44 |     this.config = {\n[error]   45 |       port: process.env.AUTOMATION_PORT || 3001,\n[error] > 46 |       logLevel: process.env.LOG_LEVEL || info',      enableDashboard: process.env.ENABLE_DASHBOARD === 'true',      enableSlack: process.env.ENABLE_SLACK === 'true',      enableMonitoring: process.env.ENABLE_MONITORING === true''    };\n[error]      |                                              ^\n[error]   47 |   }\n[error]   48 |\n[error]   49 |   /**\n[error] automation/continuous-improvement/test-system.js: SyntaxError: Unexpected token, expected \",\" (63:15)\n[error]   61 |     console.log('📁 Testing file structure...')\n[error]   62 | const requiredFiles = [\n[error] > 63 |       index.js',monitor.js',improve.js',cursor-integration.js',start.js',package.json',README.md',.env''    ]\n[error]      |               ^\n[error]   64 | const requiredDirs = [\n[error]   65 |       logs',backups',scripts''    ];\n[error]   66 |\n[error] automation/core/AnomalyDetector.js: SyntaxError: Unterminated string constant. (24:39)\n[error]   22 | }\n[error]   23 |\n[error] > 24 | const EventEmitter = require';('events');\n[error]      |                                       ^\n[error]   25 |\n[error]   26 | class AnomalyDetector extends EventEmitter {\n[error]   27 |   constructor(config = {}) {\n[error] automation/core/AutomationTask.js: SyntaxError: Unterminated string constant. (5:30)\n[error]   3 |     this.config = config;\n[error]   4 |     this.lastRun = null;\n[error] > 5 |     this.lastStatus = pending';\n[error]     |                              ^\n[error]   6 |     this.lastError = null;\n[error]   7 |   }\n[error]   8 |\n[error] automation/core/AutonomousAutomationManager.js: SyntaxError: Unterminated string constant. (36:25)\n[error]   34 |  */\n[error]   35 |\n[error] > 36 | const fs = require';('fs').promises;\n[error]      |                         ^\n[error]   37 | const path = require';('path');\n[error]   38 | const { EventEmitter } = require';('events');\n[error]   39 | const { execSync, spawn } = require';('child_process');\n[error] automation/core/NotificationManager.js: SyntaxError: Unterminated string constant. (24:39)\n[error]   22 | }\n[error]   23 |\n[error] > 24 | const EventEmitter = require';('events');\n[error]      |                                       ^\n[error]   25 | const axios = require';('axios');\n[error]   26 |\n[error]   27 | class NotificationManager extends EventEmitter {\n[error] automation/core/ReportGenerator.js: SyntaxError: Unterminated string constant. (24:39)\n[error]   22 | }\n[error]   23 |\n[error] > 24 | const EventEmitter = require';('events');\n[error]      |                                       ^\n[error]   25 | const fs = require';('fs');\n[error]   26 | const path = require';('path');\n[error]   27 |\n[error] automation/core/TaskScheduler.js: SyntaxError: Unterminated string constant. (24:39)\n[error]   22 | }\n[error]   23 |\n[error] > 24 | const EventEmitter = require';('events');\n[error]      |                                       ^\n[error]   25 |\n[error]   26 | class TaskScheduler extends EventEmitter {\n[error]   27 |   constructor(config = {}) {\n[error] automation/cursor-auto-save.js: SyntaxError: Unterminated string constant. (63:10)\n[error]   61 |     // Watch common directories for changes\n[error]   62 |     const watchDirs = [\n[error] > 63 |       src',\n[error]      |          ^\n[error]   64 |       pages',\n[error]   65 |       components',\n[error]   66 |       automation',\n[error] automation/cursor-automated-communication.js: SyntaxError: Unexpected token, expected \",\" (42:47)\n[error]   40 |   constructor(config = {}) {\n[error]   41 |     this.config = {\n[error] > 42 |       apiEndpoint: config.apiEndpoint || https://api.cursor.sh',\n[error]      |                                               ^\n[error]   43 |       apiKey: config.apiKey || process.env.CURSOR_API_KEY,\n[error]   44 |       projectPath: config.projectPath || process.cwd(),\n[error]   45 |       autoCommit: config.autoCommit !== false,\n[error] automation/cursor-automated-extension/background.js: SyntaxError: Unterminated string constant. (70:26)\n[error]   68 |     try {\n[error]   69 |       switch (message.type) {\n[error] > 70 |         case ANALYZE_CODE':\n[error]      |                          ^\n[error]   71 |           const analysis = await this.analyzeCode(message.data);\n[error]   72 |           sendResponse({ success: true, analysis });\n[error]   73 |           break;\n[error] automation/cursor-chat-automation.js: SyntaxError: Unexpected token (44:34)\n[error]   42 |     super();\n[error]   43 |     this.config = {\n[error] > 44 |       dataDir: config.dataDir || ./data/cursor-chats',\n[error]      |                                  ^\n[error]   45 |       todoFile: config.todoFile || ./data/todos.json',\n[error]   46 |       queueFile: config.queueFile || ./data/queue.json',\n[error]   47 |       autoCreateTodos: config.autoCreateTodos !== false,\n[error] automation/dashboard/DashboardServer.js: SyntaxError: Unterminated string constant. (34:52)\n[error]   32 |     this.config = {\n[error]   33 |       port: process.env.DASHBOARD_PORT || 3001,\n[error] > 34 |       host: process.env.DASHBOARD_HOST || localhost',\n[error]      |                                                    ^\n[error]   35 |       enableCORS: true,\n[error]   36 |       enableWebSocket: true,\n[error]   37 |       staticPath: path.join(__dirname, 'public'),\n[error] automation/efficient-improvement-system.js: SyntaxError: Unexpected token, expected \",\" (70:34)\n[error]   68 |     \n[error]   69 |     // Create necessary directories\n[error] > 70 |     const dirs = ['backups', logs', reports'];\n[error]      |                                  ^\n[error]   71 |     for (const dir of dirs) {\n[error]   72 |       const dirPath = path.join(this.projectRoot, dir);\n[error]   73 |       if (!fs.existsSync(dirPath)) {\n[error] automation/enhanced-infinite-improvement.js: SyntaxError: Unexpected token, expected \",\" (46:59)\n[error]   44 |   // Cursor AI Integration\n[error]   45 |   CURSOR: {\n[error] > 46 |     API_ENDPOINT: process.env.CURSOR_API_ENDPOINT || https://api.cursor.sh',\n[error]      |                                                           ^\n[error]   47 |     API_KEY: process.env.CURSOR_API_KEY,\n[error]   48 |     WORKSPACE_ID: process.env.CURSOR_WORKSPACE_ID\n[error]   49 |   },\n[error] automation/fix-all-syntax-errors.js: SyntaxError: A class name is required. (2:8)\n[error]   1 |\n[error] > 2 | class  {\n[error]     |        ^\n[error]   3 |   constructor() {\n[error]   4 |     this.isRunning = false;\n[error]   5 |   }\n[error] automation/fix-remaining-syntax.js: SyntaxError: Unterminated string constant. (40:51)\n[error]   38 |   \n[error]   39 |   const filePath = path.join(__dirname, 'core/IntelligentAutomationOrchestrator.js');\n[error] > 40 |   const content = await fs.readFile(filePath, utf8');\n[error]      |                                                   ^\n[error]   41 |   \n[error]   42 |   let fixedContent = content\n[error]   43 |     // Fix missing commas in function calls\n[error] automation/fix-syntax-errors.js: SyntaxError: Unexpected token (60:5)\n[error]   58 |             content = content.replace(//g, '');\n[error]   59 |\n[error] > 60 |     }\n[error]      |     ^\n[error]   61 | }\n[error]   62 |\n[error]   63 | }\n[error] automation/fix-syntax.js: SyntaxError: Unexpected token, expected \",\" (38:61)\n[error]   36 | const path = require('path');\n[error]   37 |\n[error] > 38 | const filePath = path.join(__dirname, continuous-improvement', 'ai-optimizer.js');\n[error]      |                                                             ^\n[error]   39 |\n[error]   40 | // Read the file\n[error]   41 | let content = fs.readFileSync(filePath, 'utf8');\n[error] automation/improved-automation-orchestrator.js: SyntaxError: Unexpected token, expected \",\" (42:17)\n[error]   40 |     \n[error]   41 |     this.systemConfigs = {\n[error] > 42 |       continuous-improvement': {\n[error]      |                 ^\n[error]   43 |         script: 'continuous-improvement/index.js',\n[error]   44 |         name: Continuous Improvement System',\n[error]   45 |         description: Monitors and improves code quality, performance, and security',\n[error] automation/improved-watchdog.js: SyntaxError: Unexpected token (59:42)\n[error]   57 |\n[error]   58 |   async loadExistingProcesses() {\n[error] > 59 |     const pidFile = path.join(__dirname, .watchdog.pid');\n[error]      |                                          ^\n[error]   60 |     \n[error]   61 |     if (fs.existsSync(pidFile)) {\n[error]   62 |       try {\n[error] automation/infinite-improvement-loop.js: SyntaxError: Unexpected token, expected \",\" (51:59)\n[error]   49 |   // Cursor AI Integration\n[error]   50 |   CURSOR: {\n[error] > 51 |     API_ENDPOINT: process.env.CURSOR_API_ENDPOINT || https://api.cursor.sh',\n[error]      |                                                           ^\n[error]   52 |     API_KEY: process.env.CURSOR_API_KEY,\n[error]   53 |     WORKSPACE_ID: process.env.CURSOR_WORKSPACE_ID\n[error]   54 |   },\n[error] automation/local-auto-ci.js: SyntaxError: Unexpected token (38:39)\n[error]   36 | const fs = require('fs')\n[error]   37 | const path = require('path')\n[error] > 38 | const LOG_FILE = path.join(__dirname, ../logs/local-auto-ci.log')\n[error]      |                                       ^\n[error]   39 | const AUTO_FIX_SCRIPT = path.join(__dirname, ../scripts/auto-fix-errors.cjs')\n[error]   40 | const TEST_COMMAND = npm test'; // Change if your main test command is different\n[error]   41 | const WAIT_MINUTES = 10\n[error] automation/monitor-improvement-system.js: SyntaxError: Unterminated string constant. (74:62)\n[error]   72 |         \n[error]   73 |         if (recentFiles.length > 0) {\n[error] > 74 |           logger.info(`📄 Recent reports: ${recentFiles.join(', )}`);\n[error]      |                                                              ^\n[error]   75 |         }\n[error]   76 |       }\n[error]   77 |     } catch (error) {\n[error] automation/netlify-build-automation.js: SyntaxError: Unexpected token (156:1)\n[error]   154 |             await new Promise((resolve) =>\n[error]   155 |               \n[error] > 156 | const timeoutId = \n[error]       | ^\n[error]   157 | const timeoutId = \n[error]   158 | const timeoutId = \n[error]   159 | const timeoutId = \n[error] automation/netlify-build-monitor.js: SyntaxError: Unterminated string constant. (84:21)\n[error]   82 |     } catch (error) {\n[error]   83 |       logger.error('Error getting build status:', error.message);\n[error] > 84 |       return unknown';\n[error]      |                     ^\n[error]   85 |     }\n[error]   86 |   }\n[error]   87 |\n[error] automation/netlify-monitor.js: SyntaxError: Unexpected token (390:1)\n[error]   388 |         await this.checkBuilds();\n[error]   389 |         await new Promise((resolve) => \n[error] > 390 | const timeoutId = \n[error]       | ^\n[error]   391 | const timeoutId = \n[error]   392 | const timeoutId = \n[error]   393 | const timeoutId = \n[error] automation/next.config.js: SyntaxError: Unexpected token, expected \",\" (28:12)\n[error]   26 |     config.resolve.alias = {\n[error]   27 |       ...config.resolve.alias,\n[error] > 28 |       react-native$': react-native-web\n[error]      |            ^\n[error]   29 |     };\n[error]   30 |\n[error]   31 |     return config;\n[error] automation/performance/automation-runner.js: SyntaxError: Unterminated string constant. (38:18)\n[error]   36 | const fs = require('fs')\n[error]   37 | const SCRIPTS = [\n[error] > 38 |   frontend-fix.js',\n[error]      |                  ^\n[error]   39 |   backend-fix.py',\n[error]   40 |   dependency-update.js',\n[error]   41 |   dependency-update.py\n[error] automation/performance/performance-check.js: SyntaxError: Unexpected token (80:11)\n[error]   78 |             this.log('✅ Bundle size is within acceptable limits');\n[error]   79 |             return true;\n[error] > 80 |         } catch (error) {\n[error]      |           ^\n[error]   81 |             this.log(`Bundle size check failed: ${error.message}`, 'warn');\n[error]   82 |             return true; // Don't fail the build for bundle size issues\n[error]   83 |         }\n[error] automation/pre-build-check.js: SyntaxError: Unexpected token, expected \",\" (69:60)\n[error]   67 |         // Check for common syntax errors\n[error]   68 |         const syntaxErrors = [\n[error] > 69 |           { pattern: /from\\s+next';/, description: Missing quotes in import statement' },\n[error]      |                                                            ^\n[error]   70 |           { pattern: /req\\.method\\s*!==\\s*([A-Z]+)/, description: Missing quotes in method check' },\n[error]   71 |           { pattern: /message:\\s*([A-Za-z\\s]+)/, description: Missing quotes in string literal' },\n[error]   72 |           { pattern: /typeof\\s+global\\s*!==\\s*undefined'/, description: Missing quotes in typeof check' },\n[error] automation/security/check-sensitive-data.js: SyntaxError: Unexpected token (32:13)\n[error]   30 |     constructor() {\n[error]   31 |         this.projectRoot = process.cwd();\n[error] > 32 |             ],\n[error]      |             ^\n[error]   33 |             allowedDomains: [\n[error]   34 |                 'localhost',\n[error]   35 |                 '127.0.0.1',\n[error] automation/setup-automation.js: SyntaxError: Unexpected token (31:16)\n[error]   29 |   constructor() {\n[error]   30 |     this.config = {\n[error] > 31 |       envFile: .env.local',\n[error]      |                ^\n[error]   32 |       netlifyConfig: 'netlify.toml',\n[error]   33 |       automationConfig: automation-config.json\n[error]   34 |     };\n[error] automation/slack/slack-bot.js: SyntaxError: Unexpected token (168:1)\n[error]   166 |     // Simulate optimization process\n[error]   167 |     await new Promise(resolve => \n[error] > 168 | const timeoutId = \n[error]       | ^\n[error]   169 | const timeoutId = \n[error]   170 | const timeoutId = \n[error]   171 | const timeoutId = \n[error] automation/start-autonomous-system.js: SyntaxError: Unterminated string constant. (59:48)\n[error]   57 |       this.orchestrator = new IntelligentAutomationOrchestrator({\n[error]   58 |         port: process.env.AUTOMATION_PORT || 3001,\n[error] > 59 |         logLevel: process.env.LOG_LEVEL || info',\n[error]      |                                                ^\n[error]   60 |         enableDashboard: process.env.ENABLE_DASHBOARD !== 'false',\n[error]   61 |         enableAPI: process.env.ENABLE_API !== 'false',\n[error]   62 |         \n[error] automation/syntax-fixer.js: SyntaxError: Unexpected token (62:49)\n[error]   60 |\n[error]   61 |   async fixUnterminatedStrings() {\n[error] > 62 |     const files = await this.findFiles(['.tsx', .ts', .js', .jsx']);\n[error]      |                                                 ^\n[error]   63 |     \n[error]   64 |     for (const file of files) {\n[error]   65 |       try {\n[error] automation/tasks/AIEnhancer.js: SyntaxError: Unexpected token, expected \",\" (33:40)\n[error]   31 |     super({\n[error]   32 |       name: 'AIEnhancer',\n[error] > 33 |       schedule: 0 */6 * * *', // Every 6 hours\n[error]      |                                        ^\n[error]   34 |       enabled: true,\n[error]   35 |       autoApply: false, // Don't auto-apply by default\n[error]   36 |       aiProviders: ['openai', claude', local'],\n[error] automation/tasks/CodeQualityEnforcer.js: SyntaxError: Unexpected token, expected \",\" (33:40)\n[error]   31 |     super({\n[error]   32 |       name: 'CodeQualityEnforcer',\n[error] > 33 |       schedule: 0 */4 * * *', // Every 4 hours\n[error]      |                                        ^\n[error]   34 |       enabled: true,\n[error]   35 |       autoFix: true,\n[error]   36 |       createPR: true,\n[error] automation/tasks/PerformanceOptimizer.js: SyntaxError: Unexpected token, expected \",\" (33:40)\n[error]   31 |     super({\n[error]   32 |       name: 'PerformanceOptimizer',\n[error] > 33 |       schedule: 0 */4 * * *', // Every 4 hours\n[error]      |                                        ^\n[error]   34 |       enabled: true,\n[error]   35 |       autoOptimize: true,\n[error]   36 |       optimizationLevel: 'aggressive', // conservative, moderate, aggressive\n[error] automation/tasks/SecurityScanner.js: SyntaxError: Unexpected token (168:11)\n[error]   166 |             title: parts[2],\n[error]   167 |             description: parts[3] || \n[error] > 168 |           });\n[error]       |           ^\n[error]   169 |         }\n[error]   170 |       }\n[error]   171 |     }\n[error] automation/tasks/StaleCleaner.js: SyntaxError: Unexpected token, expected \",\" (34:41)\n[error]   32 |       staleBranchDays: 30,\n[error]   33 |       stalePRDays: 14,\n[error] > 34 |       protectedBranches: ['main', master', develop', staging'],\n[error]      |                                         ^\n[error]   35 |       dryRun: false,\n[error]   36 |       autoDelete: false,\n[error]   37 |       notifyOnCleanup: true,\n[error] automation/test-automation.js: SyntaxError: Unterminated string constant. (70:60)\n[error]   68 |       this.log('All tests completed');\n[error]   69 |     } catch (error) {\n[error] > 70 |       this.log(`Test suite failed: ${error.message}`, error');\n[error]      |                                                            ^\n[error]   71 |       process.exit(1);\n[error]   72 |     }\n[error]   73 |   }\n[error] automation/test-system.js: SyntaxError: A class name is required. (2:8)\n[error]   1 |\n[error] > 2 | class  {\n[error]     |        ^\n[error]   3 |   constructor() {\n[error]   4 |     this.isRunning = false;\n[error]   5 |   }\n[error] automation/tests/system-diagnostic.js: SyntaxError: Unterminated string constant. (53:86)\n[error]   51 |       return this.results;\n[error]   52 |     } catch (error) {\n[error] > 53 |       logger.error('❌ Diagnostic failed:', error);      this.results.overall = failed';      return this.results;\n[error]      |                                                                                      ^\n[error]   54 |     }\n[error]   55 |   }\n[error]   56 |\n[error] automation/total-control-improvement-system.js: SyntaxError: Unterminated string constant. (54:21)\n[error]   52 |       backupBeforeChanges: true,\n[error]   53 |       improvementTypes: [\n[error] > 54 |         code-quality',\n[error]      |                     ^\n[error]   55 |         performance',\n[error]   56 |         security',\n[error]   57 |         accessibility',\n[error] automation/watchdog.js: SyntaxError: Unexpected token (93:26)\n[error]   91 |   cursorChatProcess = startProcess(\n[error]   92 |     CURSOR_CHAT_CMD,\n[error] > 93 |     path.join(__dirname, ..'),\n[error]      |                          ^\n[error]   94 |     () => {\n[error]   95 |       logger.info(\n[error]   96 |         [Watchdog] Cursor chat process exited. Starting new session...',\n",
      "command": "npm run format"
    },
    {
      "name": "Security Audit",
      "success": true,
      "duration": 2889,
      "output": "# npm audit report\n\npm2  *\npm2 Regular Expression Denial of Service vulnerability - https://github.com/advisories/GHSA-x5gf-qvw8-r2rm\nNo fix available\nnode_modules/pm2\n\n1 low severity vulnerability\n\nSome issues need review, and may require choosing\na different dependency.\n",
      "error": "",
      "command": "npm audit --audit-level moderate"
    },
    {
      "name": "Dependency Check",
      "success": true,
      "duration": 2848,
      "output": "project@0.0.0 /Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone\n├── @chakra-ui/react@3.22.0\n├── @emotion/react@11.14.0\n├── @emotion/styled@11.14.1\n├── @opentelemetry/context-async-hooks@2.0.1\n├── @opentelemetry/core@2.0.1\n├── @opentelemetry/instrumentation@0.203.0\n├── @opentelemetry/sdk-trace-base@2.0.1\n├── @sentry/nextjs@9.41.0\n├── @slack/bolt@4.4.0\n├── @supabase/ssr@0.6.1\n├── @supabase/supabase-js@2.52.1\n├── @swc/helpers@0.5.17\n├── @testing-library/jest-dom@6.6.3\n├── @testing-library/react@16.3.0\n├── @testing-library/user-event@14.6.1\n├── @types/jest@30.0.0\n├── @types/node@20.19.8\n├── @types/react-dom@19.1.6\n├── @types/react@19.1.8\n├── @types/socket.io-client@1.4.36\n├── @types/socket.io@3.0.1\n├── @typescript-eslint/eslint-plugin@8.38.0\n├── @typescript-eslint/parser@8.38.0\n├── @vitest/ui@3.2.4\n├── chokidar@4.0.3\n├── cors@2.8.5\n├── eslint-config-next@15.4.4\n├── eslint-plugin-jsx-a11y@6.10.2\n├── eslint-plugin-react-hooks@5.2.0\n├── eslint-plugin-react@7.37.5\n├── eslint@9.31.0\n├── ethers@6.15.0\n├── express@5.1.0\n├── framer-motion@12.23.9\n├── husky@9.1.7\n├── i18next@25.3.2\n├── jest-environment-jsdom@30.0.5\n├── jest@30.0.5\n├── jsdom@26.1.0\n├── lint-staged@16.1.2\n├── lucide-react@0.525.0\n├── next-auth@4.24.11\n├── next@15.4.4\n├── node-cron@4.2.1\n├── node-fetch@3.3.2\n├── pm2@6.0.8\n├── prettier@3.6.2\n├── react-dom@19.1.0\n├── react-i18next@15.6.1\n├── react@19.1.0\n├── socket.io-client@4.8.1\n├── socket.io@4.8.1\n├── styled-jsx@5.1.7\n├── typescript@5.8.3\n├── vitest@3.2.4\n├── winston@3.17.0\n├── ws@8.18.3\n└── zod@4.0.10\n\n",
      "error": "",
      "command": "npm ls --depth=0"
    },
    {
      "name": "Build Test",
      "success": false,
      "duration": 24190,
      "output": "",
      "error": "Command failed: npm run build\n ⚠ Linting is disabled.\n ⚠ nodejs runtime support for middleware requires experimental.nodeMiddleware be enabled in your next.config\nFailed to compile.\n\n./middleware.ts\nModule not found: Can't resolve '@/utils/supabase/middleware'\n\nhttps://nextjs.org/docs/messages/module-not-found\n\n./instrumentation.ts\nError:   \u001b[31mx\u001b[0m Merge conflict marker encountered.\n     ,-[\u001b[36;1;4m/Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/instrumentation.ts\u001b[0m:154:1]\n \u001b[2m151\u001b[0m |   } catch (error) {\n \u001b[2m152\u001b[0m |     console.error(\"instrumentation.ts: Failed to initialize Sentry:\", error);\n \u001b[2m153\u001b[0m |   }\n \u001b[2m154\u001b[0m | >>>>>>> origin/codex/reactivate-features-gradually\n     : \u001b[35;1m^^^^^^^\u001b[0m\n \u001b[2m155\u001b[0m | }\n     `----\n\nCaused by:\n    Syntax Error\n\n./pages/api/auth/[...nextauth].ts\nError:   \u001b[31mx\u001b[0m Expected '{', got 'export'\n   ,-[\u001b[36;1;4m/Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/api/auth/[...nextauth].ts\u001b[0m:1:1]\n \u001b[2m1\u001b[0m | import type { NextApiRequest, NextApiResponse } from 'next'; ; export export export default function handler(req: NextApiRequest, res: NextApiResponse)       {; if (req.method !== 'GET' && req.method !== 'POST') {; res.status(405).end(); return; }; // TODO: Implement authentication logic here; res.status(200).json({ message: 'Auth endpoint placeholder' }); } \n   : \u001b[35;1m                                                                      ^^^^^^\u001b[0m\n   `----\n\nCaused by:\n    Syntax Error\n\nImport trace for requested module:\n./pages/api/auth/[...nextauth].ts\n\n./pages/api/auth/confirm.ts\nError:   \u001b[31mx\u001b[0m Expected '{', got 'export'\n   ,-[\u001b[36;1;4m/Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/api/auth/confirm.ts\u001b[0m:1:1]\n \u001b[2m1\u001b[0m | import type { NextApiRequest, NextApiResponse } from 'next'; ; export export export default function handler(req: NextApiRequest, res: NextApiResponse)       {; if (req.method !== 'GET' && req.method !== 'POST') {; res.status(405).end(); return; }; // TODO: Implement confirmation logic here; res.status(200).json({ message: 'Confirm endpoint placeholder' }); } \n   : \u001b[35;1m                                                                      ^^^^^^\u001b[0m\n   `----\n\nCaused by:\n    Syntax Error\n\nImport trace for requested module:\n./pages/api/auth/confirm.ts\n\n./pages/_app.tsx\nError:   \u001b[31mx\u001b[0m Expected '{', got 'export'\n   ,-[\u001b[36;1;4m/Users/klebergarciaalcatrao/Documents/GitHub/Zion.App.Clone/pages/_app.tsx\u001b[0m:3:1]\n \u001b[2m1\u001b[0m | import type { AppProps } from 'next/app';\n \u001b[2m2\u001b[0m | ;\n \u001b[2m3\u001b[0m | export export default function App(     { Component, pageProps }: AppProps) {;\n   : \u001b[35;1m       ^^^^^^\u001b[0m\n \u001b[2m4\u001b[0m |   return <Component {...pageProps} />;\n \u001b[2m5\u001b[0m | }\n   `----\n\nCaused by:\n    Syntax Error\n\n\n> Build failed because of webpack errors\n",
      "command": "npm run build"
    }
  ],
  "summary": {
    "total": 8,
    "successful": 3,
    "failed": 5,
    "duration": 373050
  }
}