#!/usr/bin/env node
/* eslint-disable */
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

function runEslint() {
  try {
    const out = execSync('npx eslint . -f json', { stdio: ['ignore', 'pipe', 'pipe'] }).toString();
    return JSON.parse(out);
  } catch (e) {
    try { return JSON.parse(e.stdout.toString()); } catch { return []; }
  }
}

function summarize(results) {
  const summary = { files: 0, errors: 0, warnings: 0, byRule: {}, byFile: {} };
  for (const file of results) {
    summary.files += 1;
    const fileErr = file.errorCount || 0;
    const fileWarn = file.warningCount || 0;
    summary.errors += fileErr;
    summary.warnings += fileWarn;
    if (file.messages && file.messages.length) {
      summary.byFile[file.filePath] = { errors: fileErr, warnings: fileWarn };
      for (const m of file.messages) {
        const rule = m.ruleId || 'unknown';
        summary.byRule[rule] = summary.byRule[rule] || { errors: 0, warnings: 0 };
        if (m.severity === 2) summary.byRule[rule].errors += 1;
        if (m.severity === 1) summary.byRule[rule].warnings += 1;
      }
    }
  }
  return summary;
}

function toMarkdown(sum) {
  const lines = ['# ESLint Report', '', `Files: ${sum.files}  Errors: ${sum.errors}  Warnings: ${sum.warnings}`, '', '## Top Rules', ''];
  const rules = Object.entries(sum.byRule).sort((a,b) => (b[1].errors + b[1].warnings) - (a[1].errors + a[1].warnings)).slice(0, 20);
  for (const [rule, cnt] of rules) lines.push(`- ${rule}: ${cnt.errors} errors, ${cnt.warnings} warnings`);
  lines.push('', '_Generated by automation/eslint-summary.cjs_');
  return lines.join('\n');
}

function main() {
  const results = runEslint();
  const sum = summarize(results);
  const docs = path.join(process.cwd(), 'docs');
  if (!fs.existsSync(docs)) fs.mkdirSync(docs, { recursive: true });
  fs.writeFileSync(path.join(docs, 'eslint-report.json'), JSON.stringify(sum, null, 2));
  fs.writeFileSync(path.join(docs, 'eslint-report.md'), toMarkdown(sum));
  console.log('eslint-summary: updated docs/eslint-report.*');
}

if (require.main === module) main();