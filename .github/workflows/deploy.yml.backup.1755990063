name: Deploy

on:
  workflow_dispatch: {}
  schedule:
    - cron: '*/10 * * * *'

permissions:
  contents: write
  actions: read

jobs:
  main:
    name: Main Job
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
<<<<<<< HEAD

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
=======
      - name: Install dependencies (for Sentry CLI and potential build step)
        run: npm ci
      - name: Build application (to generate sourcemaps for Sentry)
        env:
          # Mimic Netlify's production environment as much as possible for consistent sourcemaps
          # These are illustrative; actual values might need to match netlify.toml production context
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: '1'
          # Add other critical NEXT_PUBLIC_ vars if they affect sourcemap generation or IDs
        run: npm run build # This uses the standard build, not the full optimized-build.cjs

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: zion-holdings # Make sure this is your Sentry org slug
          SENTRY_PROJECT: javascript-nextjs # Make sure this is your Sentry project slug
        with:
          environment: production
          sourcemaps: # Path to sourcemaps
            - './.next/**/*.js.map'
            - './.next/static/**/*.js.map' # Common locations for Next.js sourcemaps
          url_prefix: '~/_next' # Adjust if your assets are served from a different base path e.g. /_next or cdn
          # version: ${{ github.sha }} # Explicitly set version, defaults to github.sha
          set_commits: auto # Automatically associate commits with the release
          # deploy: # Optional: if you want to mark the release as deployed in Sentry
          # env: production
          # started_at: ${{ steps.start_time.outputs.time }} # Requires a step to output current time
          # name: "Netlify Production Deployment"
>>>>>>> origin/automation-error-fixes

