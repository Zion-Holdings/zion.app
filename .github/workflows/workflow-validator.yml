name: ✅ Workflow Validator

on:
  push:
    branches: [main, develop]
    paths:
      - '.github/workflows/**'
  pull_request:
    branches: [main, develop]
    paths:
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read
  actions: read

concurrency:
  group: "workflow-${{ github.ref }}"
  cancel-in-progress: false
jobs:
  validate:
    name: Validate Workflows
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install pyyaml
          
      - name: Validate workflow syntax
        id: validate
        run: |
          echo "🔍 Validating workflow syntax..."
          
          # Find all workflow files
          workflow_files=$(find .github/workflows -name "*.yml" -o -name "*.yaml")
          total_files=$(echo "$workflow_files" | wc -l)
          
          echo "📁 Found $total_files workflow files"
          
          # Validate each file
          invalid_files=()
          valid_count=0
          
          for file in $workflow_files; do
            echo "  🔍 Checking: $file"
            
            if python3 -c "import yaml; yaml.safe_load(open('$file', 'r'))" 2>/dev/null; then
              echo "    ✅ Valid"
              valid_count=$((valid_count + 1))
            else
              echo "    ❌ Invalid"
              invalid_files+=("$file")
            fi
          done
          
          # Set outputs
          echo "::set-output name=total_files::$total_files"
          echo "::set-output name=valid_count::$valid_count"
          echo "::set-output name=invalid_count::${#invalid_files[@]}"
          
          # Summary
          echo ""
          echo "📊 Validation Summary:"
          echo "  Total files: $total_files"
          echo "  Valid files: $valid_count"
          echo "  Invalid files: ${#invalid_files[@]}"
          
          if [ ${#invalid_files[@]} -gt 0 ]; then
            echo ""
            echo "❌ Invalid workflows found:"
            for file in "${invalid_files[@]}"; do
              echo "  - $file"
            done
            echo ""
            echo "🚨 Please fix these workflow files before merging"
            exit 1
          else
            echo ""
            echo "✅ All workflows are valid!"
          fi
          
      - name: Check workflow structure
        if: steps.validate.outputs.invalid_count == 0
        run: |
          echo "🔍 Checking workflow structure..."
          
          # Check for common structural issues
          issues_found=0
          
          for file in $(find .github/workflows -name "*.yml" -o -name "*.yaml"); do
            echo "  🔍 Analyzing: $file"
            
            # Check for required fields
            if ! grep -q "^name:" "$file"; then
              echo "    ⚠️  Missing 'name' field"
              issues_found=$((issues_found + 1))
            fi
            
            if ! grep -q "^on:" "$file"; then
              echo "    ⚠️  Missing 'on' field"
              issues_found=$((issues_found + 1))
            fi
            
            if ! grep -q "^jobs:" "$file"; then
              echo "    ⚠️  Missing 'jobs' field"
              issues_found=$((issues_found + 1))
            fi
            
            # Check for runs-on
            if ! grep -q "runs-on:" "$file"; then
              echo "    ⚠️  Missing 'runs-on' specification"
              issues_found=$((issues_found + 1))
            fi
            
            # Check for steps
            if ! grep -q "^  steps:" "$file"; then
              echo "    ⚠️  Missing 'steps' section"
              issues_found=$((issues_found + 1))
            fi
          done
          
          if [ $issues_found -gt 0 ]; then
            echo ""
            echo "⚠️  Found $issues_found structural issues"
            echo "   These are warnings and won't prevent the workflow from running"
            echo "   but may cause unexpected behavior"
          else
            echo ""
            echo "✅ All workflows have proper structure"
          fi
          
      - name: Generate validation report
        run: |
          echo "📋 Generating validation report..."
          
          cat > workflow-validation-report.md << EOF
          # ✅ Workflow Validation Report
          
          **Generated:** $(date -u +"%Y-%m-%d %H:%M UTC")
          **Repository:** ${{ github.repository }}
          **Branch:** ${{ github.ref_name }}
          **Commit:** ${{ github.sha }}
          
          ## 📊 Validation Results
          
          - **Total Workflows:** ${{ steps.validate.outputs.total_files }}
          - **Valid Workflows:** ${{ steps.validate.outputs.valid_count }}
          - **Invalid Workflows:** ${{ steps.validate.outputs.invalid_count }}
          - **Status:** ${{ steps.validate.outputs.invalid_count == 0 && '✅ PASSED' || '❌ FAILED' }}
          
          ## 🔍 Details
          
          EOF
          
          if [ "${{ steps.validate.outputs.invalid_count }}" -gt 0 ]; then
            cat >> workflow-validation-report.md << EOF
          ### ❌ Validation Failed
          
          The following workflows have syntax errors and must be fixed:
          
          EOF
            
            for file in $(find .github/workflows -name "*.yml" -o -name "*.yaml"); do
              if ! python3 -c "import yaml; yaml.safe_load(open('$file', 'r'))" 2>/dev/null; then
                echo "- \`$file\`" >> workflow-validation-report.md
              fi
            done
            
            cat >> workflow-validation-report.md << EOF
          
          ### 🛠️ How to Fix
          
          1. **Run the auto-healer:** Use the workflow auto-healer workflow
          2. **Manual fix:** Correct YAML syntax errors manually
          3. **Validate locally:** Use \`python3 -c "import yaml; yaml.safe_load(open('file.yml', 'r'))"\`
          
          EOF
          else
            cat >> workflow-validation-report.md << EOF
          ### ✅ Validation Passed
          
          All workflows are syntactically correct and ready to run.
          
          ### 🎯 Next Steps
          
          - Deploy with confidence
          - Monitor workflow execution
          - Set up auto-healing for future issues
          
          EOF
          fi
          
          cat >> workflow-validation-report.md << EOF
          
          ## 📈 Recommendations
          
          - **Enable Auto-Healing:** Set up the workflow auto-healer for automatic fixes
          - **Regular Monitoring:** Use the workflow health monitor for ongoing health checks
          - **Pre-commit Hooks:** Consider adding YAML validation to your development workflow
          
          ---
          *Report generated automatically by Workflow Validator*
          EOF
          
          echo "📄 Validation report generated: workflow-validation-report.md"
          
      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.validate.outputs.invalid_count > 0
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('workflow-validation-report.md', 'utf8');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: report
            });
            
            console.log('💬 Validation report commented on PR');
