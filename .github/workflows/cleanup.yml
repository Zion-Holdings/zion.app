---
name: Cleanup
on:
  schedule:
    - cron: 0 3 * * *
  workflow_dispatch: {}
permissions:
  contents: write
  actions: read
  pull-requests: write
concurrency:
  group: workflow-${{ github.ref }}
  cancel-in-progress: false
jobs:
  cleanup:
    name: Cleanup Repository
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Clean up old automation files
        run: '# Remove old analytics files (older than 7 days)

        find automation/analytics -name "*.json" -mtime +7 -delete 2>/dev/null ||
        true

        find automation/analytics -name "*.html" -mtime +7 -delete 2>/dev/null ||
        true

        find automation/analytics -name "*.csv" -mtime +7 -delete 2>/dev/null || true


        # Remove old backup directories (older than 3 days)

        find automation/backups -type d -mtime +3 -exec rm -rf {} + 2>/dev/null ||
        true


        # Remove old optimization reports (older than 5 days)

        find automation/optimization -name "*.json" -mtime +5 -delete 2>/dev/null
        || true


        # Remove old deployment reports (older than 3 days)

        find automation/deployments -name "*.json" -mtime +3 -delete 2>/dev/null ||
        true


        # Remove old update pages (older than 7 days)

        find pages/reports -name "*.md" -mtime +7 -delete 2>/dev/null || true

        '
      - name: Clean up build artifacts
        run: '# Remove build artifacts

        rm -rf .next out tsconfig.tsbuildinfo 2>/dev/null || true

        rm -rf node_modules/.cache 2>/dev/null || true

        '
      - name: Clean up git state
        run: 'git config --global user.name "github-actions[bot]"

        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"


        # Clean up any existing rebase state

        git rebase --abort 2>/dev/null || true

        rm -rf .git/rebase-merge .git/rebase-apply 2>/dev/null || true


        # Reset to clean state

        git reset --hard HEAD

        git clean -fd

        '
      - name: Commit cleanup changes
        run: "if [[ -n \"$(git status --porcelain)\" ]]; then\n  git add -A\n  git commit\
        \ -m \"chore: cleanup old files and artifacts [skip ci]\"\n  git push\nelse\n\
        \  echo \"No cleanup changes to commit\"\nfi\n"
