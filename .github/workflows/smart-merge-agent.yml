---
name: Smart Merge Agent

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: write
  actions: read

concurrency:
  group: smart-merge-agent-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  smart-merge:
    name: Smart Merge Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Run smart merge analysis
        run: |
          echo "Smart merge agent analyzing PR #${{ github.event.pull_request.number }}"
          echo "Branch: ${{ github.head_ref }}"
          echo "Base: ${{ github.base_ref }}"
          
          # Check for merge conflicts
          git fetch origin ${{ github.base_ref }}
          if git merge-tree $(git merge-base HEAD origin/${{ github.base_ref }}) HEAD origin/${{ github.base_ref }} | grep -q "<<<<<<<"; then
            echo "‚ùå Merge conflicts detected"
            exit 1
          else
            echo "‚úÖ No merge conflicts detected"
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Smart Merge Agent')
            );
            
            const message = `ü§ñ **Smart Merge Agent Report**
            
            ‚úÖ **Status**: Ready for merge
            üìù **Analysis**: No conflicts detected
            üöÄ **Recommendation**: Safe to proceed with merge
            
            *This analysis was performed automatically by the Smart Merge Agent.*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: message
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
            }