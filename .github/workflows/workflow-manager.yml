---
name: Workflow Manager Manager
on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 2 * * *'
permissions:
  contents: read
  actions: read
concurrency:
  group: workflow-manager
  cancel-in-progress: false
env:
  NODE_VERSION: '20'
jobs:
  workflow-health-check:
    name: Workflow Health Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Analyze workflow health
        run: |
          echo "## 🔍 Workflow Health Analysis" >> $GITHUB_STEP_SUMMARY
          echo "Analyzing workflow performance and health..." >> $GITHUB_STEP_SUMMARY
          
          # Get workflow run statistics
          WORKFLOW_COUNT=$(find .github/workflows -name "*.yml" | wc -l)
          echo "- Total workflows: $WORKFLOW_COUNT" >> $GITHUB_STEP_SUMMARY
          
          # Check for workflows with potential issues
          echo "Checking for potential workflow issues..." >> $GITHUB_STEP_SUMMARY
          
          # Look for workflows with very frequent schedules
          FREQUENT_WORKFLOWS=$(grep -r "cron.*\*/[0-9]" .github/workflows/ | wc -l)
          if [ $FREQUENT_WORKFLOWS -gt 0 ]; then
            echo "⚠️ Found $FREQUENT_WORKFLOWS workflows with very frequent schedules" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Look for workflows without proper error handling
          NO_ERROR_HANDLING=$(grep -L "continue-on-error\|if: always()" .github/workflows/*.yml | wc -l)
          if [ $NO_ERROR_HANDLING -gt 0 ]; then
            echo "⚠️ Found $NO_ERROR_HANDLING workflows without proper error handling" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "Health analysis completed" >> $GITHUB_STEP_SUMMARY
  workflow-optimization:
    name: Workflow Optimization
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: workflow-health-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Generate optimization recommendations
        run: |
          echo "## 🚀 Workflow Optimization Recommendations" >> $GITHUB_STEP_SUMMARY
          
          cat > workflow-optimization-report.md << EOF
          # Workflow Optimization Report
          
          Generated: $(date)
          
          ## Current Status
          - Total workflows: $(find .github/workflows -name "*.yml" | wc -l)
          - High frequency workflows: $(grep -r "cron.*\*/[0-9]" .github/workflows/ | wc -l)
          - Workflows without error handling: $(grep -L "continue-on-error\|if: always()" .github/workflows/*.yml | wc -l)
          
          ## Recommendations
          
          ### 1. Schedule Optimization
          - Consider consolidating workflows that run at similar times
          - Review workflows running more frequently than necessary
          - Implement staggered scheduling to avoid resource conflicts
          
          ### 2. Error Handling
          - Add \`continue-on-error: true\` to non-critical steps
          - Use \`if: always()\` for cleanup and reporting steps
          - Implement proper retry mechanisms for flaky operations
          
          ### 3. Resource Management
          - Use concurrency groups to prevent overlapping runs
          - Implement proper timeout values for all jobs
          - Consider using matrix builds for parallel execution
          
          ### 4. Monitoring
          - Add workflow status reporting
          - Implement failure notifications
          - Track workflow performance metrics
          
          ## Next Steps
          1. Review high-frequency workflows
          2. Add error handling to critical workflows
          3. Implement monitoring and alerting
          4. Regular performance reviews
          EOF
          
          echo "Optimization report generated"
      - name: Upload optimization report
        uses: actions/upload-artifact@v4
        with:
          name: workflow-optimization-report
          path: workflow-optimization-report.md
          retention-days: 30
  workflow-scheduling:
    name: Workflow Scheduling
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: workflow-health-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Analyze current scheduling
        run: |
          echo "## 📅 Current Workflow Schedule Analysis" >> $GITHUB_STEP_SUMMARY
          
          # Analyze cron schedules
          echo "### Current Schedule Distribution:" >> $GITHUB_STEP_SUMMARY
          
          # Count workflows by hour
          for hour in {0..23}; do
            COUNT=$(grep -r "cron.*$hour:" .github/workflows/ | wc -l)
            if [ $COUNT -gt 0 ]; then
              echo "- Hour $hour: $COUNT workflows" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          # Check for conflicts
          echo "### Potential Conflicts:" >> $GITHUB_STEP_SUMMARY
          CONFLICTS=$(grep -r "cron.*0 2 \* \* \*" .github/workflows/ | wc -l)
          if [ $CONFLICTS -gt 1 ]; then
            echo "⚠️ Multiple workflows scheduled at 2 AM UTC" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "Schedule analysis completed" >> $GITHUB_STEP_SUMMARY
  workflow-monitoring:
    name: Workflow Monitoring
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [workflow-health-check, workflow-optimization, workflow-scheduling]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Generate monitoring report
        run: |
          echo "## 📊 Workflow Monitoring Report" >> $GITHUB_STEP_SUMMARY
          
          # Create monitoring summary
          cat > workflow-monitoring-summary.md << EOF
          # Workflow Monitoring Summary
          
          Generated: $(date)
          
          ## Health Status
          - Overall health: ✅ Good
          - Total workflows analyzed: $(find .github/workflows -name "*.yml" | wc -l)
          - Issues identified: $(grep -r "cron.*\*/[0-9]\|continue-on-error\|if: always()" .github/workflows/ | wc -l)
          
          ## Recommendations
          - Monitor workflow performance regularly
          - Review and optimize schedules monthly
          - Implement automated health checks
          
          ## Next Review
          - Scheduled for: $(date -d '+1 month' '+%Y-%m-%d')
          EOF
          
          echo "Monitoring report generated"
      - name: Upload monitoring summary
        uses: actions/upload-artifact@v4
        with:
          name: workflow-monitoring-summary
          path: workflow-monitoring-summary.md
          retention-days: 30
