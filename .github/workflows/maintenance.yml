---
name: Repository Maintenance
on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 2 * * 0
permissions:
  contents: write
  pull-requests: write
  actions: read
concurrency:
  group: maintenance
  cancel-in-progress: false
env:
  NODE_VERSION: '20'
jobs:
  cleanup-artifacts:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Clean up old automation files
        run: |
          echo "Cleaning up old automation artifacts..."
          
          
                  # Clean up old analytics files (older than 7 days)
          
                  find automation/analytics -name "*.json" -mtime +7 -delete 2>/dev/null ||
                  true
          
                  find automation/analytics -name "*.html" -mtime +7 -delete 2>/dev/null ||
                  true
          
                  find automation/analytics -name "*.csv" -mtime +7 -delete 2>/dev/null || true
          
          
                  # Clean up old backup directories (older than 3 days)
          
                  find automation/backups -type d -mtime +3 -exec rm -rf {} + 2>/dev/null ||
                  true
          
          
                  # Clean up old optimization reports (older than 5 days)
          
                  find automation/optimization -name "*.json" -mtime +5 -delete 2>/dev/null
                  || true
          
          
                  # Clean up old deployment reports (older than 3 days)
          
                  find automation/deployments -name "*.json" -mtime +3 -delete 2>/dev/null ||
                  true
          
          
                  echo "Cleanup completed"
          
      - name: Commit cleanup changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          if git diff --quiet; then
            echo "No changes to commit"
          else
            git add -A
            git commit -m "🤖 Automated cleanup: Remove old artifacts and reports [skip ci]"
            git push
          fi
  optimize-workflows:
    name: Optimize Workflows
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Analyze workflow performance
        run: |
          echo "## Workflow Performance Analysis" >> $GITHUB_STEP_SUMMARY
          echo "Analyzing workflow performance and optimization opportunities..." >> $GITHUB_STEP_SUMMARY
          
          # Count total workflows
          WORKFLOW_COUNT=$(find .github/workflows -name "*.yml" | wc -l)
          echo "- Total workflows: $WORKFLOW_COUNT" >> $GITHUB_STEP_SUMMARY
          
          # Check for duplicate workflows
          DUPLICATES=$(find .github/workflows -name "*.yml" -exec basename {} \; | sort | uniq -d | wc -l)
          echo "- Potential duplicates: $DUPLICATES" >> $GITHUB_STEP_SUMMARY
          
          # Check for workflows with high frequency schedules
          HIGH_FREQ=$(grep -r "cron.*\*/[0-9]" .github/workflows/ | wc -l)
          echo "- High frequency workflows: $HIGH_FREQ" >> $GITHUB_STEP_SUMMARY
          
          echo "Analysis completed" >> $GITHUB_STEP_SUMMARY
      - name: Generate workflow health report
        run: |
          echo "Generating workflow health report..."
          
          cat > workflow-health-report.md << EOF
          # Workflow Health Report
          
          Generated: $(date)
          
          ## Summary
          - Total workflows: $(find .github/workflows -name "*.yml" | wc -l)
          - Last run: $(date)
          
          ## Recommendations
          - Consider consolidating similar workflows
          - Review scheduling frequencies
          - Ensure proper error handling
          - Monitor resource usage
          EOF
          
          echo "Health report generated"
      - name: Upload health report
        uses: actions/upload-artifact@v4
        with:
          name: workflow-health-report
          path: workflow-health-report.md
          retention-days: 7
  dependency-maintenance:
    name: Dependency Maintenance
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Check for outdated dependencies
        run: |
          echo "Checking for outdated dependencies..."
          # Generate dependency report
          npm outdated --depth=0 > dependency-report.txt 2>&1 || echo "All packages are up to date" > dependency-report.txt
          # Check for security vulnerabilities
          npm audit --audit-level=high > security-report.txt 2>&1 || echo "No high severity vulnerabilities found" > security-report.txt
          echo "Dependency analysis completed"
      - name: Upload dependency reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-reports
          path: |
            dependency-report.txt
            security-report.txt
          retention-days: 7
  maintenance-summary:
    name: Maintenance Summary
    runs-on: ubuntu-latest
    needs:
    - cleanup-artifacts
    - optimize-workflows
    - dependency-maintenance
    if: always()
    steps:
      - name: Generate maintenance summary
        run: |
          echo "## 🧹 Repository Maintenance Complete" >> $GITHUB_STEP_SUMMARY
          echo "- Cleanup: ${{ needs.cleanup-artifacts.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Optimization: ${{ needs.optimize-workflows.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dependencies: ${{ needs.dependency-maintenance.result }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.cleanup-artifacts.result }}" == "success" ] && [ "${{ needs.optimize-workflows.result }}" == "success" ] && [ "${{ needs.dependency-maintenance.result }}" == "success" ]; then
            echo "✅ All maintenance tasks completed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Some maintenance tasks failed. Check the logs for details." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Next maintenance run: Sunday at 2 AM" >> $GITHUB_STEP_SUMMARY
    timeout-minutes: 30
