name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # The build and dependency installation are handled by Netlify's build process,
      # which uses scripts/optimized-build.cjs.
      # This workflow will now focus on Sentry release creation, assuming Netlify
      # has successfully built and deployed this commit from the 'main' branch.

      # It's important that Sentry has access to the sourcemaps generated by the Netlify build.
      # One way is to download them from Netlify if possible, or ensure this workflow
      # can access the same commit and rebuild (less ideal) or point to a source map hosting location.
      # For getsentry/action-release to work with './.next' it implies this job
      # needs to have the build artifacts.
      # If Netlify builds, these artifacts aren't here by default.

      # Option 1: Rebuild here just for sourcemaps (can be slow/resource-intensive)
      # This is the simplest to implement if direct artifact download from Netlify is complex.
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies (for Sentry CLI and potential build step)
        run: npm ci
      - name: Build application (to generate sourcemaps for Sentry)
        env:
          # Mimic Netlify's production environment as much as possible for consistent sourcemaps
          # These are illustrative; actual values might need to match netlify.toml production context
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: '1'
          # Add other critical NEXT_PUBLIC_ vars if they affect sourcemap generation or IDs
        run: npm run build # This uses the standard build, not the full optimized-build.cjs

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: zion-holdings # Make sure this is your Sentry org slug
          SENTRY_PROJECT: javascript-nextjs # Make sure this is your Sentry project slug
        with:
          environment: production
          sourcemaps: # Path to sourcemaps
            - './.next/**/*.js.map'
            - './.next/static/**/*.js.map' # Common locations for Next.js sourcemaps
          url_prefix: '~/_next' # Adjust if your assets are served from a different base path e.g. /_next or cdn
          # version: ${{ github.sha }} # Explicitly set version, defaults to github.sha
          set_commits: auto # Automatically associate commits with the release
          # deploy: # Optional: if you want to mark the release as deployed in Sentry
          # env: production
          # started_at: ${{ steps.start_time.outputs.time }} # Requires a step to output current time
          # name: "Netlify Production Deployment"

      # Consider adding a step here to notify a channel (e.g., Slack) about the new Sentry release.
      # Additional post-deployment steps (not directly Netlify deployment) can go here.
