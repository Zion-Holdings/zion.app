name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: {}
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM

permissions:
  contents: read
  actions: read

concurrency:
  group: "test-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application for testing
        run: npm run build
        env:
          NODE_OPTIONS: "--max-old-space-size=6144 --openssl-legacy-provider"

      - name: Start application
        run: npm run start &
        env:
          NODE_OPTIONS: "--max-old-space-size=6144 --openssl-legacy-provider"

      - name: Wait for application to start
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000 >/dev/null 2>&1; do sleep 2; done'

      - name: Run Playwright tests
        run: npx playwright test --reporter=html
        env:
          BASE_URL: http://localhost:3000

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: Upload test screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-screenshots
          path: test-results/
          retention-days: 7

        timeout-minutes: 2

      - name: Run Playwright tests
        run: npx playwright test --reporter=html
        env:
          BASE_URL: ${{ env.BASE_URL }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: Upload test screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-screenshots
          path: test-results/
          retention-days: 3

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()
    steps:
      - name: Generate test summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Tests: ${{ needs.integration-tests.result }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.unit-tests.result }}" == "success" ] && [ "${{ needs.integration-tests.result }}" == "success" ]; then
            echo "✅ All tests passed!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some tests failed. Check the logs for details." >> $GITHUB_STEP_SUMMARY
          fi
