name: 🧪 Testing Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - e2e
          - performance
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM

permissions:
  contents: read
  pull-requests: write
  actions: read

concurrency:
  group: "testing-${{ github.ref }}"
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  NPM_CACHE_KEY: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

jobs:
  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline

      - name: 🧪 Run unit tests
        run: |
          echo "Running unit tests..."
          npm run test:unit || npm run test || echo "No unit test script found"
        continue-on-error: true

      - name: 📊 Unit test results
        if: always()
        run: |
          echo "✅ Unit tests completed"
          echo "📋 Job: ${{ job.name }}"
          echo "🔗 Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  integration-tests:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: unit-tests
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline

      - name: 🔗 Run integration tests
        run: |
          echo "Running integration tests..."
          npm run test:integration || echo "No integration test script found"
        continue-on-error: true

      - name: 📊 Integration test results
        if: always()
        run: |
          echo "✅ Integration tests completed"
          echo "📋 Job: ${{ job.name }}"
          echo "🔗 Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  e2e-tests:
    name: 🌐 End-to-End Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [unit-tests, integration-tests]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline

      - name: 🌐 Run E2E tests
        run: |
          echo "Running end-to-end tests..."
          npm run test:e2e || npm run test:cypress || echo "No E2E test script found"
        continue-on-error: true

      - name: 📊 E2E test results
        if: always()
        run: |
          echo "✅ E2E tests completed"
          echo "📋 Job: ${{ job.name }}"
          echo "🔗 Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  performance-tests:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [unit-tests, integration-tests]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline

      - name: ⚡ Run performance tests
        run: |
          echo "Running performance tests..."
          npm run test:performance || npm run lighthouse || echo "No performance test script found"
        continue-on-error: true

      - name: 📊 Performance test results
        if: always()
        run: |
          echo "✅ Performance tests completed"
          echo "📋 Job: ${{ job.name }}"
          echo "🔗 Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  test-coverage:
    name: 📊 Test Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [unit-tests, integration-tests, e2e-tests]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline

      - name: 📊 Generate coverage report
        run: |
          echo "Generating test coverage report..."
          npm run test:coverage || npm run coverage || echo "No coverage script found"
        continue-on-error: true

      - name: 📤 Upload coverage artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-coverage
          path: |
            coverage/
            .nyc_output/
            *.lcov
          retention-days: 30

      - name: 📊 Coverage results
        if: always()
        run: |
          echo "✅ Test coverage completed"
          echo "📋 Job: ${{ job.name }}"
          echo "🔗 Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  test-summary:
    name: 📋 Testing Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests, performance-tests, test-coverage]
    if: always()
    
    steps:
      - name: 📊 Generate testing summary
        run: |
          echo "🧪 Testing Suite Summary"
          echo "========================"
          echo "📅 Run: $(date)"
          echo "🔗 Workflow: ${{ github.workflow }}"
          echo "🔗 Run ID: ${{ github.run_id }}"
          echo "🔗 Commit: ${{ github.sha }}"
          echo "🔗 Branch: ${{ github.ref_name }}"
          echo ""
          echo "📋 Test Results:"
          echo "✅ Unit Tests: ${{ needs.unit-tests.result }}"
          echo "✅ Integration Tests: ${{ needs.integration-tests.result }}"
          echo "✅ E2E Tests: ${{ needs.e2e-tests.result }}"
          echo "✅ Performance Tests: ${{ needs.performance-tests.result }}"
          echo "✅ Test Coverage: ${{ needs.test-coverage.result }}"
          echo ""
          if [[ "${{ needs.unit-tests.result }}" == "success" && "${{ needs.integration-tests.result }}" == "success" ]]; then
            echo "🎉 Core testing passed! Application is ready for deployment."
          else
            echo "⚠️ Some test suites failed. Please review the logs above."
          fi

      - name: 📤 Upload testing summary
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: testing-summary
          path: |
            testing-summary.txt
          retention-days: 30
