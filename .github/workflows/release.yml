name: Release Management

on:
  workflow_dispatch: {}
  schedule:
    - cron: '*/10 * * * *'

permissions:
  contents: write
  actions: read

jobs:
  main:
    name: Main Job
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Determine version
              id: version
              run: |
                if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
                  echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
                else
                  echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
                fi
            - name: Update package.json version
              run: |
                npm version ${{ steps.version.outputs.version }} --no-git-tag-version
                echo "Updated to version ${{ steps.version.outputs.version }}"
            - name: Generate changelog
              run: |
                node automation/ai-changelog-generator.cjs || true
                node automation/changelog-generator.cjs || true
            - name: Build application
              run: |
                npm run build
                npm run export
            - name: Run tests
              run: |
                npm test
                npm run test:integration || true
            - name: Create release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: v${{ steps.version.outputs.version }}
                release_name: Release v${{ steps.version.outputs.version }}
                body_path: CHANGELOG.md
                draft: false
                prerelease: false
            - name: Upload release assets
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: ./out
                asset_name: zion-app-v${{ steps.version.outputs.version }}.zip
                asset_content_type: application/zip
            name: production
            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Build for production
              run: |
                npm run build
                npm run export
            - name: Deploy to Netlify
              uses: nwtgck/actions-netlify@v2.0
              with:
                publish-dir: './out'
                production-branch: main
                github-token: ${{ secrets.GITHUB_TOKEN }}
                deploy-message: "Release v${{ steps.version.outputs.version }}"
                enable-pull-request-comment: false
                enable-commit-comment: false
            - name: Notify deployment
              run: |
                echo "ðŸš€ Release v${{ steps.version.outputs.version }} deployed successfully!"
                echo "URL: ${{ steps.deploy.outputs.url }}"
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Update documentation
              run: |
                node scripts/generate-readme.js || true
                node automation/docs-intelligence-generator.cjs || true
            - name: Update sitemap
              run: |
                node scripts/generate-sitemap.js || true
                node scripts/generate-search-index.js || true
            - name: Commit documentation updates
              run: |
                if [ -n "$(git status --porcelain)" ]; then
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git add -A
                  git commit -m "docs: update documentation for v${{ steps.version.outputs.version }} [skip ci]"
                  git push origin HEAD:$(git rev-parse --abbrev-ref HEAD)
                fi
            - name: Notify completion
              run: |
                echo "âœ… Post-release tasks completed for v${{ steps.version.outputs.version }}"
      - name: Checkout repository
      - name: Setup Node.js
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Determine version
              id: version
              run: |
                if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
                  echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
                else
                  echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
                fi
            - name: Update package.json version
              run: |
                npm version ${{ steps.version.outputs.version }} --no-git-tag-version
                echo "Updated to version ${{ steps.version.outputs.version }}"
            - name: Generate changelog
              run: |
                node automation/ai-changelog-generator.cjs || true
                node automation/changelog-generator.cjs || true
            - name: Build application
              run: |
                npm run build
                npm run export
            - name: Run tests
              run: |
                npm test
                npm run test:integration || true
            - name: Create release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: v${{ steps.version.outputs.version }}
                release_name: Release v${{ steps.version.outputs.version }}
                body_path: CHANGELOG.md
                draft: false
                prerelease: false
            - name: Upload release assets
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: ./out
                asset_name: zion-app-v${{ steps.version.outputs.version }}.zip
                asset_content_type: application/zip
            name: production
            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Build for production
              run: |
                npm run build
                npm run export
            - name: Deploy to Netlify
              uses: nwtgck/actions-netlify@v2.0
              with:
                publish-dir: './out'
                production-branch: main
                github-token: ${{ secrets.GITHUB_TOKEN }}
                deploy-message: "Release v${{ steps.version.outputs.version }}"
                enable-pull-request-comment: false
                enable-commit-comment: false
            - name: Notify deployment
              run: |
                echo "ðŸš€ Release v${{ steps.version.outputs.version }} deployed successfully!"
                echo "URL: ${{ steps.deploy.outputs.url }}"
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Update documentation
              run: |
                node scripts/generate-readme.js || true
                node automation/docs-intelligence-generator.cjs || true
            - name: Update sitemap
              run: |
                node scripts/generate-sitemap.js || true
                node scripts/generate-search-index.js || true
            - name: Commit documentation updates
              run: |
                if [ -n "$(git status --porcelain)" ]; then
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git add -A
                  git commit -m "docs: update documentation for v${{ steps.version.outputs.version }} [skip ci]"
                  git push origin HEAD:$(git rev-parse --abbrev-ref HEAD)
                fi
            - name: Notify completion
              run: |
                echo "âœ… Post-release tasks completed for v${{ steps.version.outputs.version }}"
