name: Autonomous Auto-Fix
true:
  schedule:
  - cron: '*/30 * * * *'
  workflow_dispatch: null
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
permissions:
  contents: write
  pull-requests: write
jobs:
  auto-fix:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: npm
    - name: Install dependencies
      run: npm ci
    - name: Run auto-fixers
      run: 'npm run fix:all || true

        npm run type-check || true

        '
    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore(auto-fix): apply automated fixes'
        title: 'chore(auto-fix): automated fixes'
        body: 'Automated fixes from CI.


          - ESLint --fix

          - TypeScript syntax and common error corrections

          - Template recovery for corrupted TS/TSX files

          '
        branch: automation/auto-fix
        delete-branch: true
        signoff: false
        labels: 'automation

          auto-merge

          '
    - name: Enable Auto-merge
      if: steps.cpr.outputs.pull-request-number
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
        merge-method: squash
    - name: Attempt immediate merge
      if: steps.cpr.outputs.pull-request-number
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: "const pr = Number(core.getInput('pr'))\ntry {\n  await github.pulls.merge({\n\
          \    owner: context.repo.owner,\n    repo: context.repo.repo,\n    pull_number:\
          \ pr,\n    merge_method: 'squash'\n  })\n} catch (e) {\n  core.info(`Merge\
          \ not completed yet: ${e.message}`)\n}\n"
        result-encoding: string
        inputs: 'pr: ${{ steps.cpr.outputs.pull-request-number }}'
    timeout-minutes: 30
concurrency:
  group: auto-fix.yml-${{ github.ref }}
  cancel-in-progress: true
