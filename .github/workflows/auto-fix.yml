---
name: Autonomous Auto-Fix
on:
  workflow_dispatch: null
  schedule:
    - cron: 0 2 * * *
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
permissions:
  contents: write
  pull-requests: write
concurrency:
  group: auto-fix.yml-${{ github.ref }}
  cancel-in-progress: true
jobs:
  auto-fix:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run auto-fixers
        run: |
          npm run fix:all || true
          npm run type-check || true
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(auto-fix): apply automated fixes'
          title: 'chore(auto-fix): automated fixes'
          body: |
            Automated fixes from CI.
            
            - ESLint --fix
            - TypeScript syntax and common error corrections
            - Template recovery for corrupted TS/TSX files
          branch: automation/auto-fix
          delete-branch: true
          signoff: false
          labels: |
            automation
            auto-merge
      - name: Enable Auto-merge
        if: steps.cpr.outputs.pull-request-number
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
      - name: Attempt immediate merge
        if: steps.cpr.outputs.pull-request-number
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = ${{ steps.cpr.outputs.pull-request-number }}
            try {
              await github.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr,
                merge_method: 'squash'
              })
            } catch (e) {
              core.info(`Merge not completed yet: ${e.message}`)
            }
