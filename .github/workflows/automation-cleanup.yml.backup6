name: Automation Cleanup

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  cleanup:
    name: Cleanup Automation Artifacts
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Clean git state
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Clean up any existing rebase state
          git rebase --abort 2>/dev/null || true
          rm -rf .git/rebase-merge .git/rebase-apply 2>/dev/null || true
          # Reset to clean state
          git reset --hard HEAD
          git clean -fd

      - name: Cleanup old analytics files (7 days)
        run: |
          find . -name "*.analytics.json" -mtime +7 -delete 2>/dev/null || true
          find . -name "*.analytics.csv" -mtime +7 -delete 2>/dev/null || true
          echo "Cleaned up analytics files older than 7 days"

      - name: Cleanup backup directories (3 days)
        run: |
          find . -name "*.backup*" -mtime +3 -delete 2>/dev/null || true
          find . -name "backup-*" -type d -mtime +3 -exec rm -rf {} + 2>/dev/null || true
          echo "Cleaned up backup files older than 3 days"

      - name: Cleanup optimization reports (5 days)
        run: |
          find . -name "*optimization*.json" -mtime +5 -delete 2>/dev/null || true
          find . -name "*performance*.json" -mtime +5 -delete 2>/dev/null || true
          echo "Cleaned up optimization reports older than 5 days"

      - name: Cleanup deployment reports (3 days)
        run: |
          find . -name "*deployment*.json" -mtime +3 -delete 2>/dev/null || true
          find . -name "*build*.log" -mtime +3 -delete 2>/dev/null || true
          echo "Cleaned up deployment reports older than 3 days"

      - name: Cleanup update pages (7 days)
        run: |
          find . -name "*update*.md" -mtime +7 -delete 2>/dev/null || true
          find . -name "*changelog*.md" -mtime +7 -delete 2>/dev/null || true
          echo "Cleaned up update pages older than 7 days"

      - name: Cleanup temporary files
        run: |
          find . -name "*.tmp" -delete 2>/dev/null || true
          find . -name "*.temp" -delete 2>/dev/null || true
          find . -name "temp_*" -delete 2>/dev/null || true
          echo "Cleaned up temporary files"

      - name: Commit cleanup changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore(cleanup): automated artifact cleanup [skip ci]"
            git push origin HEAD:$(git rev-parse --abbrev-ref HEAD)
          else
            echo "No cleanup changes to commit"
          fi

      - name: Report cleanup summary
        run: |
          echo "=== Cleanup Summary ==="
          echo "Analytics files: $(find . -name "*.analytics.*" | wc -l | tr -d ' ')"
          echo "Backup files: $(find . -name "*.backup*" | wc -l | tr -d ' ')"
          echo "Optimization reports: $(find . -name "*optimization*.json" | wc -l | tr -d ' ')"
          echo "Deployment reports: $(find . -name "*deployment*.json" | wc -l | tr -d ' ')"
          echo "Update pages: $(find . -name "*update*.md" | wc -l | tr -d ' ')"
          echo "Temporary files: $(find . -name "*.tmp" | wc -l | tr -d ' ')"
