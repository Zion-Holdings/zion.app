name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Python
        if: hashFiles('backend/requirements.txt') != ''
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache pip dependencies
        if: hashFiles('backend/requirements.txt') != ''
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - run: npm ci
      - name: Install Python dependencies
        if: hashFiles('backend/requirements.txt') != ''
        run: pip install -r backend/requirements.txt

      - run: npm run lint
      - run: npm run test
      - run: npm run build

      - name: Run Django Checks
        if: hashFiles('backend/requirements.txt') != ''
        run: python backend/manage.py check

      - name: Trigger Netlify build
        if: success()
        run: |
          curl -X POST -d '{}' "$NETLIFY_BUILD_HOOK_URL"
        env:
          NETLIFY_BUILD_HOOK_URL: ${{ secrets.NETLIFY_BUILD_HOOK_URL }}

      - name: Notify Slack on failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"CI failed for ${{ github.repository }}"}' \
            "$SLACK_WEBHOOK_URL"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
