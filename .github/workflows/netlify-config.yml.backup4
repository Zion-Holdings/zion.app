name: Configure Netlify Rerun Chain

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch for the build hook"
        required: true
        default: "main"
      trigger_after_config:
        description: "Trigger the build hook once after setting env"
        required: false
        default: "false"

permissions:
  contents: read

jobs:
  setup-netlify:
    runs-on: ubuntu-latest
      timeout-minutes: 15
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate secrets
        run: |
          test -n "$NETLIFY_AUTH_TOKEN" || { echo "Missing NETLIFY_AUTH_TOKEN secret"; exit 1; }
          test -n "$NETLIFY_SITE_ID" || { echo "Missing NETLIFY_SITE_ID secret"; exit 1; }

      - name: Install dependencies
        run: |
          sudo npm i -g netlify-cli
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Ensure build hook exists (post-function-rerun)
        id: hook
        env:
          BRANCH: ${{ github.event.inputs.branch }}
        run: |
          set -euo pipefail
          API=https://api.netlify.com/api/v1

          # Try to find existing hook by name
          existing=$(curl -sS -H "Authorization: Bearer $NETLIFY_AUTH_TOKEN" "$API/sites/$NETLIFY_SITE_ID/build_hooks" | jq -r '.[] | select(.name=="post-function-rerun") | .id' | head -n1 || true)
          if [ -n "$existing" ]; then
            echo "Found existing build hook id=$existing"
            id="$existing"
          else
            echo "Creating build hook..."
            id=$(curl -sS -X POST \
              -H "Authorization: Bearer $NETLIFY_AUTH_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"branch\":\"$BRANCH\",\"title\":\"post-function-rerun\"}" \
              "$API/sites/$NETLIFY_SITE_ID/build_hooks" | jq -r '.id')
            if [ -z "$id" ] || [ "$id" = "null" ]; then
              echo "Failed to create build hook"; exit 1;
            fi
            echo "Created build hook id=$id"
          fi

          hook_url="https://api.netlify.com/build_hooks/$id"
          echo "hook_url=$hook_url" >> $GITHUB_OUTPUT

      - name: Set BUILD_HOOK_URL env var on Netlify site
        run: |
          set -euo pipefail
          HOOK_URL="${{ steps.hook.outputs.hook_url }}"
          echo "Configuring BUILD_HOOK_URL=$HOOK_URL"
          netlify env:set BUILD_HOOK_URL "$HOOK_URL" --site "$NETLIFY_SITE_ID" --auth "$NETLIFY_AUTH_TOKEN"

      - name: Optionally trigger the build hook
        if: ${{ github.event.inputs.trigger_after_config == 'true' }}
        run: |
          curl -sS -X POST "${{ steps.hook.outputs.hook_url }}" -H 'Content-Type: application/json' -d '{"NETLIFY_RERUN_CHAIN":"1","reason":"post-function-rerun"}'