name: Auto PR on Branch Push

on:
  push:
    branches-ignore:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create or update PR to main and add automerge label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const headRef = process.env.GITHUB_REF.replace('refs/heads/', '')
            if (headRef === 'main') {
              core.info('On main, skipping')
              return
            }

            const owner = context.repo.owner
            const repo = context.repo.repo

            async function ensurePr() {
              // Check if an open PR already exists
              const prs = await github.paginate(github.pulls.list, {
                owner,
                repo,
                head: `${owner}:${headRef}`,
                base: 'main',
                state: 'open',
                per_page: 100
              })
              let pr = prs[0]

              if (!pr) {
                // Create a new PR
                const created = await github.pulls.create({
                  owner,
                  repo,
                  title: `ci(auto): merge ${headRef} into main`,
                  head: headRef,
                  base: 'main',
                  body: [
                    'Automated PR opened on branch push.',
                    '',
                    '- Auto-labeled for automerge',
                    '- Relies on existing CI and automerge workflows'
                  ].join('\n')
                })
                pr = created.data
              }

              // Add automerge label (idempotent)
              try {
                await github.issues.addLabels({
                  owner,
                  repo,
                  issue_number: pr.number,
                  labels: ['automerge']
                })
              } catch (e) {
                core.info(`Label add failed or already present: ${e.message}`)
              }

              core.setOutput('pr-number', pr.number)
            }

            await ensurePr()