name: Performance Audit

on:
permissions:
  contents: read
  actions: read
  schedule:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
    - cron: '0 0 * * *'
  workflow_dispatch:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"

  contents: read
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
  issues: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"

concurrency:
  group: "performance-audit
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
  cancel-in-progress: true
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"

jobs:

  lighthouse:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
      SITE_URL: ${{ secrets.SITE_URL }}
      - name: Ensure SITE_URL present"
        run: |
          if [ -z "${SITE_URL}" ]; then
            echo "SITE_URL secret not set, skipping." && exit 0
          fi
      - name: Run Lighthouse
        uses: "treosh/lighthouse-ci-action@v11
          urls: |
            ${{ secrets.SITE_URL }}/
          uploadArtifacts: true
          temporaryPublicStorage: true
      - name: Basic score gate and issue
  if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
          SITE_URL: ${{ secrets.SITE_URL }}
          script: |"
            const core = require('@actions/core');
            const fs = require('fs');
            const glob = require('glob');
            try {
              const files = glob.sync('**/lighthouse-*.json');
              if (!files.length) return;
              const report = JSON.parse(fs.readFileSync(files[0], 'utf8'));
              const perf = Math.round((report.categories.performance.score || 0) * 100);
              if (perf < 80) {
                const title = `Performance regression: score ${perf}`;
                const body = `Lighthouse performance score for ${process.env.SITE_URL} is ${perf}. Please investigate.`;
                const { data: issues } = await github.rest.issues.listForRepo({ owner: context.repo.owner, repo: context.repo.repo, state: 'open' });
                if (!issues.find(i => i.title === title)) {
                  await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body, labels: ['performance','automation'] });
                }
              }
            } catch (e) {
              core.warning(`Failed to evaluate performance score: ${e.message}`);
            }