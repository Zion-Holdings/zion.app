name: Continuous Improvement

on:
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  improve:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run continuous improvement
        run: |
          npm run automation:improvement || true
          npm run diversify || true
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(improvement): continuous improvement + diversity results"
          title: "chore(improvement): apply continuous improvement and diversity results"
          body: |
            Automated improvement and diversity loop.

            - Runs automation:improvement orchestration
            - Runs diversification orchestrator
          branch: automation/continuous-improvement
          delete-branch: true
          signoff: false
          labels: |
            automation
            improvement
            auto-merge
      - name: Enable Auto-merge
        if: steps.cpr.outputs.pull-request-number
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
      - name: Attempt immediate merge
        if: steps.cpr.outputs.pull-request-number
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = Number(core.getInput('pr'))
            try {
              await github.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr,
                merge_method: 'squash'
              })
            } catch (e) {
              core.info(`Merge not completed yet: ${e.message}`)
            }
          result-encoding: string
          inputs: |
            pr: ${{ steps.cpr.outputs.pull-request-number }}
