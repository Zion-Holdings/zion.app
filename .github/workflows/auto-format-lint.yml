name: Auto Format and Lint

on:
  schedule:
    - cron: '0 2 * * *' # Runs daily at 2 AM UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  format-and-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for the script to push changes
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for git history and branching
          # To push to a branch, we might need a token with specific permissions
          # if the default GITHUB_TOKEN for the action doesn't suffice.
          # For pushing to the same repo, default GITHUB_TOKEN is usually fine if permissions are set at job level.
          # Using a specific PAT might be needed for pushing to a *different* repo or complex scenarios.
          # token: ${{ secrets.YOUR_PAT_IF_NEEDED }} # Only if default GITHUB_TOKEN is not enough

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Auto Formatter and Linter Script
        run: ./scripts/auto-lint-fix.js
        env:
          # The script configures git user itself.
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The script uses git commands directly.
                                                    # It needs git to be authenticated.
                                                    # The checkout action usually sets up http context for GITHUB_TOKEN.
                                                    # If pushing over SSH, SSH keys would be needed.
                                                    # For HTTPS pushes with GITHUB_TOKEN:
          GIT_AUTHOR_NAME: "GitHub Actions Bot"
          GIT_AUTHOR_EMAIL: "actions-bot@users.noreply.github.com" # Standard GH Actions bot email
          GIT_COMMITTER_NAME: "GitHub Actions Bot"
          GIT_COMMITTER_EMAIL: "actions-bot@users.noreply.github.com"
          # The script itself has GIT_USER_NAME and GIT_USER_EMAIL,
          # ensure they are either overridden by env or the script is modified
          # to use these standard GitHub Actions bot credentials.
          # For simplicity, the script's internal git config will be used,
          # but it should be updated to use a proper bot identity.

      # Optional: Create a Pull Request if changes were pushed to auto/fix-hourly
      # This can be added here or handled by a separate workflow listening to pushes on auto/fix-hourly
      # - name: Create Pull Request
      #   if: success() # Or check if the script indicated changes were pushed
      #   uses: peter-evans/create-pull-request@v6
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }} # Or a PAT
      #     commit-message: "chore: Automated ESLint and Prettier fixes"
      #     title: "Automated ESLint & Prettier Fixes"
      #     body: "Automated fixes applied by ESLint and Prettier. Please review and merge."
      #     branch: "auto/fix-hourly" # The branch pushed by the script
      #     base: "develop" # Or your main development branch
      #     labels: "automated pr, chore"
      #     delete-branch: true # Optional: delete the branch after merging
