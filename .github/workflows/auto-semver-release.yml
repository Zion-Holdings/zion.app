name: Auto Semver Release

on:
  schedule:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
    - cron: '0 0 * * *'
  workflow_dispatch: {}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"

  contents: write
  pull-requests: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
  id-token: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"

concurrency:
  group: auto-semver-release
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
  cancel-in-progress: true
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"

permissions:
  contents: read
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
  actions: read
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
jobs:

  release:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
      - name: Checkout
        uses: actions/checkout@v4
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4
          node-version: 20
          cache: npm
      - name: Install deps
        run: npm ci --no-audit --no-fund
      - name: Generate version and changelog
        id: sv
          npx -y conventional-recommended-bump -p conventionalcommits > .bump
          BUMP=$(cat .bump | tr -d '\n' | tr -d '\r')
          if [ -z "$BUMP" ]; then BUMP=patch; fi
          echo "Recommended bump: $BUMP"
          CURRENT=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT"
          NEW=$(npx -y semver $CURRENT -i $BUMP)
          echo "new_version=$NEW" >> $GITHUB_OUTPUT
          npx -y conventional-changelog -p conventionalcommits -r 2 > CHANGELOG.tmp.md
      - name: Update package.json version
        run: |
          NEW=${{ steps.sv.outputs.new_version }}"
          node -e "const fs=require('fs');const p=require('./package.json');p.version='${NEW}';fs.writeFileSync('package.json',JSON.stringify(p,null,2)+'\n')"
      - name: Commit version bump
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add package.json
            git commit -m "chore(release): v${{ steps.sv.outputs.new_version }} [skip ci]"
          fi
      - name: Tag and push
        run: |
          NEW=${{ steps.sv.outputs.new_version }}
          git tag v$NEW
          git push origin HEAD:$(git rev-parse --abbrev-ref HEAD) --tags
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
          tag_name: v${{ steps.sv.outputs.new_version }}
          name: v${{ steps.sv.outputs.new_version }}
          body_path: CHANGELOG.tmp.md
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
