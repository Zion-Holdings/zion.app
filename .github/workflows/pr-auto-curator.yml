name: PR Auto Curator

on:
  workflow_dispatch: {}
  schedule:
    - cron: '*/10 * * * *'

permissions:
  contents: write
  actions: read

jobs:
  main:
    name: Main Job
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

            - name: Checkout
              uses: actions/checkout@v4
            - name: Summarize PR and label
              uses: actions/github-script@v7
              with:
                script: |
                  const pr = context.payload.pull_request || (await github.pulls.get({ owner: context.repo.owner, repo: context.repo.repo, pull_number: context.issue.number })).data;
                  const files = await github.pulls.listFiles({ owner: context.repo.owner, repo: context.repo.repo, pull_number: pr.number, per_page: 200 });
                  const changed = files.data.map(f => `- ${f.status.toUpperCase()}: ${f.filename}`).join('\n');
                  const body = `Auto-curation summary for #${pr.number}:\n\nTitle: ${pr.title}\nAuthor: ${pr.user.login}\nCommits: ${pr.commits}\nAdditions/Deletions: +${pr.additions} / -${pr.deletions}\nFiles changed: ${pr.changed_files}\n\nChanged files:\n${changed}`;
                  await github.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number, body });
                  const labels = [];
                  if (pr.changed_files > 50) labels.push('size/XL');
                  else if (pr.changed_files > 20) labels.push('size/L');
                  else if (pr.changed_files > 10) labels.push('size/M');
                  else labels.push('size/S');
                  if (pr.draft) labels.push('status/draft');
                  await github.issues.addLabels({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number, labels });
      - name: Checkout repository
      - name: Setup Node.js
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
            - name: Checkout
              uses: actions/checkout@v4
            - name: Summarize PR and label
              uses: actions/github-script@v7
              with:
                script: |
                  const pr = context.payload.pull_request || (await github.pulls.get({ owner: context.repo.owner, repo: context.repo.repo, pull_number: context.issue.number })).data;
                  const files = await github.pulls.listFiles({ owner: context.repo.owner, repo: context.repo.repo, pull_number: pr.number, per_page: 200 });
                  const changed = files.data.map(f => `- ${f.status.toUpperCase()}: ${f.filename}`).join('\n');
                  const body = `Auto-curation summary for #${pr.number}:\n\nTitle: ${pr.title}\nAuthor: ${pr.user.login}\nCommits: ${pr.commits}\nAdditions/Deletions: +${pr.additions} / -${pr.deletions}\nFiles changed: ${pr.changed_files}\n\nChanged files:\n${changed}`;
                  await github.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number, body });
                  const labels = [];
                  if (pr.changed_files > 50) labels.push('size/XL');
                  else if (pr.changed_files > 20) labels.push('size/L');
                  else if (pr.changed_files > 10) labels.push('size/M');
                  else labels.push('size/S');
                  if (pr.draft) labels.push('status/draft');
                  await github.issues.addLabels({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number, labels });
