name: üñºÔ∏è Optimize Images

on:
  schedule:
    - cron: '15 5 * * 0'  # Weekly on Sunday at 5:15 AM
  workflow_dispatch:
    inputs:
      force_optimization:
        description: 'Force optimization even if no changes detected'
        required: false
        default: false
        type: boolean
  push:
    branches: [main, develop]
    paths:
      - 'public/images/**'
      - 'src/assets/**'
      - '.github/workflows/optimize-images.yml'

permissions:
  contents: write
  pull-requests: write
  actions: read

concurrency:
  group: optimize-images
  cancel-in-progress: true

jobs:
  optimize:
    name: Optimize Images
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install image optimization tools
        run: |
          npm install -g sharp imagemin imagemin-mozjpeg imagemin-pngquant imagemin-gifsicle imagemin-svgo

      - name: Find image files
        id: find-images
        run: |
          echo "image_files=$(find public src -type f \( -name '*.jpg' -o -name '*.jpeg' -o -name '*.png' -o -name '*.gif' -o -name '*.svg' -o -name '*.webp' \) | wc -l)" >> $GITHUB_OUTPUT
          echo "total_size=$(find public src -type f \( -name '*.jpg' -o -name '*.jpeg' -o -name '*.png' -o -name '*.gif' -o -name '*.svg' -o -name '*.webp' \) -exec du -ch {} + | tail -1 | cut -f1)" >> $GITHUB_OUTPUT

      - name: Optimize images
        run: |
          echo "üñºÔ∏è Starting image optimization..."
          echo "Found ${{ steps.find-images.outputs.image_files }} image files"
          echo "Total size: ${{ steps.find-images.outputs.total_size }}"
          
          # Create backup directory
          mkdir -p .image-backup
          
          # Optimize each image type
          find public src -type f -name "*.jpg" -o -name "*.jpeg" | while read file; do
            echo "Optimizing $file"
            cp "$file" ".image-backup/$(basename "$file")"
            sharp "$file" -o "$file" --quality 85
          done
          
          find public src -type f -name "*.png" | while read file; do
            echo "Optimizing $file"
            cp "$file" ".image-backup/$(basename "$file")"
            sharp "$file" -o "$file" --quality 85
          done

      - name: Calculate optimization results
        id: optimization-results
        run: |
          echo "optimized_count=$(find public src -type f \( -name '*.jpg' -o -name '*.jpeg' -o -name '*.png' -o -name '*.gif' -o -name '*.svg' -o -name '*.webp' \) | wc -l)" >> $GITHUB_OUTPUT
          echo "new_size=$(find public src -type f \( -name '*.jpg' -o -name '*.jpeg' -o -name '*.png' -o -name '*.gif' -o -name '*.svg' -o -name '*.webp' \) -exec du -ch {} + | tail -1 | cut -f1)" >> $GITHUB_OUTPUT

      - name: Commit optimized images
        if: steps.optimization-results.outputs.optimized_count > 0
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "üñºÔ∏è Optimize images - Automated optimization run" || echo "No changes to commit"
          git push origin HEAD:main || echo "Push failed or no changes"

      - name: Summary
        run: |
          echo "üéâ Image optimization completed!"
          echo "Original count: ${{ steps.find-images.outputs.image_files }}"
          echo "Optimized count: ${{ steps.optimization-results.outputs.optimized_count }}"
          echo "Original size: ${{ steps.find-images.outputs.total_size }}"
          echo "New size: ${{ steps.optimization-results.outputs.new_size }}"
          
          if [ "${{ steps.find-images.outputs.total_size }}" != "${{ steps.optimization-results.outputs.new_size }}" ]; then
            echo "‚úÖ Size reduction achieved!"
          else
            echo "‚ÑπÔ∏è No size reduction in this run"
          fi
