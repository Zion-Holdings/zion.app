name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: {}
  schedule:
    - cron: '0 6 * * *' # Daily at 6 AM UTC

permissions:
  contents: read
  actions: read
  security-events: write

concurrency:
  group: "security-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Run npm audit
        run: npm audit --audit-level=high --json > npm-audit.json
        continue-on-error: true

      - name: Run security scanner
        run: npm run security:scan
        continue-on-error: true

      - name: Check for secrets in code
        uses: trufflesecurity/trufflehog@main
        with:
          path: .
          base: ${{ github.event.before }}
          head: ${{ github.event.after }}
          extra_args: --only-verified
        continue-on-error: true

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true

      - name: Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report
          path: |
            npm-audit.json
            security-scan-results.json
            snyk-report.json
          retention-days: 30

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Check for outdated dependencies
        run: npm outdated --json > outdated-deps.json || echo "All packages are up to date" > outdated-deps.json

      - name: Check for vulnerable dependencies
        run: npm audit --json > audit-report.json || echo "No vulnerabilities found" > audit-report.json

      - name: Check for known vulnerabilities
        run: |
          echo "Checking for known vulnerabilities in dependencies..."
          npx audit-ci --moderate --report --format json > audit-ci-report.json || echo "Audit CI completed" > audit-ci-report.json

      - name: Upload dependency reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-reports
          path: |
            outdated-deps.json
            audit-report.json
            audit-ci-report.json
          retention-days: 30

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [security-audit, dependency-check]
    if: always()
    timeout-minutes: 5
    
    steps:
      - name: Generate security summary
        run: |
          echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Status:" >> $GITHUB_STEP_SUMMARY
          echo "- Security Audit: ${{ needs.security-audit.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dependency Check: ${{ needs.dependency-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.security-audit.result }}" == "success" ]; then
            echo "✅ Security audit completed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Security audit completed with warnings" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.dependency-check.result }}" == "success" ]; then
            echo "✅ Dependency check completed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Dependency check completed with warnings" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Review security reports" >> $GITHUB_STEP_SUMMARY
          echo "2. Address high-severity vulnerabilities" >> $GITHUB_STEP_SUMMARY
          echo "3. Update outdated dependencies" >> $GITHUB_STEP_SUMMARY
          echo "4. Monitor for new security issues" >> $GITHUB_STEP_SUMMARY
