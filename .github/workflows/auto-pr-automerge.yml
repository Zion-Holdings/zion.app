name: Auto PR + Automerge

on:
  push:
    branches-ignore:
      - main

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: auto-pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  open-and-automerge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create or update PR to main
        id: cpr
        uses: actions/github-script@v7
        with:
          script: |
            const branch = context.ref.replace('refs/heads/','');
            if (branch === 'main') {
              core.setOutput('pr', '');
              return;
            }
            const { data: existing } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${branch}`,
              base: 'main',
              state: 'open'
            });
            let pr;
            if (existing.length > 0) {
              pr = existing[0];
              // Update title/body minimally
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                title: pr.title || `Auto PR: ${branch} -> main`
              });
            } else {
              const created = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: branch,
                base: 'main',
                title: `Auto PR: ${branch} -> main`,
                body: 'Automated PR opened by workflow to merge latest changes into main quickly.'
              });
              pr = created.data;
            }
            core.setOutput('pr_number', pr.number.toString());

      - name: Add automerge label
        if: steps.cpr.outputs.pr_number
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = Number(core.getInput('pr_number'));
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              labels: ['automerge']
            });
          result-encoding: string
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Enable auto-merge
        if: steps.cpr.outputs.pr_number
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pr_number }}
          merge-method: squash