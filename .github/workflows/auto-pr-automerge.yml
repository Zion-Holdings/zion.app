name: Auto PR + Automerge

on:
  push:
    branches-ignore:
      - main

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: "auto-pr-${{ github.ref }}"
  cancel-in-progress: true

jobs:

  open-and-automerge:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create or update PR to main
        id: cpr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}"
          script: |"
            const branch = context.ref.replace('refs/heads/','');
            if (branch === 'main') {
              core.setOutput('pr_number', '');
              return;
            }
            const { data: existing } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${branch}`,
              base: 'main',
              state: 'open'
            });
            let pr;
            if (existing.length > 0) {
              pr = existing[0];
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                title: pr.title || `Auto PR: ${branch} -> main`
              });
            } else {
              const created = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: branch,
                base: 'main',
                title: `Auto PR: ${branch} -> main`,
                body: 'Automated PR opened by workflow to merge latest changes into main quickly.'
              });
              pr = created.data;
            }
            core.setOutput('pr_number', String(pr.number));

      - name: Ensure 'automerge' label exists
        uses: "actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |"
            const labelName = 'automerge';
            try {
              await github.rest.issues.getLabel({ owner: context.repo.owner, repo: context.repo.repo, name: labelName });
            } catch (e) {
              if (e.status === 404) {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: labelName,
                  color: '0E8A16',
                  description: 'Allow PRs to be auto-merged by workflow'
                });
              } else {
                throw e;
              }
            }

      - name: Add automerge label
        if: "steps.cpr.outputs.pr_number
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |"
            const pr_number = Number('${{ steps.cpr.outputs.pr_number }}');
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              labels: ['automerge']
            });

      - name: Enable auto-merge
        if: "steps.cpr.outputs.pr_number
        uses: peter-evans/enable-pull-request-automerge@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pr_number }}
          merge-method: squash"