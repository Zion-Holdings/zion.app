name: Emergency Fix & Rollback

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - hotfix
          - rollback
          - emergency-deploy
      target_branch:
        description: 'Target branch for the action'
        required: true
        default: 'main'
        type: string
      commit_sha:
        description: 'Commit SHA to rollback to (for rollback action)'
        required: false
        type: string
      description:
        description: 'Description of the emergency action'
        required: true
        type: string

permissions:
  contents: write
  actions: read
  deployments: write

concurrency:
  group: emergency-action
  cancel-in-progress: false

jobs:
  validate-action:
    name: Validate Emergency Action
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      action: ${{ github.event.inputs.action }}
      target_branch: ${{ github.event.inputs.target_branch }}
      commit_sha: ${{ github.event.inputs.commit_sha }}
      description: ${{ github.event.inputs.description }}
    steps:
      - name: Validate inputs
        run: |
          echo "Action: ${{ github.event.inputs.action }}"
          echo "Target Branch: ${{ github.event.inputs.target_branch }}"
          echo "Description: ${{ github.event.inputs.description }}"
          
          if [ "${{ github.event.inputs.action }}" == "rollback" ] && [ -z "${{ github.event.inputs.commit_sha }}" ]; then
            echo "‚ùå Rollback action requires commit SHA"
            exit 1
          fi
          
          echo "‚úÖ Input validation passed"

  hotfix:
    name: Apply Hotfix
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: validate-action
    if: needs.validate-action.outputs.action == 'hotfix'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Apply hotfix
        run: |
          echo "Applying hotfix to ${{ needs.validate-action.outputs.target_branch }}"
          npm run fix:all || true
          npm run lint -- --fix || true

      - name: Test hotfix
        run: |
          npm run type-check || true
          npm run build || true

      - name: Commit hotfix
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "hotfix: emergency fix - ${{ needs.validate-action.outputs.description }} [skip ci]"
          git push origin ${{ needs.validate-action.outputs.target_branch }}

  rollback:
    name: Rollback to Previous Version
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: validate-action
    if: needs.validate-action.outputs.action == 'rollback'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify commit exists
        run: |
          git show ${{ needs.validate-action.outputs.commit_sha }} > /dev/null 2>&1
          if [ $? -ne 0 ]; then
            echo "‚ùå Commit ${{ needs.validate-action.outputs.commit_sha }} not found"
            exit 1
          fi
          echo "‚úÖ Commit verified"

      - name: Create rollback branch
        run: |
          git checkout -b rollback/emergency-${{ github.run_number }}
          git reset --hard ${{ needs.validate-action.outputs.commit_sha }}

      - name: Test rollback
        run: |
          npm ci
          npm run type-check || true
          npm run build || true

      - name: Push rollback branch
        run: |
          git push origin rollback/emergency-${{ github.run_number }} --force

      - name: Create rollback PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "üö® EMERGENCY ROLLBACK: ${{ needs.validate-action.outputs.description }}"
          body: |
            ## üö® Emergency Rollback
            
            **Action:** Rollback to commit ${{ needs.validate-action.outputs.commit_sha }}
            **Reason:** ${{ needs.validate-action.outputs.description }}
            **Created by:** @${{ github.actor }}
            **Timestamp:** ${{ github.event.head_commit.timestamp }}
            
            ### ‚ö†Ô∏è This is an emergency action
            
            Please review and merge immediately if the rollback is correct.
            
            **Commit Details:**
            ```
            ${{ needs.validate-action.outputs.commit_sha }}
            ```
            
            **Files changed in rollback:**
            ```bash
            git diff HEAD~1..HEAD --name-only
            ```
          branch: rollback/emergency-${{ github.run_number }}
          base: ${{ needs.validate-action.outputs.target_branch }}

  emergency-deploy:
    name: Emergency Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: validate-action
    if: needs.validate-action.outputs.action == 'emergency-deploy'
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './out'
          production-branch: ${{ needs.validate-action.outputs.target_branch }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "üö® EMERGENCY DEPLOY: ${{ needs.validate-action.outputs.description }}"

      - name: Notify emergency deployment
        run: |
          echo "üö® EMERGENCY DEPLOYMENT COMPLETED"
          echo "Description: ${{ needs.validate-action.outputs.description }}"
          echo "Target Branch: ${{ needs.validate-action.outputs.target_branch }}"
          echo "Deployed by: @${{ github.actor }}"

  notification:
    name: Send Notifications
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [validate-action, hotfix, rollback, emergency-deploy]
    if: always()
    steps:
      - name: Notify team
        run: |
          echo "üö® EMERGENCY ACTION COMPLETED"
          echo "Action: ${{ needs.validate-action.outputs.action }}"
          echo "Target: ${{ needs.validate-action.outputs.target_branch }}"
          echo "Description: ${{ needs.validate-action.outputs.description }}"
          echo "Actor: @${{ github.actor }}"
          echo "Timestamp: $(date -u)"
          
          if [ "${{ needs.validate-action.outputs.action }}" == "rollback" ]; then
            echo "Rollback to: ${{ needs.validate-action.outputs.commit_sha }}"
          fi
