name: WORKFLOW_NAME_PLACEHOLDER

on:
  workflow_dispatch: {}
  schedule:
    - cron: '*/10 * * * *'

permissions:
  contents: write
  actions: read

jobs:
  main:
    name: Main Job
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

            - name: Checkout repository
              uses: actions/checkout@v4
                fetch-depth: 0
            - name: Setup Node.js
              uses: actions/setup-node@v4
                node-version: 20
                cache: npm
            - name: Install dependencies
              run: npm ci --omit=dev || npm ci
            - name: Clean git state
              run: |
                git config --global user.name "github-actions[bot]"
                git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
                # Clean up any existing rebase state
                git rebase --abort 2>/dev/null || true
                rm -rf .git/rebase-merge .git/rebase-apply 2>/dev/null || true
                # Reset to clean state
                git reset --hard HEAD
                git clean -fd
            - name: Run Workflow Health Monitor
              run: |
                # Set environment variables for safer git operations
                export GIT_AUTHOR_NAME="github-actions[bot]"
                export GIT_COMMITTER_NAME="github-actions[bot]"
                export GIT_AUTHOR_EMAIL="41898282+github-actions[bot]@users.noreply.github.com"
                export GIT_COMMITTER_EMAIL="41898282+github-actions[bot]@users.noreply.github.com"
                
                echo "🔍 Running workflow health analysis..."
                node automation/workflow-health-monitor.cjs analyze
                
                echo "🔧 Applying automatic fixes..."
                node automation/workflow-health-monitor.cjs fix
                
                echo "🧹 Cleaning up backup files..."
                node automation/workflow-health-monitor.cjs cleanup
                
                echo "📊 Generating final health report..."
                node automation/workflow-health-monitor.cjs run
                PUSH_TO_MAIN: "false"
                TARGET_BRANCH: "main"
            - name: Upload health reports
                name: workflow-health-reports
                path: |
                  automation/logs/workflow-health-report.json
                  automation/logs/workflow-status.json
                  automation/logs/workflow-health-monitor.log
                if-no-files-found: ignore
            - name: Commit health improvements
                if [ -n "$(git status --porcelain)" ]; then
                  git add -A
                  git commit -m "chore(health): auto-fix workflow issues and improve health score"
                  git push origin HEAD:$(git rev-parse --abbrev-ref HEAD) || echo "Failed to push changes"
                else
                  echo "No changes to commit"
                fi
            - name: Create health summary
                if [ -f "automation/logs/workflow-health-report.json" ]; then
                  echo "## 📊 Workflow Health Summary" >> $GITHUB_STEP_SUMMARY
                  echo " >> $GITHUB_STEP_SUMMARY
                  
                  # Extract health score
                  HEALTH_SCORE=$(node -e "
                    try {
                      const report = require('./automation/logs/workflow-health-report.json');
                      console.log(report.summary.healthScore);
                    } catch (e) {
                      console.log('N/A');
                    }
                  )
                  
                  echo "**Health Score:** $HEALTH_SCORE/100" >> $GITHUB_STEP_SUMMARY
                  echo " >> $GITHUB_STEP_SUMMARY
                  
                  # Extract summary stats
                  TOTAL=$(node -e "
                    try {
                      const report = require('./automation/logs/workflow-health-report.json');
                      console.log(report.summary.totalWorkflows);
                    } catch (e) {
                      console.log('N/A');
                    }
                  )
                  
                  ACTIVE=$(node -e "
                    try {
                      const report = require('./automation/logs/workflow-health-report.json');
                      console.log(report.summary.activeWorkflows);
                    } catch (e) {
                      console.log('N/A');
                    }
                  )
                  
                  FAILING=$(node -e "
                    try {
                      const report = require('./automation/logs/workflow-health-report.json');
                      console.log(report.summary.failingWorkflows);
                    } catch (e) {
                      console.log('N/A');
                    }
                  )
                  
                  echo "**Total Workflows:** $TOTAL" >> $GITHUB_STEP_SUMMARY
                  echo "**Active Workflows:** $ACTIVE" >> $GITHUB_STEP_SUMMARY
                  echo "**Failing Workflows:** $FAILING" >> $GITHUB_STEP_SUMMARY
                  echo " >> $GITHUB_STEP_SUMMARY
                  
                  # Add recommendations if any
                  RECOMMENDATIONS=$(node -e "
                    try {
                      const report = require('./automation/logs/workflow-health-report.json');
                      if (report.recommendations && report.recommendations.length > 0) {
                        console.log(report.recommendations.length);
                      } else {
                        console.log('0');
                      }
                    } catch (e) {
                      console.log('0');
                    }
                  )
                  
                  if [ "$RECOMMENDATIONS" -gt 0 ]; then
                    echo "**Recommendations:** $RECOMMENDATIONS" >> $GITHUB_STEP_SUMMARY
                    echo " >> $GITHUB_STEP_SUMMARY
                  fi
                  
                  # Add fixes applied if any
                  FIXES=$(node -e "
                    try {
                      const report = require('./automation/logs/workflow-health-report.json');
                      if (report.fixesApplied && report.fixesApplied.length > 0) {
                        console.log(report.fixesApplied.length);
                      } else {
                        console.log('0');
                      }
                    } catch (e) {
                      console.log('0');
                    }
                  )
                  
                  if [ "$FIXES" -gt 0 ]; then
                    echo "**Fixes Applied:** $FIXES" >> $GITHUB_STEP_SUMMARY
                    echo " >> $GITHUB_STEP_SUMMARY
                  fi
                  
                  echo "---" >> $GITHUB_STEP_SUMMARY
                  echo "Last updated: $(date)" >> $GITHUB_STEP_SUMMARY
                else
                  echo "## ❌ Health Report Not Available" >> $GITHUB_STEP_SUMMARY
                  echo "The workflow health monitor failed to generate a report." >> $GITHUB_STEP_SUMMARY
                fi
