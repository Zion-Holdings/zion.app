name: Zion Brain Stuck Users Issues

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch: {}

permissions:
  contents: write
  issues: write

jobs:
  stuck-users:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci --prefer-offline --no-audit --no-fund
      - name: Scan for stuck users
        run: node scripts/zion-stuck-users-scan.cjs
      - name: Open issues for stuck users
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = JSON.parse(fs.readFileSync('automation_logs/stuck-users.json', 'utf8'));
            const items = summary.items || [];
            for (const item of items) {
              const title = `[Zion Brain] Stuck user detected: ${item.module} / ${item.type}`;
              const q = await github.rest.search.issuesAndPullRequests({
                q: `repo:${context.repo.owner}/${context.repo.repo} is:issue in:title "${title.replace(/\"/g,'\\"')}" state:open`
              });
              if ((q.data.items || []).length > 0) continue;
              const body = [
                `Status: ${item.status}`,
                `Latency: ${item.latencyMs || 'n/a'} ms`,
                `Timestamp: ${item.timestamp}`,
                '',
                'Auto-created by Zion Brain Stuck Users workflow.'
              ].join('\n');
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body,
                labels: ['zion-brain', 'stuck-users']
              });
            }