name: Dependency Maintenance

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 8 * * 1' # Weekly on Monday at 8 AM UTC

permissions:
  contents: write
  actions: read
  pull-requests: write

concurrency:
  group: "dependency-maintenance"
  cancel-in-progress: false

jobs:
  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Check for outdated packages
        run: |
          echo "Checking for outdated packages..."
          npm outdated --json > outdated-packages.json || true
          
          # Count outdated packages
          OUTDATED_COUNT=$(cat outdated-packages.json | jq 'length' 2>/dev/null || echo "0")
          echo "Found $OUTDATED_COUNT outdated packages"
          
          if [ "$OUTDATED_COUNT" -gt 0 ]; then
            echo "⚠️ Outdated packages detected"
          else
            echo "✅ All packages are up to date"
          fi

      - name: Check for security vulnerabilities
        run: |
          echo "Checking for security vulnerabilities..."
          npm audit --audit-level=high --json > audit-report.json || true
          
          # Check if there are high/critical vulnerabilities
          if npm audit --audit-level=high; then
            echo "✅ No high or critical vulnerabilities found"
          else
            echo "⚠️ High or critical vulnerabilities detected"
          fi

      - name: Create dependency report
        run: |
          echo "# Dependency Maintenance Report" > dependency-report.md
          echo "Generated: $(date)" >> dependency-report.md
          echo "" >> dependency-report.md
          
          echo "## Outdated Packages" >> dependency-report.md
          if [ -f "outdated-packages.json" ]; then
            echo "Found $OUTDATED_COUNT outdated packages" >> dependency-report.md
            cat outdated-packages.json | jq -r 'keys[]' >> dependency-report.md 2>/dev/null || echo "No outdated packages" >> dependency-report.md
          fi
          
          echo "" >> dependency-report.md
          echo "## Security Vulnerabilities" >> dependency-report.md
          if [ -f "audit-report.json" ]; then
            echo "Security audit completed" >> dependency-report.md
          fi

      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-maintenance-report
          path: |
            dependency-report.md
            outdated-packages.json
            audit-report.json
          retention-days: 7

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 45
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Update dependencies
        run: |
          echo "Updating dependencies..."
          
          # Update all dependencies to latest versions
          npm update
          
          # Check for major version updates
          npm outdated --json > updated-packages.json || true
          
          echo "Dependencies updated successfully"

      - name: Test updated dependencies
        run: |
          echo "Testing with updated dependencies..."
          npm run build
          npm run type-check
          echo "✅ Tests passed with updated dependencies"

      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update dependencies"
          title: "🔄 Update Dependencies"
          body: |
            This PR updates all dependencies to their latest versions.
            
            ## Changes
            - Updated npm packages to latest versions
            - Verified build and type checking still pass
            
            ## Testing
            - ✅ Build successful
            - ✅ Type checking passed
            
            Please review and merge if everything looks good.
          branch: dependency-updates
          delete-branch: true
          labels: dependencies,automated
