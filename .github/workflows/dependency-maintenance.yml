name: Dependency Maintenance
true:
  workflow_dispatch: {}
  schedule:
  - cron: 0 8 * * 1
  push:
    branches:
    - main
    - develop
    paths:
    - package.json
    - package-lock.json
permissions:
  contents: read
  actions: read
concurrency:
  group: dependency-maintenance
  cancel-in-progress: false
jobs:
  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: npm
    - name: Install dependencies
      run: npm ci --no-audit --no-fund
    - name: Check for outdated dependencies
      run: "echo \"Checking for outdated dependencies...\"\nnpm outdated --depth=0\
        \ > outdated-deps.json 2>&1 || echo \"All packages are up to date\" > outdated-deps.json\n\
        \n# Count outdated packages\nif [ -s outdated-deps.json ]; then\n  OUTDATED_COUNT=$(grep\
        \ -c \"current\\|wanted\\|latest\" outdated-deps.json || echo \"0\")\n  echo\
        \ \"Found $OUTDATED_COUNT outdated packages\"\nelse\n  echo \"No outdated\
        \ packages found\"\nfi\n"
    - name: Security audit
      run: 'echo "Running security audit..."

        npm audit --audit-level=high --json > audit-report.json 2>&1 || echo "No vulnerabilities
        found" > audit-report.json

        '
    - name: Check for unused dependencies
      run: 'echo "Checking for unused dependencies..."

        npx depcheck --json > depcheck-report.json 2>&1 || echo "Dependency check
        completed" > depcheck-report.json

        '
    - name: Upload dependency reports
      uses: actions/upload-artifact@v4
      with:
        name: dependency-reports
        path: 'outdated-deps.json

          audit-report.json

          depcheck-report.json

          '
        retention-days: 30
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    needs: check-dependencies
    timeout-minutes: 20
    if: github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: npm
    - name: Install dependencies
      run: npm ci --no-audit --no-fund
    - name: Update dependencies
      run: 'echo "Updating dependencies..."


        # Update patch and minor versions

        npm update


        # Check for major version updates

        npm outdated --depth=0

        '
    - name: Install updated dependencies
      run: npm ci
    - name: Run tests
      run: npm run test:smoke
      continue-on-error: true
    - name: Build application
      run: npm run build
      continue-on-error: true
    - name: Commit changes
      if: success()
      run: "git config user.name \"github-actions[bot]\"\ngit config user.email \"\
        github-actions[bot]@users.noreply.github.com\"\n\nif git diff --quiet; then\n\
        \  echo \"No dependency updates to commit\"\nelse\n  git add package.json\
        \ package-lock.json\n  git commit -m \"chore: update dependencies [skip ci]\"\
        \n  git push\nfi\n"
  dependency-summary:
    name: Dependency Summary
    runs-on: ubuntu-latest
    needs:
    - check-dependencies
    - update-dependencies
    if: always()
    timeout-minutes: 5
    steps:
    - name: Generate summary
      run: "echo \"## \U0001F4E6 Dependency Maintenance Summary\" >> $GITHUB_STEP_SUMMARY\n\
        echo \"\" >> $GITHUB_STEP_SUMMARY\necho \"### Status:\" >> $GITHUB_STEP_SUMMARY\n\
        echo \"- Dependency Check: ${{ needs.check-dependencies.result }}\" >> $GITHUB_STEP_SUMMARY\n\
        echo \"- Dependency Update: ${{ needs.update-dependencies.result }}\" >> $GITHUB_STEP_SUMMARY\n\
        echo \"\" >> $GITHUB_STEP_SUMMARY\n\nif [ \"${{ needs.check-dependencies.result\
        \ }}\" == \"success\" ]; then\n  echo \"\u2705 Dependency check completed\
        \ successfully\" >> $GITHUB_STEP_SUMMARY\nelse\n  echo \"\u274C Dependency\
        \ check failed\" >> $GITHUB_STEP_SUMMARY\nfi\n\nif [ \"${{ needs.update-dependencies.result\
        \ }}\" == \"success\" ]; then\n  echo \"\u2705 Dependencies updated successfully\"\
        \ >> $GITHUB_STEP_SUMMARY\nelif [ \"${{ needs.update-dependencies.result }}\"\
        \ == \"skipped\" ]; then\n  echo \"\u23ED\uFE0F Dependency update skipped\
        \ (not manual trigger)\" >> $GITHUB_STEP_SUMMARY\nelse\n  echo \"\u274C Dependency\
        \ update failed\" >> $GITHUB_STEP_SUMMARY\nfi\n"
