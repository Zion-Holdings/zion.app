name: Dependency Maintenance

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 8 * * 1' # Weekly on Monday at 8 AM UTC

permissions:
  contents: write
  actions: read
  pull-requests: write

concurrency:
  group: "dependency-maintenance"
  cancel-in-progress: false

jobs:
  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Check for outdated packages
        id: outdated
        run: |
          echo "Checking for outdated packages..."
          npm outdated --json > outdated.json || echo "{}" > outdated.json
          
          # Count outdated packages
          OUTDATED_COUNT=$(jq 'length' outdated.json)
          echo "outdated_count=$OUTDATED_COUNT" >> $GITHUB_OUTPUT
          
          if [ "$OUTDATED_COUNT" -gt 0 ]; then
            echo "Found $OUTDATED_COUNT outdated packages"
            cat outdated.json
          else
            echo "All packages are up to date"
          fi

      - name: Check for security vulnerabilities
        id: security
        run: |
          echo "Checking for security vulnerabilities..."
          npm audit --json > audit.json || echo "{}" > audit.json
          
          # Count vulnerabilities by severity
          HIGH_VULNS=$(jq '.metadata.vulnerabilities.high // 0' audit.json)
          MEDIUM_VULNS=$(jq '.metadata.vulnerabilities.moderate // 0' audit.json)
          
          echo "high_vulns=$HIGH_VULNS" >> $GITHUB_OUTPUT
          echo "medium_vulns=$MEDIUM_VULNS" >> $GITHUB_OUTPUT
          
          echo "High severity vulnerabilities: $HIGH_VULNS"
          echo "Medium severity vulnerabilities: $MEDIUM_VULNS"

      - name: Upload dependency reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-reports
          path: |
            outdated.json
            audit.json
          retention-days: 7

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    needs: check-dependencies
    if: needs.check-dependencies.outputs.outdated_count != '0' || needs.check-dependencies.outputs.high_vulns != '0'
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Update dependencies
        run: |
          echo "Updating dependencies..."
          
          # Update patch and minor versions
          npm update
          
          # Check for major version updates
          npm outdated --json > major-updates.json || echo "{}" > major-updates.json
          
          # Create update summary
          echo "## Dependency Update Summary" > update-summary.md
          echo "- Updated packages: $(npm list --depth=0 | wc -l)" >> update-summary.md
          echo "- Major updates available: $(jq 'length' major-updates.json)" >> update-summary.md

      - name: Test updated dependencies
        run: |
          echo "Testing with updated dependencies..."
          npm run type-check
          npm run lint
          npm run build

      - name: Create pull request
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          title: "ğŸ”§ Automated dependency updates"
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated dependency updates to keep the project secure and up-to-date.
            
            ### Changes Made
            - Updated outdated packages
            - Resolved security vulnerabilities
            - All tests passing
            
            ### Testing
            - âœ… Type checking passed
            - âœ… Linting passed
            - âœ… Build successful
            
            Please review and merge if everything looks good.
          branch: dependency-updates
          delete-branch: true
          commit-message: "chore: update dependencies"
