name: Hourly Jest Coverage Check

on:
  schedule:
    - cron: '0 * * * *' # Runs at the start of every hour

jobs:
  test_and_report_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Run Jest tests with coverage
        id: run_tests # Give an id to this step
        run: |
          mkdir -p logs/coverage/hourly
          npm test -- --coverage --coverageReporters="json-summary" --coverageReporters="lcov" --coverageDirectory="logs/coverage/hourly"

      - name: Check coverage threshold
        id: check_coverage
        run: node scripts/check-coverage-threshold.js || exit 2
        continue-on-error: true

      - name: Create GitHub Issue if coverage is low
        if: steps.check_coverage.outcome == 'failure'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PCT=$(jq -r '.total.lines.pct // empty' logs/coverage/hourly/coverage-summary.json || echo "")
          ISSUE_TITLE="Low Test Coverage Detected: ${PCT:-N/A}%"
          ISSUE_BODY="Hourly Jest test run detected code coverage of ${PCT:-N/A}%, which is below the 85% threshold. Please investigate and add more tests. Workflow run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          gh issue create --title "$ISSUE_TITLE" --body "$ISSUE_BODY" --label "bug,test-coverage"
          echo "GitHub Issue created due to low coverage."

      - name: Verify coverage output directory and summary file
        run: |
          echo "Verifying existence of coverage summary file for potential artifact upload..."
          ls -R logs/coverage/hourly || true
          if [ -f "logs/coverage/hourly/coverage-summary.json" ]; then
            echo "coverage-summary.json found."
          else
            echo "coverage-summary.json NOT FOUND at logs/coverage/hourly/coverage-summary.json"
          fi

      - name: Upload hourly coverage report as artifact
        if: always() # Always run this, even if previous steps failed, to help debugging
        uses: actions/upload-artifact@v4
        with:
          name: hourly-coverage-report
          path: logs/coverage/hourly/
          retention-days: 7 # Keep artifacts for 7 days
