name: AI-IT Innovations Factory

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch: {}

concurrency:
  group: content-automation-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-content:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
  # Branch protection rules
  branch_protection_rules:
    - pattern: "main"
      required_status_checks:
        strict: true
        contexts: []
      required_pull_request_reviews:
        required_approving_review_count: 1
        dismiss_stale_reviews: true
        require_code_owner_reviews: false
      enforce_admins: false
      required_linear_history: false
      allow_force_pushes: false
      allow_deletions: false
      block_creations: false
      required_conversation_resolution: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'npm'

      - name: Install
        run: npm ci --no-audit --no-fund

      - name: Generate content
        run: |
          node automation/ai-it-innovations-factory.cjs || true
          node automation/ai-it-front-advertiser.cjs || true
          node scripts/generate-search-index.js || true
          node scripts/generate-readme.js || true

      - name: Commit and push
        continue-on-error: true
        env:
          HUSKY: '0'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "feat(automation): AI/IT innovations content [skip ci]" --no-verify
            for i in 1 2 3; do
              if git push origin HEAD:$(git rev-parse --abbrev-ref HEAD); then
                echo "Push succeeded";
                break;
              else
                echo "Push failed (attempt $i), rebasing onto origin/main and retrying...";
                git fetch origin main || true;
                git pull --rebase --autostash origin main || true;
                sleep 2;
              fi;
            done
          fi


