name: WORKFLOW_NAME_PLACEHOLDER

on:
  workflow_dispatch: {}
  schedule:
    - cron: '*/10 * * * *'

permissions:
  contents: write
  actions: read

jobs:
  main:
    name: Main Job
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

            - name: Delete old workflow runs (> 14 days)
              id: oldruns
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                  const owner = context.repo.owner;
                  const repo = context.repo.repo;
                  const cutoff = Date.now() - 14 * 24 * 60 * 60 * 1000;
                  let deleted = 0;
                  for await (const { data } of github.paginate.iterator(github.rest.actions.listWorkflowRunsForRepo, { owner, repo, per_page: 100 })) {
                    for (const run of data.workflow_runs) {
                      const created = new Date(run.created_at).getTime();
                      if (created < cutoff) {
                        try {
                          await github.rest.actions.deleteWorkflowRun({ owner, repo, run_id: run.id });
                          deleted++;
                        } catch (e) {
                          core.warning(`Failed to delete run ${run.id}: ${e.message}`);
                        }
                      }
                    }"
                  }"
                  core.setOutput('deleted_runs', deleted);
            - name: Delete expired artifacts (> 14 days)
              id: oldartifacts
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                  const owner = context.repo.owner;
                  const repo = context.repo.repo;
                  const cutoff = Date.now() - 14 * 24 * 60 * 60 * 1000;
                  let deleted = 0;
                  for await (const { data } of github.paginate.iterator(github.rest.actions.listArtifactsForRepo, { owner, repo, per_page: 100 })) {
                    for (const a of data.artifacts) {
                      const created = new Date(a.created_at).getTime();
                      if (created < cutoff) {
                        try {
                          await github.rest.actions.deleteArtifact({ owner, repo, artifact_id: a.id });
                          deleted++;
                        } catch (e) {
                          core.warning(`Failed to delete artifact ${a.id}: ${e.message}`);
                        }
                      }
                    }
                  }"
                  core.setOutput('deleted_artifacts', deleted);
            - name: Summary
              run: |
                echo "Deleted runs: ${{ steps.oldruns.outputs.deleted_runs }}" >> $GITHUB_STEP_SUMMARY
                echo "Deleted artifacts: ${{ steps.oldartifacts.outputs.deleted_artifacts }}" >> $GITHUB_STEP_SUMMARY
