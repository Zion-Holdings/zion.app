name: YAML Syntax Validator

on:
  push:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
    paths:
      - '**.yml'
      - '**.yaml'
  pull_request:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
    paths:
      - '**.yml'
      - '**.yaml'
  schedule:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
    - cron: '0 0 * * *'  # Daily validation

permissions:
  contents: read
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
  actions: read
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
concurrency:
  group: "workflow-${{ github.ref }}"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
  cancel-in-progress: false
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
jobs:
  validate-yaml:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
    name: Validate YAML Syntax
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
          python-version: '3.11'

      - name: Install PyYAML
        run: pip install pyyaml

      - name: Validate YAML files
        id: validate
          echo "🔍 Validating YAML files..."
          
          # Find all YAML files
          yaml_files=$(find . -name "*.yml" -o -name "*.yaml" | grep -v node_modules | grep -v .git)
          
          invalid_files=()
          total_files=0
          
          for file in $yaml_files; do
            total_files=$((total_files + 1))
            echo "Checking: $file"
            
            if ! python3 -c "import yaml; yaml.safe_load(open('$file')) 2>/dev/null; then
              echo "❌ $file has YAML errors"
              invalid_files+=("$file")
            else
              echo "✅ $file is valid"
            fi
          done
          
          echo "📊 Validation Summary:
          echo "Total files: $total_files"
          echo "Valid files: $((total_files - ${#invalid_files[@]}))
          echo "Invalid files: ${#invalid_files[@]}"
          
          if [ ${#invalid_files[@]} -gt 0 ]; then
            echo "❌ Invalid files found:
            printf '%s\n' "${invalid_files[@]}"
            echo "invalid_count=${#invalid_files[@]}" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "✅ All YAML files are valid!"
            echo "invalid_count=0" >> $GITHUB_OUTPUT
          fi

      - name: Create validation report
  if: steps.validate.outputs.invalid_count != '0'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
          echo "📝 Creating validation report..."
          
          cat > yaml-validation-report.md << EOF
          # YAML Validation Report
          
          Generated: $(date -u)
          
          ## Summary
          - **Total files checked**: $(find . -name "*.yml" -o -name "*.yaml" | grep -v node_modules | grep -v .git | wc -l)
          - **Valid files**: $(find . -name "*.yml" -o -name "*.yaml" | grep -v node_modules | grep -v .git | xargs -I {} sh -c 'python3 -c "import yaml; yaml.safe_load(open(\"{}\")) 2>/dev/null && echo "{}"' | wc -l)
          - **Invalid files**: ${{ steps.validate.outputs.invalid_count }}
          
          ## Invalid Files
          EOF
          
          for file in $(find . -name "*.yml" -o -name "*.yaml" | grep -v node_modules | grep -v .git); do
            if ! python3 -c "import yaml; yaml.safe_load(open('$file')) 2>/dev/null; then
              echo "- \`$file\`" >> yaml-validation-report.md
              echo "  - Errors:" >> yaml-validation-report.md
              python3 -c "import yaml; yaml.safe_load(open('$file')) 2>&1 | head -3 | sed 's/^/    - /' >> yaml-validation-report.md
            fi
          done

      - name: Upload validation report
  if: steps.validate.outputs.invalid_count != '0'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
          name: yaml-validation-report
          path: yaml-validation-report.md

      - name: Comment on PR
  if: github.event_name == 'pull_request' && steps.validate.outputs.invalid_count != '0'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Execute workflow
        run: echo "Workflow $workflow_name executed successfully"
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('yaml-validation-report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🚨 YAML Validation Failed
            
            ${report}
            
            Please fix the YAML syntax errors before merging.`
            });
