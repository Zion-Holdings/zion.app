name: Security & Dependency Management

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * 1-5' # Weekdays at 10 AM

permissions:
  contents: read
  actions: read
  security-events: write
  pull-requests: write

concurrency:
  group: "security-${{ github.ref }}"
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true

      - name: Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report
          path: snyk-report.json
          retention-days: 30

  dependency-update:
    name: Dependency Update Check
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Check for outdated dependencies
        run: |
          echo "## Dependency Update Report" >> $GITHUB_STEP_SUMMARY
          echo "Checking for outdated packages..." >> $GITHUB_STEP_SUMMARY
          
          # Check npm outdated
          npm outdated --depth=0 || echo "All packages are up to date"
          
          # Check for security vulnerabilities
          npm audit --audit-level=high || echo "No high severity vulnerabilities found"
          
          # Generate dependency report
          npm list --depth=0 > dependency-report.txt
          
          echo "Dependency report generated" >> $GITHUB_STEP_SUMMARY

      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report
          path: dependency-report.txt
          retention-days: 7

  code-scanning:
    name: Code Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [security-scan, dependency-update, code-scanning]
    if: always()
    steps:
      - name: Generate security summary
        run: |
          echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Security Scan: ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dependency Update: ${{ needs.dependency-update.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Code Scanning: ${{ needs.code-scanning.result }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.security-scan.result }}" == "success" ] && [ "${{ needs.dependency-update.result }}" == "success" ] && [ "${{ needs.code-scanning.result }}" == "success" ]; then
            echo "✅ All security checks passed!" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Some security checks failed. Review the logs for details." >> $GITHUB_STEP_SUMMARY
          fi
