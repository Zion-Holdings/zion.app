# .github/workflows/django-cd.yml
name: CD - Django Backend

on:
  push:
    branches: [main] # Or a specific backend branch if preferred
    paths:
      - 'backend/**' # Only run if changes in backend directory
      - '.github/workflows/django-cd.yml'
  workflow_dispatch:

jobs:
  build-and-deploy-django:
    runs-on: ubuntu-latest
    environment: staging # Define a 'staging' environment in GitHub settings for Django
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }} # Same registry or a different one
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Django Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend # Path to Django app and its Dockerfile
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY_URL }}/zion-django-backend:${{ github.sha }} # Different image name

      # TODO: Add Trivy scan step for this image, similar to frontend cd.yml

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        # Ensure kubectl version is compatible if different from frontend CD

      - name: Configure kubeconfig
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DJANGO_STAGING }} # Potentially different kubeconfig or namespace for Django
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBE_CONFIG" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy to Kubernetes (Django)
        run: |
          # This assumes a Kubernetes deployment manifest exists for Django (e.g., k8s/django-deployment.yaml)
          # Option 1: kubectl set image
          # kubectl set image deployment/zion-django-app zion-django-app=${{ secrets.REGISTRY_URL }}/zion-django-backend:${{ github.sha }} -n django-staging --record
          # Option 2: Apply a manifest after updating image placeholder
          # sed "s|REPLACE_DJANGO_IMAGE|${{ secrets.REGISTRY_URL }}/zion-django-backend:${{ github.sha }}|" k8s/django-deployment.yaml | kubectl apply -f - -n django-staging
          echo "Deployment step placeholder: Configure Kubernetes deployment for Django."
          echo "Image available: ${{ secrets.REGISTRY_URL }}/zion-django-backend:${{ github.sha }}"
          # Example:
          # kubectl apply -k k8s/overlays/staging/django # If using Kustomize
