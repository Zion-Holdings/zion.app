# API Reference

## Overview

<<<<<<< HEAD
This document provides comprehensive documentation for all APIs, automation endpoints, and integration points available in the bolt.new.zion.app system.

## Base URLs

- **Development**: `http://localhost:3000`
- **Production**: `https://bolt.new.zion.app`
- **API Base**: `/api`

## Authentication

### API Keys
Most endpoints require authentication via API keys passed in headers:
```http
Authorization: Bearer YOUR_API_KEY
X-API-Key: YOUR_API_KEY
```

### Rate Limiting
- **Standard**: 100 requests per minute
- **Premium**: 1000 requests per minute
- **Enterprise**: 10000 requests per minute

## Core API Endpoints

### Content Management

#### Get All Pages
```http
GET /api/pages
=======
This document provides comprehensive information about the APIs, automation endpoints, and integration capabilities of bolt.new.zion.app.

## Core APIs

### Content Management API

#### GET `/api/content`
Retrieves content metadata and statistics.

**Response:**
```json
{
  "totalPages": 2960,
  "totalComponents": 12,
  "automations": 227,
  "lastUpdated": "2025-01-17T10:00:00Z"
}
```

#### POST `/api/content/generate`
Generates new content using AI automation.

**Request Body:**
```json
{
  "type": "blog_post",
  "topic": "AI Automation Trends 2025",
  "keywords": ["automation", "AI", "trends"],
  "length": "medium"
}
>>>>>>> origin/cursor/add-more-project-content-715e
```

**Response:**
```json
{
<<<<<<< HEAD
  "success": true,
  "data": {
    "pages": [
      {
        "id": "page-1",
        "title": "Homepage",
        "slug": "/",
        "status": "published",
        "lastModified": "2025-01-17T10:00:00Z"
      }
    ],
    "total": 2960,
    "page": 1,
    "limit": 50
  }
}
```

#### Create Page
```http
POST /api/pages
Content-Type: application/json

{
  "title": "New Page",
  "content": "Page content here",
  "slug": "new-page",
  "meta": {
    "description": "Page description",
    "keywords": ["keyword1", "keyword2"]
  }
}
```

#### Update Page
```http
PUT /api/pages/{pageId}
Content-Type: application/json

{
  "title": "Updated Page Title",
  "content": "Updated content"
}
```

#### Delete Page
```http
DELETE /api/pages/{pageId}
```

### Automation Management

#### Get Automation Status
```http
GET /api/automation/status
```
=======
  "id": "content_12345",
  "status": "generating",
  "estimatedTime": "2-3 minutes"
}
```

### Automation API

#### GET `/api/automation/status`
Returns the current status of all automation systems.
>>>>>>> origin/cursor/add-more-project-content-715e

**Response:**
```json
{
<<<<<<< HEAD
  "success": true,
  "data": {
    "totalAutomations": 227,
    "activeAutomations": 45,
    "failedAutomations": 2,
    "automations": [
      {
        "id": "content-sync",
        "name": "Content Synchronization",
        "status": "running",
        "lastRun": "2025-01-17T09:30:00Z",
        "nextRun": "2025-01-17T10:00:00Z"
      }
    ]
  }
}
```

#### Start Automation
```http
POST /api/automation/start
Content-Type: application/json

{
  "automationId": "content-sync",
  "parameters": {
    "force": true,
    "priority": "high"
=======
  "systems": {
    "content_generation": "active",
    "seo_optimization": "active",
    "security_monitoring": "active",
    "performance_tracking": "active"
  },
  "lastRun": "2025-01-17T09:55:00Z",
  "nextRun": "2025-01-17T10:00:00Z"
}
```

#### POST `/api/automation/trigger`
Manually triggers a specific automation workflow.

**Request Body:**
```json
{
  "workflow": "content_quality_audit",
  "priority": "high",
  "parameters": {
    "scope": "all_pages",
    "fixIssues": true
>>>>>>> origin/cursor/add-more-project-content-715e
  }
}
```

<<<<<<< HEAD
#### Stop Automation
```http
POST /api/automation/stop
Content-Type: application/json

{
  "automationId": "content-sync"
}
```

### Monitoring & Health

#### System Health Check
```http
GET /api/health
```

**Response:**
```json
{
  "success": true,
  "data": {
    "status": "healthy",
    "timestamp": "2025-01-17T10:00:00Z",
    "services": {
      "database": "healthy",
      "cache": "healthy",
      "automation": "healthy"
    },
    "metrics": {
      "uptime": "99.9%",
      "responseTime": "45ms",
      "activeConnections": 125
    }
  }
}
```

#### Performance Metrics
```http
GET /api/metrics/performance
```

**Query Parameters:**
- `period`: Time period (1h, 24h, 7d, 30d)
- `metric`: Specific metric (responseTime, throughput, errors)

### Content Generation

#### Generate Content
```http
POST /api/content/generate
Content-Type: application/json

{
  "type": "blog-post",
  "topic": "AI Automation Trends 2025",
  "length": "medium",
  "tone": "professional",
  "keywords": ["AI", "automation", "trends"]
}
```

#### Content Templates
```http
GET /api/content/templates
```

**Response:**
```json
{
  "success": true,
  "data": {
    "templates": [
      {
        "id": "blog-post",
        "name": "Blog Post",
        "description": "Standard blog post template",
        "fields": ["title", "content", "meta", "tags"],
        "example": "..."
      }
    ]
  }
}
```

## Automation Scripts API

### PM2 Management

#### Get PM2 Status
```http
GET /api/pm2/status
```

#### Start PM2 Process
```http
POST /api/pm2/start
Content-Type: application/json

{
  "ecosystem": "ecosystem.config.cjs",
  "process": "app"
}
```

#### Restart PM2 Process
```http
POST /api/pm2/restart
Content-Type: application/json

{
  "process": "app"
}
```

### GitHub Actions Integration

#### Trigger Workflow
```http
POST /api/github/workflows/trigger
Content-Type: application/json

{
  "workflow": "ci-cd",
  "ref": "main",
  "inputs": {
    "environment": "production"
  }
}
```

#### Get Workflow Status
```http
GET /api/github/workflows/{workflowId}/status
```

### LinkedIn Automation

#### Generate Content
```http
POST /api/linkedin/generate
Content-Type: application/json

{
  "type": "post",
  "topic": "AI trends",
  "tone": "professional",
  "hashtags": ["#AI", "#Automation"]
}
```

#### Schedule Post
```http
POST /api/linkedin/schedule
Content-Type: application/json

{
  "content": "Post content here",
  "scheduledTime": "2025-01-18T10:00:00Z",
  "platform": "linkedin"
}
```

## Webhook Endpoints

### Content Webhooks

#### Content Update Webhook
```http
POST /api/webhooks/content-update
Content-Type: application/json

{
  "event": "page.updated",
  "data": {
    "pageId": "page-123",
    "changes": ["title", "content"],
    "timestamp": "2025-01-17T10:00:00Z"
  }
}
```

#### Automation Complete Webhook
```http
POST /api/webhooks/automation-complete
Content-Type: application/json

{
  "event": "automation.completed",
  "data": {
    "automationId": "content-sync",
    "status": "success",
    "duration": 45000,
    "timestamp": "2025-01-17T10:00:00Z"
=======
### SEO API

#### GET `/api/seo/analysis`
Performs SEO analysis on specified pages.

**Query Parameters:**
- `url` - Page URL to analyze
- `depth` - Analysis depth (basic, standard, comprehensive)

**Response:**
```json
{
  "score": 85,
  "issues": [
    {
      "type": "meta_description",
      "severity": "medium",
      "description": "Missing meta description",
      "fix": "Add meta description tag"
    }
  ],
  "recommendations": [
    "Optimize page title length",
    "Add structured data markup"
  ]
}
```

#### POST `/api/seo/optimize`
Automatically optimizes SEO elements.

**Request Body:**
```json
{
  "url": "/blog/ai-automation-trends-2025",
  "optimizations": ["meta_tags", "structured_data", "internal_links"]
}
```

## Automation Endpoints

### Content Generation

#### `/api/automation/content/factory`
AI-powered content generation system.

**Features:**
- Blog post generation
- Case study creation
- Resource page development
- SEO optimization

#### `/api/automation/content/quality`
Content quality assessment and improvement.

**Capabilities:**
- Grammar and style checking
- SEO optimization
- Readability scoring
- Content gap analysis

### Performance Monitoring

#### `/api/automation/performance/lighthouse`
Lighthouse performance monitoring.

**Metrics:**
- Performance score
- Accessibility score
- Best practices score
- SEO score

#### `/api/automation/performance/budgets`
Performance budget monitoring.

**Thresholds:**
- First Contentful Paint: < 1.5s
- Largest Contentful Paint: < 2.5s
- Cumulative Layout Shift: < 0.1

### Security

#### `/api/automation/security/scan`
Automated security scanning.

**Scans:**
- Dependency vulnerabilities
- Code security issues
- Configuration security
- Access control review

## Integration APIs

### GitHub Actions Integration

#### `/api/integration/github/status`
GitHub Actions workflow status.

#### `/api/integration/github/trigger`
Trigger GitHub Actions workflows.

### Netlify Integration

#### `/api/integration/netlify/deploy`
Trigger Netlify deployments.

#### `/api/integration/netlify/functions`
Manage Netlify functions.

### PM2 Integration

#### `/api/integration/pm2/status`
PM2 process status.

#### `/api/integration/pm2/restart`
Restart PM2 processes.

## Webhook Endpoints

### Content Updates

#### POST `/api/webhooks/content/updated`
Triggered when content is updated.

**Payload:**
```json
{
  "event": "content_updated",
  "page": "/blog/new-post",
  "timestamp": "2025-01-17T10:00:00Z",
  "changes": ["title", "content", "meta_tags"]
}
```

### Automation Events

#### POST `/api/webhooks/automation/completed`
Triggered when automation completes.

**Payload:**
```json
{
  "event": "automation_completed",
  "workflow": "content_generation",
  "status": "success",
  "duration": "2m 30s",
  "results": {
    "pagesCreated": 5,
    "issuesFixed": 12
>>>>>>> origin/cursor/add-more-project-content-715e
  }
}
```

## Error Handling

### Standard Error Response
```json
{
<<<<<<< HEAD
  "success": false,
  "error": {
    "code": "VALIDATION_ERROR",
    "message": "Invalid input parameters",
    "details": [
      {
        "field": "title",
        "message": "Title is required"
      }
    ]
  },
  "timestamp": "2025-01-17T10:00:00Z"
=======
  "error": {
    "code": "VALIDATION_ERROR",
    "message": "Invalid request parameters",
    "details": {
      "field": "url",
      "issue": "URL format is invalid"
    }
  },
  "timestamp": "2025-01-17T10:00:00Z",
  "requestId": "req_12345"
>>>>>>> origin/cursor/add-more-project-content-715e
}
```

### Error Codes
<<<<<<< HEAD
- `AUTHENTICATION_ERROR`: Invalid or missing authentication
- `AUTHORIZATION_ERROR`: Insufficient permissions
- `VALIDATION_ERROR`: Invalid input parameters
- `NOT_FOUND`: Resource not found
- `RATE_LIMIT_EXCEEDED`: Too many requests
- `INTERNAL_ERROR`: Server error
=======
- `VALIDATION_ERROR` - Invalid request parameters
- `AUTHENTICATION_ERROR` - Authentication required
- `AUTHORIZATION_ERROR` - Insufficient permissions
- `RESOURCE_NOT_FOUND` - Requested resource not found
- `INTERNAL_ERROR` - Server-side error
- `RATE_LIMIT_EXCEEDED` - Too many requests

## Rate Limiting

- **Standard endpoints**: 100 requests per minute
- **Automation endpoints**: 10 requests per minute
- **Webhook endpoints**: 1000 requests per minute

## Authentication

### API Keys
Include your API key in the `Authorization` header:
```
Authorization: Bearer YOUR_API_KEY
```

### OAuth 2.0
For OAuth integration, use the standard OAuth 2.0 flow with these endpoints:
- `/oauth/authorize` - Authorization endpoint
- `/oauth/token` - Token endpoint
- `/oauth/revoke` - Token revocation
>>>>>>> origin/cursor/add-more-project-content-715e

## SDKs and Libraries

### JavaScript/Node.js
```bash
<<<<<<< HEAD
npm install @zion-holdings/bolt-api
```

```javascript
import { BoltAPI } from '@zion-holdings/bolt-api';

const api = new BoltAPI({
  apiKey: 'your-api-key',
  baseURL: 'https://bolt.new.zion.app'
});

// Get pages
const pages = await api.pages.list();

// Create content
const content = await api.content.generate({
  type: 'blog-post',
  topic: 'AI Trends'
});
=======
npm install @zion-app/sdk
>>>>>>> origin/cursor/add-more-project-content-715e
```

### Python
```bash
<<<<<<< HEAD
pip install bolt-api-python
```

```python
from bolt_api import BoltAPI

api = BoltAPI(api_key='your-api-key')

# Get automation status
status = api.automation.get_status()

# Generate content
content = api.content.generate(
    type='blog-post',
    topic='AI Trends'
)
```

## Rate Limits and Quotas

### Free Tier
- 100 API calls per day
- 10 automation runs per month
- Basic content generation

### Pro Tier
- 10,000 API calls per day
- 100 automation runs per month
- Advanced content generation
- Priority support

### Enterprise Tier
- Unlimited API calls
- Unlimited automation runs
- Custom content generation
- Dedicated support
- Custom integrations

## WebSocket API

### Real-time Updates

Connect to WebSocket endpoint for real-time updates:
```javascript
const ws = new WebSocket('wss://bolt.new.zion.app/ws');

ws.onmessage = (event) => {
  const data = JSON.parse(event.data);
  
  if (data.type === 'automation.update') {
    console.log('Automation status:', data.data);
  }
};
```

### WebSocket Events
- `automation.update`: Automation status changes
- `content.update`: Content modification events
- `system.health`: System health updates
- `performance.metrics`: Real-time performance data

## Testing

### Test Endpoints
```http
GET /api/test/health
POST /api/test/webhook
GET /api/test/automation
```

### Mock Data
```http
GET /api/test/mock/pages
GET /api/test/mock/automations
GET /api/test/mock/metrics
=======
pip install zion-app-sdk
```

### Go
```bash
go get github.com/zion-app/go-sdk
```

## Examples

### Content Generation
```javascript
const response = await fetch('/api/automation/content/factory', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Authorization': `Bearer ${apiKey}`
  },
  body: JSON.stringify({
    type: 'blog_post',
    topic: 'Future of AI Automation',
    keywords: ['AI', 'automation', 'future'],
    length: 'long'
  })
});

const result = await response.json();
```

### Performance Monitoring
```javascript
const status = await fetch('/api/automation/performance/lighthouse?url=/blog/post');
const metrics = await status.json();
console.log(`Performance Score: ${metrics.performance}`);
>>>>>>> origin/cursor/add-more-project-content-715e
```

## Support

<<<<<<< HEAD
### Documentation
- [Interactive API Explorer](https://bolt.new.zion.app/api-explorer)
- [SDK Documentation](https://docs.zion-holdings.com/bolt-api)
- [Examples Repository](https://github.com/Zion-Holdings/bolt-api-examples)

### Contact
- **API Support**: api-support@zion-holdings.com
- **Technical Issues**: tech-support@zion-holdings.com
- **Feature Requests**: features@zion-holdings.com

---

*Last updated: January 17, 2025*
*API Version: v1.0.0*
=======
For API support and questions:
- Check the [Developer Guide](./DEVELOPER_GUIDE.md)
- Review [GitHub Issues](https://github.com/Zion-Holdings/zion.app/issues)
- Contact the development team
- Join community discussions
>>>>>>> origin/cursor/add-more-project-content-715e
