module.exports = {
  apps: [
    {
      name: 'automation',
      script: 'npm',
      args: 'run automation:all:plus',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'autonomous',
      script: 'npm',
      args: 'run autonomous:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'linting',
      script: 'npm',
      args: 'run linting:all',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'syntax',
      script: 'npm',
      args: 'run syntax:all',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'google-docs',
      script: 'npm',
      args: 'run google-docs:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'cursor-memory',
      script: 'npm',
      args: 'run cursor:memory',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'git-cron',
      script: 'npm',
      args: 'run git:cron:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'sync-health-cron',
      script: 'npm',
      args: 'run sync-health:cron:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'frontend-sync',
      script: 'npm',
      args: 'run frontend-sync:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'sync-manager',
      script: 'bash',
      args: ['-lc', 'automation/sync-manager.sh'],
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'venture',
      script: 'npm',
      args: 'run venture:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'feature-marketing',
      script: 'npm',
      args: 'run feature-marketing:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'instagram-marketing',
      script: 'npm',
      args: 'run instagram:marketing:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'linkedin-marketing',
      script: 'npm',
      args: 'run linkedin:marketing:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'cursor-chat',
      script: 'npm',
      args: 'run cursor:chat:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'links',
      script: 'npm',
      args: 'run links:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'promo',
      script: 'npm',
      args: 'run promo:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'spec-dev',
      script: 'npm',
      args: 'run spec-dev:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'meta-orchestrator',
      script: 'npm',
      args: 'run meta:orchestrator',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    },
    {
      name: 'alignment',
      script: 'npm',
      args: 'run alignment:start',
      env: { NODE_ENV: 'production' },
      autorestart: true,
      restart_delay: 5000,
    }
  ]
};


