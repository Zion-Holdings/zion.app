@tailwind base;
@tailwind components;
@tailwind utilities;

@import './styles/navbar.css';

@layer base {
  :root {
    --font-sans: 'Orbitron', system-ui, sans-serif;

    --background: 0 0% 100%;
    --foreground: 224 71% 4%;

    --card: 0 0% 100%;
    --card-foreground: 224 71% 4%;

    --popover: 0 0% 100%;
    --popover-foreground: 224 71% 4%;

    --primary: 262 83% 58%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96%;
    --secondary-foreground: 222 47% 11%;

    --muted: 210 40% 96%;
    --muted-foreground: 215 20% 45%;

    --accent: 210 40% 96%;
    --accent-foreground: 224 71% 4%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 210 40% 98%;

    --border: 214 32% 91%;
    --input: 214 32% 91%;
    --ring: 262 83% 58%;

    --radius: 0.5rem;

    --sidebar-background: 210 40% 96%;

    --sidebar-foreground: 224 71% 4%;

    --sidebar-primary: 262 83% 58%;

    --sidebar-primary-foreground: 210 40% 98%;

    --sidebar-accent: 210 40% 96%;

    --sidebar-accent-foreground: 224 71% 4%;

    --sidebar-border: 214 32% 91%;

    --sidebar-ring: 262 83% 58%;

    /* Variables to be set by themeUtils.ts
    --primary-color: #3b82f6; (example)
    --background-color: #ffffff; (example)
    --text-color: #000000; (example)
    --accent-color: #3b82f6; (example)
    --button-color: #3b82f6; (example)
    --card-background: #f8fafc; (example)
    */
  }

  /*
    The .dark and .light classes in :root are no longer needed here
    as theme colors are applied dynamically via JavaScript using CSS custom properties
    set on the :root element (document.documentElement).
    The ThemeProvider component now handles applying these styles.
    The `document.documentElement.classList.add('dark')` or `document.documentElement.classList.add('light')`
    is still managed by ThemeProvider for any CSS that might directly depend on these classes,
    but the color variable definitions themselves are dynamic.
  */
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  .pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  /* Custom scrollbar for webkit browsers */
  ::-webkit-scrollbar {
    width: 10px;
  }

  ::-webkit-scrollbar-track {
    background: theme('colors["zion-blue"].DEFAULT');
  }

  ::-webkit-scrollbar-thumb {
    background: theme('colors["zion-purple"].dark');
    border-radius: 5px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: theme('colors["zion-purple"].DEFAULT');
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* LiveKit UI overrides */
  [data-lk-theme='default'] {
    --lk-color-accent: #06B6D4;
    --lk-button-background: #06B6D4;
    --lk-button-background-hover: #0891B2;
    --lk-bg1: #0B1120;
    --lk-bg2: #0F172A;
  }

  /* Skip link styles */
  .skip-link {
    position: absolute;
    top: -40px;
    left: 0;
    background: #ffffff;
    color: #000000;
    padding: 0.5rem 1rem;
    z-index: 1000;
    transition: top 0.3s;
  }

  .skip-link:focus {
    top: 0;
  }

  /* Improved placeholder contrast */
  input::placeholder,
  textarea::placeholder {
    color: #b3b3b3;
    opacity: 1;
  }
}
  @keyframes slide-up {
    from { transform: translateY(100%); }
    to { transform: translateY(0); }
  }

  .animate-slide-up {
    animation: slide-up 0.3s ease-out;
  }
