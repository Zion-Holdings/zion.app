export interface LinkedInTask { id: string; name: string; schedule: string; } export class LinkedInCronManager { private tasks: Map<string, LinkedInTask> = new Map(); async startTask(task: LinkedInTask): Promise<void> { this.tasks.set(task.id, task); console.log("Started task:", task.name); } async stopTask(taskId: string): Promise<void> { this.tasks.delete(taskId); console.log("Stopped task:", taskId); } async stopAllTasks(): Promise<void> { const tasks = Array.from(this.tasks.values()); for (const task of tasks) { await this.stopTask(task.id); } } } const linkedInCronManager = new LinkedInCronManager(); export default LinkedInCronManager; export { linkedInCronManager };
