/**
 * Dynamic component imports - reduces initial bundle size
 * Auto-generated by performance optimizer
 */
import React from 'react';
import dynamic from 'next/dynamic';

const LoadingSpinner = () => React.createElement('div', 
  { className: "flex items-center justify-center p-8" },
  React.createElement('div', { className: "animate-spin rounded-full h-8 w-8 border-b-2 border-primary" })
);

const LoadingSkeleton = () => React.createElement('div',
  { className: "animate-pulse space-y-4" },
  React.createElement('div', { className: "h-4 bg-gray-200 rounded w-3/4" }),
  React.createElement('div', { className: "h-4 bg-gray-200 rounded w-1/2" }),
  React.createElement('div', { className: "h-32 bg-gray-200 rounded" })
);

// Chart components (heavy - only load when needed)
// export const DynamicChart = dynamic(
//   () => import('../components/charts/Chart'),
//   { 
//     loading: LoadingSkeleton,
//     ssr: false 
//   }
// );

export const DynamicPieChart = dynamic(
  () => import('recharts').then(mod => ({ default: mod.PieChart })),
  { 
    loading: LoadingSkeleton,
    ssr: false 
  }
);

export const DynamicBarChart = dynamic(
  () => import('recharts').then(mod => ({ default: mod.BarChart })),
  {
    loading: LoadingSkeleton,
    ssr: false
  }
);

// Developer tools
export const DynamicApiLogsChart = dynamic(
  () => import('../components/developers/ApiLogsChart').then(mod => ({ default: mod.ApiLogsChart })),
  {
    loading: LoadingSkeleton,
    ssr: false
  }
);

// Analytics components
export const DynamicAnalyticsChart = dynamic(
  () => import('../components/analytics/AnalyticsChart'),
  {
    loading: LoadingSkeleton,
    ssr: false
  }
);

// PDFGenerator and RichEditor components do not exist, so remove their dynamic imports

// Use ReactPlayer for video player
export const DynamicVideoPlayer = dynamic(
  () => import('react-player').then(mod => ({ default: mod.default })),
  {
    loading: LoadingSkeleton,
    ssr: false
  }
);

// Use ModelViewer as defined in ProductGallery
const ModelViewer = React.lazy(async () => {
  await import('@google/model-viewer');
  return {
    default: (props: any) => (
      React.createElement('model-viewer', props)
    ),
  };
});
export { ModelViewer as DynamicModelViewer };

// Virtual list for large datasets
export const DynamicVirtualList = dynamic(
  () => import('react-window').then(mod => ({ default: mod.FixedSizeList })),
  { 
    loading: LoadingSkeleton,
    ssr: false 
  }
);

// Usage examples:
// Replace: import Chart from '../components/charts/Chart';
// With: import { DynamicChart as Chart } from '@/utils/dynamicComponents';
