/**
 * Dynamic component imports - reduces initial bundle size
 * Auto-generated by performance optimizer
 */
import dynamic from 'next/dynamic';

const LoadingSpinner = () => (
  <div className="flex items-center justify-center p-8">
    <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
  </div>
);

const LoadingSkeleton = () => (
  <div className="animate-pulse space-y-4">
    <div className="h-4 bg-gray-200 rounded w-3/4"></div>
    <div className="h-4 bg-gray-200 rounded w-1/2"></div>
    <div className="h-32 bg-gray-200 rounded"></div>
  </div>
);

// Chart components (heavy - only load when needed)
export const DynamicChart = dynamic(
  () => import('../components/charts/Chart'),
  { 
    loading: LoadingSkeleton,
    ssr: false 
  }
);

export const DynamicPieChart = dynamic(
  () => import('recharts').then(mod => ({ default: mod.PieChart })),
  { 
    loading: LoadingSkeleton,
    ssr: false 
  }
);

export const DynamicBarChart = dynamic(
  () => import('recharts').then(mod => ({ default: mod.BarChart })),
  { 
    loading: LoadingSkeleton,
    ssr: false 
  }
);

// PDF generator (heavy - only load when needed)
export const DynamicPDFGenerator = dynamic(
  () => import('../components/pdf/PDFGenerator'),
  { 
    loading: LoadingSpinner,
    ssr: false 
  }
);

// Video player (heavy - only load when needed)
export const DynamicVideoPlayer = dynamic(
  () => import('../components/video/VideoPlayer'),
  { 
    loading: LoadingSkeleton,
    ssr: false 
  }
);

// Model viewer (heavy - only load when needed)
export const DynamicModelViewer = dynamic(
  () => import('../components/ar/ModelViewer'),
  { 
    loading: LoadingSpinner,
    ssr: false 
  }
);

// Rich text editor (heavy - only load when needed)
export const DynamicRichEditor = dynamic(
  () => import('../components/editor/RichTextEditor'),
  { 
    loading: LoadingSpinner,
    ssr: false 
  }
);

// Virtual list for large datasets
export const DynamicVirtualList = dynamic(
  () => import('react-window').then(mod => ({ default: mod.FixedSizeList })),
  { 
    loading: LoadingSkeleton,
    ssr: false 
  }
);

// Usage examples:
// Replace: import Chart from '../components/charts/Chart';
// With: import { DynamicChart as Chart } from '@/utils/dynamicComponents';
