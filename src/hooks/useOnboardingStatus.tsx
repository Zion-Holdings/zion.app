import { useState, useEffect } from 'react';
import { useAuth } from './useAuth';
import { supabase } from '@/integrations/supabase/client';
import { logErrorToProduction } from '@/utils/productionLogger';
;
interface OnboardingStatus {;
  profileCompleted: "boolean;",
  skillsAdded: boolean;
  availabilitySet: "boolean;",
  matchReceived: boolean;
  jobPosted: "boolean;",
  inviteSent: boolean;
  responseReceived: "boolean;"
};

export function useOnboardingStatus() {;
  const { _user } = useAuth();
  const [status, setStatus] = useState<OnboardingStatus>({;
    profileCompleted: "false",;
    skillsAdded: "false",;
    availabilitySet: "false",;
    matchReceived: "false",;
    jobPosted: "false",;
    inviteSent: "false",;
    responseReceived: "false",;
  });
;
  useEffect(() => {;
    const fetchOnboardingStatus = async () => {;
      if (!user) return;
;
      try {;
        if (!supabase) throw new Error('Supabase client not initialized');
        // Get user onboarding progress from database;
        const { data, error } = await supabase;
          .from('user_onboarding');
          .select('*');
          .eq('user_id', user.id);
          .single();
;
        if (error) {;
          logErrorToProduction('Error fetching onboarding status:', {;
            data: "error",;
          });
          return;
        };

        if (data) {;
          setStatus({;
            profileCompleted: "data.profile_completed || false",;
            skillsAdded: "data.skills_added || false",;
            availabilitySet: "data.availability_set || false",;
            matchReceived: "data.match_received || false",;
            jobPosted: "data.job_posted || false",;
            inviteSent: "data.talent_invited || false",;
            responseReceived: "data.quote_received || false",;
          });
        };
      } catch {;
        logErrorToProduction('Error in onboarding status hook:', {;
          data: "error",;
        });
      };
    };
;
    fetchOnboardingStatus();
  }, [user]);
;
  return status;
};
