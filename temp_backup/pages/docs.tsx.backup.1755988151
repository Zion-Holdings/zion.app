import React from 'react';
import Layout from '../components/layout/Layout';
import { motion } from 'framer-motion';
import { 
<<<<<<< HEAD
  BookOpen, Code, FileText, Search, 
  ArrowRight, Star, Shield, CheckCircle, TrendingUp,
  Infinity, Eye, Sparkles, Clock, Zap, Rocket, Brain, Atom
} from 'lucide-react';

const DocsPage: React.FC = () => {
  const categories = [
    {
      title: "Getting Started",
      description: "Quick start guides and basic setup instructions",
      icon: Rocket,
      color: "from-blue-500 to-cyan-500",
      articles: [
        { title: "Quick Start Guide", description: "Get up and running in 5 minutes", href: "/docs/quick-start" },
        { title: "Installation", description: "Step-by-step installation guide", href: "/docs/installation" },
        { title: "Configuration", description: "Configure your environment", href: "/docs/configuration" }
      ]
    },
    {
      title: "AI & Machine Learning",
      description: "AI consciousness and machine learning documentation",
      icon: Brain,
      color: "from-purple-500 to-pink-500",
      articles: [
        { title: "AI Consciousness API", description: "Integrate AI consciousness into your apps", href: "/docs/ai-consciousness-api" },
        { title: "Neural Networks", description: "Build and train neural networks", href: "/docs/neural-networks" },
        { title: "Emotional Intelligence", description: "Implement emotional AI systems", href: "/docs/emotional-intelligence" }
      ]
    },
    {
      title: "Quantum Computing",
      description: "Quantum algorithms and quantum-resistant solutions",
      icon: Atom,
      color: "from-indigo-500 to-purple-500",
      articles: [
        { title: "Quantum Algorithms", description: "Implement quantum algorithms", href: "/docs/quantum-algorithms" },
        { title: "Quantum Security", description: "Quantum-resistant cryptography", href: "/docs/quantum-security" },
        { title: "Quantum API", description: "Quantum computing API reference", href: "/docs/quantum-api" }
      ]
    },
    {
      title: "Space Technology APIs",
      description: "Documentation for autonomous space exploration and resource intelligence.",
      icon: <Rocket className="w-8 h-8" />,
      color: "from-orange-500 to-red-600",
      docs: [
        { name: "API Overview", description: "Space technology API introduction", status: "Complete" },
        { name: "Authentication", description: "API authentication and authorization", status: "Complete" },
        { name: "Endpoints", description: "Complete API endpoint reference", status: "Complete" },
        { name: "Webhooks", description: "Real-time data streaming setup", status: "Complete" }
=======
  BookOpen, 
  Code, 
  FileText, 
  Search, 
  Download, 
  ExternalLink, 
  ArrowRight,
  Github,
  Globe,
  Users,
  Zap
} from 'lucide-react';

const DocumentationPage: React.FC = () => {
  const categories = [
    {
      title: 'Getting Started',
      description: 'Quick start guides and tutorials for new users',
      icon: <Zap className="w-8 h-8 text-yellow-400" />,
      links: [
        { title: 'Quick Start Guide', href: '/docs/getting-started', description: 'Get up and running in minutes' },
        { title: 'Installation', href: '/docs/installation', description: 'Step-by-step installation instructions' },
        { title: 'First Project', href: '/docs/first-project', description: 'Create your first project' }
      ]
    },
    {
      title: 'API Reference',
      description: 'Complete API documentation and examples',
      icon: <Code className="w-8 h-8 text-blue-400" />,
      links: [
        { title: 'Authentication', href: '/docs/api/auth', description: 'API authentication methods' },
        { title: 'Endpoints', href: '/docs/api/endpoints', description: 'All available API endpoints' },
        { title: 'SDKs', href: '/docs/api/sdks', description: 'Official SDKs and libraries' }
      ]
    },
    {
      title: 'Tutorials',
      description: 'Step-by-step guides and examples',
      icon: <BookOpen className="w-8 h-8 text-green-400" />,
      links: [
        { title: 'Building a Web App', href: '/docs/tutorials/web-app', description: 'Create a complete web application' },
        { title: 'AI Integration', href: '/docs/tutorials/ai-integration', description: 'Integrate AI into your projects' },
        { title: 'Deployment', href: '/docs/tutorials/deployment', description: 'Deploy your applications' }
      ]
    },
    {
      title: 'Reference',
      description: 'Detailed reference materials and specifications',
      icon: <FileText className="w-8 h-8 text-purple-400" />,
      links: [
        { title: 'Configuration', href: '/docs/reference/config', description: 'Configuration options and settings' },
        { title: 'CLI Commands', href: '/docs/reference/cli', description: 'Command line interface reference' },
        { title: 'Best Practices', href: '/docs/reference/best-practices', description: 'Development best practices' }
>>>>>>> origin/cursor/website-audit-and-enhancement-e046
      ]
    }
  ];

<<<<<<< HEAD
  const quickStartGuides = [
    {
      title: "AI Consciousness Platform",
      description: "Get started with our AI consciousness evolution platform in under 10 minutes.",
      difficulty: "Beginner",
      time: "10 min",
      icon: <Brain className="w-6 h-6" />,
      color: "from-purple-500 to-pink-600"
    },
    {
      title: "Quantum Computing SDK",
      description: "Set up and run your first quantum algorithm with our SDK.",
      difficulty: "Intermediate",
      time: "15 min",
      icon: <Atom className="w-6 h-6" />,
      color: "from-blue-500 to-cyan-600"
    },
    {
      title: "Cybersecurity Implementation",
      description: "Implement our zero-trust security framework in your application.",
      difficulty: "Intermediate",
      time: "20 min",
      icon: <Shield className="w-6 h-6" />,
      color: "from-green-500 to-emerald-600"
    },
    {
      title: "Space Technology APIs",
      description: "Integrate space resource intelligence into your applications.",
      difficulty: "Advanced",
      time: "25 min",
      icon: <Rocket className="w-6 h-6" />,
      color: "from-orange-500 to-red-600"
    }
  ];

  const apiReferences = [
    {
      name: "AI Consciousness API",
      version: "v2.1.0",
      status: "Stable",
      endpoints: 47,
      documentation: "Complete",
      icon: <Brain className="w-6 h-6" />
    },
    {
      name: "Quantum Computing API",
      version: "v1.8.0",
      status: "Beta",
      endpoints: 23,
      documentation: "Complete",
      icon: <Atom className="w-6 h-6" />
    },
    {
      name: "Security Framework API",
      version: "v3.0.0",
      status: "Stable",
      endpoints: 34,
      documentation: "Complete",
      icon: <Shield className="w-6 h-6" />
    },
    {
      name: "Space Technology API",
      version: "v1.2.0",
      status: "Alpha",
      endpoints: 18,
      documentation: "In Progress",
      icon: <Rocket className="w-6 h-6" />
    }
  ];

  const developerResources = [
    {
      title: "GitHub Repositories",
      description: "Open source projects and code examples",
      icon: <Github className="w-6 h-6" />,
      link: "https://github.com/ziontechgroup",
      external: true
    },
    {
      title: "Code Examples",
      description: "Practical implementation examples and snippets",
      icon: <Code className="w-6 h-6" />,
      link: "/docs/examples",
      external: false
    },
    {
      title: "SDK Downloads",
      description: "Download our official SDKs and tools",
      icon: <Download className="w-6 h-6" />,
      link: "/downloads",
      external: false
    },
    {
      title: "Developer Forum",
      description: "Community support and discussions",
      icon: <Globe className="w-6 h-6" />,
      link: "/community",
=======
  const resources = [
    {
      title: 'GitHub Repository',
      description: 'Source code and issue tracking',
      icon: <Github className="w-6 h-6" />,
      href: 'https://github.com/ziontechgroup',
      external: true
    },
    {
      title: 'Community Forum',
      description: 'Get help from the community',
      icon: <Users className="w-6 h-6" />,
      href: '/community',
      external: false
    },
    {
      title: 'Video Tutorials',
      description: 'Visual learning resources',
      icon: <Globe className="w-6 h-6" />,
      href: '/tutorials',
>>>>>>> origin/cursor/website-audit-and-enhancement-e046
      external: false
    }
  ];

  return (
<<<<<<< HEAD
    <Layout
      title="Documentation - Zion Tech Group"
      description="Comprehensive technical documentation, API references, and developer resources for Zion Tech Group's revolutionary technologies."
      keywords="documentation, API reference, developer resources, AI consciousness, quantum computing, cybersecurity, Zion Tech Group"
    >
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 text-white">
        {/* Hero Section */}
        <section className="relative pt-32 pb-20 px-4">
          <div className="max-w-7xl mx-auto text-center">
=======
    <Layout>
      <div className="min-h-screen bg-gradient-to-br from-black via-gray-900 to-black">
        {/* Hero Section */}
        <section className="relative py-20 lg:py-32 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-r from-blue-500/10 to-purple-500/10"></div>
          <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
>>>>>>> origin/cursor/website-audit-and-enhancement-e046
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
<<<<<<< HEAD
              className="mb-8"
            >
              <div className="inline-flex items-center px-4 py-2 rounded-full bg-gradient-to-r from-blue-500/20 to-cyan-500/20 border border-blue-500/30 text-blue-300 text-sm font-medium mb-6">
                <Sparkles className="w-4 h-4 mr-2" />
                Technical Documentation
              </div>
              <h1 className="text-5xl md:text-7xl font-bold bg-gradient-to-r from-blue-400 via-cyan-400 to-indigo-400 bg-clip-text text-transparent mb-6">
                Documentation
              </h1>
              <p className="text-xl md:text-2xl text-gray-300 max-w-4xl mx-auto leading-relaxed">
                Comprehensive guides, API references, and tutorials to help you build 
                with our revolutionary AI consciousness, quantum computing, and space technology platforms.
              </p>
            </motion.div>

            {/* Search Bar */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.2 }}
              className="max-w-2xl mx-auto"
            >
              <div className="relative">
                <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                <input
                  type="text"
                  placeholder="Search documentation..."
                  className="w-full pl-12 pr-4 py-4 bg-gray-800/50 border border-gray-700/50 rounded-lg text-white placeholder-gray-400 focus:border-blue-400 focus:ring-2 focus:ring-blue-400/20 focus:outline-none transition-all duration-300"
                />
              </div>
              <div className="flex flex-wrap justify-center gap-2 mt-4">
                {searchSuggestions.map((suggestion, index) => (
                  <motion.button
                    key={suggestion}
                    initial={{ opacity: 0, scale: 0.8 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ duration: 0.3, delay: 0.3 + index * 0.1 }}
                    className="px-3 py-1 bg-gray-700/50 hover:bg-gray-600/50 text-gray-300 text-sm rounded-full border border-gray-600/50 hover:border-blue-400/50 transition-all duration-300"
                  >
                    {suggestion}
                  </motion.button>
                ))}
=======
            >
              <div className="flex justify-center mb-6">
                <BookOpen className="w-16 h-16 text-blue-400" />
              </div>
              <h1 className="text-4xl lg:text-6xl font-bold text-white mb-6">
                Documentation
              </h1>
              <p className="text-xl lg:text-2xl text-gray-300 mb-8 max-w-4xl mx-auto">
                Comprehensive guides, tutorials, and reference materials to help you build amazing 
                applications with our technology platform.
              </p>
              
              {/* Search Bar */}
              <div className="max-w-2xl mx-auto mb-8">
                <div className="relative">
                  <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                  <input
                    type="text"
                    placeholder="Search documentation..."
                    className="w-full pl-12 pr-4 py-4 bg-gray-800/50 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-400 focus:ring-2 focus:ring-blue-400/20"
                  />
                </div>
              </div>

              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button className="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-8 py-4 rounded-lg font-semibold hover:from-blue-600 hover:to-purple-700 transition-all duration-300 flex items-center justify-center">
                  Get Started
                  <ArrowRight className="ml-2 w-5 h-5" />
                </button>
                <button className="border border-blue-400 text-blue-400 px-8 py-4 rounded-lg font-semibold hover:bg-blue-400 hover:text-black transition-all duration-300">
                  Download PDF
                </button>
>>>>>>> origin/cursor/website-audit-and-enhancement-e046
              </div>
            </motion.div>
          </div>
        </section>

<<<<<<< HEAD
        {/* Popular Articles */}
        <section className="py-20 px-4">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-white mb-6">Popular Articles</h2>
              <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                Start with these essential guides to get up and running quickly
              </p>
            </motion.div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {popularArticles.map((article, index) => (
                <motion.div
                  key={article.title}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 rounded-2xl p-6 border border-gray-700/50 hover:border-blue-400/50 transition-all duration-300 hover:shadow-2xl hover:shadow-blue-500/20"
                >
                  <div className="mb-4">
                    <span className="px-3 py-1 bg-blue-500/20 text-blue-400 rounded-full text-sm border border-blue-500/30">
                      {article.category}
                    </span>
                  </div>
                  <h3 className="text-xl font-bold text-white mb-3">{article.title}</h3>
                  <p className="text-gray-300 mb-4">{article.description}</p>
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-400">{article.readTime}</span>
                    <motion.button
                      whileHover={{ scale: 1.05 }}
                      whileTap={{ scale: 0.95 }}
                      className="text-blue-400 hover:text-blue-300 font-medium flex items-center group"
                    >
                      Read More
                      <ArrowRight className="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform duration-300" />
                    </motion.button>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Documentation Categories */}
        <section className="py-20 px-4 bg-gradient-to-b from-gray-900/50 to-black/50">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-white mb-6">Documentation Categories</h2>
              <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                Explore our comprehensive documentation organized by technology area
              </p>
            </motion.div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {categories.map((category, index) => (
                <motion.div
                  key={category.title}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 rounded-2xl p-8 border border-gray-700/50 hover:border-blue-400/50 transition-all duration-300 hover:shadow-2xl hover:shadow-blue-500/20"
                >
                  <div className={`w-16 h-16 bg-gradient-to-r ${category.color} rounded-lg flex items-center justify-center mb-6`}>
                    <category.icon className="w-8 h-8 text-white" />
                  </div>
                  <h3 className="text-2xl font-bold text-white mb-4">{category.title}</h3>
                  <p className="text-gray-300 mb-6">{category.description}</p>
                  
                  <div className="space-y-3 mb-6">
                    {category.articles.map((article, articleIndex) => (
                      <div key={articleIndex} className="flex items-center justify-between p-3 bg-gray-700/30 rounded-lg hover:bg-gray-700/50 transition-colors duration-300">
                        <div>
                          <h4 className="text-white font-medium">{article.title}</h4>
                          <p className="text-gray-400 text-sm">{article.description}</p>
                        </div>
                        <ArrowRight className="w-4 h-4 text-gray-400" />
                      </div>
                    ))}
                  </div>
                  
                  <motion.button
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                    className="w-full bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-300 flex items-center justify-center group"
                  >
                    View All {category.title}
                    <ArrowRight className="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform duration-300" />
                  </motion.button>
=======
        {/* Categories Section */}
        <section className="py-20">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
              className="text-center mb-16"
            >
              <h2 className="text-3xl lg:text-4xl font-bold text-white mb-4">
                Documentation Categories
              </h2>
              <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                Explore our comprehensive documentation organized by category to find exactly what you need.
              </p>
            </motion.div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              {categories.map((category, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  className="bg-gradient-to-br from-gray-800 to-gray-900 p-8 rounded-xl border border-gray-700 hover:border-blue-400/50 transition-all duration-300"
                >
                  <div className="flex items-center mb-6">
                    {category.icon}
                    <h3 className="text-2xl font-bold text-white ml-4">{category.title}</h3>
                  </div>
                  <p className="text-gray-300 mb-6">{category.description}</p>
                  
                  <div className="space-y-4">
                    {category.links.map((link, linkIndex) => (
                      <a
                        key={linkIndex}
                        href={link.href}
                        className="block p-4 bg-gray-700/50 rounded-lg hover:bg-gray-700 transition-all duration-300 group"
                      >
                        <div className="flex items-center justify-between">
                          <div>
                            <h4 className="text-lg font-semibold text-white group-hover:text-blue-400 transition-colors duration-300">
                              {link.title}
                            </h4>
                            <p className="text-gray-400 text-sm">{link.description}</p>
                          </div>
                          <ArrowRight className="w-5 h-5 text-gray-400 group-hover:text-blue-400 group-hover:translate-x-1 transition-all duration-300" />
                        </div>
                      </a>
                    ))}
                  </div>
>>>>>>> origin/cursor/website-audit-and-enhancement-e046
                </motion.div>
              ))}
            </div>
          </div>
        </section>

<<<<<<< HEAD
        {/* Additional Resources */}
        <section className="py-20 px-4">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-white mb-6">Additional Resources</h2>
              <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                Beyond documentation, discover tools and resources to accelerate your development
              </p>
            </motion.div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {[
                {
                  icon: Code,
                  title: "Code Examples",
                  description: "Ready-to-use code snippets and examples",
                  href: "/docs/code-examples",
                  color: "from-purple-500 to-pink-500"
                },
                {
                  icon: FileText,
                  title: "Tutorials",
                  description: "Step-by-step tutorials and guides",
                  href: "/docs/tutorials",
                  color: "from-blue-500 to-cyan-500"
                },
                {
                  icon: BookOpen,
                  title: "Best Practices",
                  description: "Industry best practices and guidelines",
                  href: "/docs/best-practices",
                  color: "from-green-500 to-emerald-500"
                },
                {
                  icon: Search,
                  title: "API Explorer",
                  description: "Interactive API testing and exploration",
                  href: "/docs/api-explorer",
                  color: "from-orange-500 to-red-500"
                }
              ].map((resource, index) => (
                <motion.div
                  key={resource.title}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  className="text-center p-6"
                >
                  <div className={`w-16 h-16 bg-gradient-to-r ${resource.color} rounded-lg flex items-center justify-center mx-auto mb-4`}>
                    <resource.icon className="w-8 h-8 text-white" />
                  </div>
                  <h3 className="text-xl font-semibold text-white mb-3">{resource.title}</h3>
                  <p className="text-gray-300 mb-4">{resource.description}</p>
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="text-blue-400 hover:text-blue-300 font-medium flex items-center justify-center group mx-auto"
                  >
                    Explore
                    <ArrowRight className="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform duration-300" />
                  </motion.button>
=======
        {/* Resources Section */}
        <section className="py-20 bg-gray-900/50">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
              className="text-center mb-16"
            >
              <h2 className="text-3xl lg:text-4xl font-bold text-white mb-4">
                Additional Resources
              </h2>
              <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                Beyond documentation, explore these additional resources to enhance your development experience.
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {resources.map((resource, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  className="bg-gray-800/50 p-6 rounded-xl border border-gray-700 hover:border-blue-400/50 transition-all duration-300"
                >
                  <div className="flex items-center mb-4">
                    {resource.icon}
                    <h3 className="text-xl font-semibold text-white ml-3">{resource.title}</h3>
                  </div>
                  <p className="text-gray-300 mb-4">{resource.description}</p>
                  <a
                    href={resource.href}
                    className="inline-flex items-center text-blue-400 hover:text-blue-300 transition-colors duration-300"
                    target={resource.external ? '_blank' : undefined}
                    rel={resource.external ? 'noopener noreferrer' : undefined}
                  >
                    Visit Resource
                    {resource.external && <ExternalLink className="w-4 h-4 ml-2" />}
                  </a>
>>>>>>> origin/cursor/website-audit-and-enhancement-e046
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
<<<<<<< HEAD
        <section className="py-20 px-4">
          <div className="max-w-4xl mx-auto text-center">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
            >
              <h2 className="text-4xl font-bold text-white mb-6">
                Need Help Getting Started?
              </h2>
              <p className="text-xl text-gray-300 mb-8">
                Our team is here to help you succeed with our technology platforms
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white font-semibold py-4 px-8 rounded-lg transition-all duration-300 flex items-center justify-center group"
                >
                  Contact Support
                  <ArrowRight className="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-300" />
                </motion.button>
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="border border-blue-400 text-blue-400 hover:bg-blue-400 hover:text-white font-semibold py-4 px-8 rounded-lg transition-all duration-300"
                >
                  Join Community
                </motion.button>
=======
        <section className="py-20 bg-gradient-to-r from-blue-500/10 to-purple-500/10">
          <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
            >
              <h2 className="text-3xl lg:text-4xl font-bold text-white mb-6">
                Need Help with Documentation?
              </h2>
              <p className="text-xl text-gray-300 mb-8">
                Can't find what you're looking for? Our team is here to help you succeed.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button className="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-8 py-4 rounded-lg font-semibold hover:from-blue-600 hover:to-purple-700 transition-all duration-300">
                  Contact Support
                </button>
                <button className="border border-blue-400 text-blue-400 px-8 py-4 rounded-lg font-semibold hover:bg-blue-400 hover:text-black transition-all duration-300">
                  Request Feature
                </button>
>>>>>>> origin/cursor/website-audit-and-enhancement-e046
              </div>
            </motion.div>
          </div>
        </section>
      </div>
    </Layout>
  );
};

<<<<<<< HEAD
export default DocsPage;
=======
export default DocumentationPage;
>>>>>>> origin/cursor/website-audit-and-enhancement-e046
