import React, { useState, useEffect } from 'react';
import SEO from '../components/SEO';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  Search, Grid, List,
  Brain, Atom, Shield, Target, Rocket,
  ArrowRight, Check, Palette, Heart, Truck, GraduationCap,
  Building, Network, Zap
} from 'lucide-react';

// Import our new service data
import { enterpriseITSolutions } from '../data/2034-enterprise-it-solutions';
import { innovativeMicroSaasSolutions } from '../data/2034-innovative-micro-saas-solutions';
import { cuttingEdgeAIServices } from '../data/2034-cutting-edge-ai-services';
import { real2025Q4AugmentedBatch } from '../data/real-2025-q4-augmented-batch';
import { real2029Q3Additions } from '../data/real-2029-q3-additions';
import { validatedServices2025Q4 } from '../data/real-validated-2025-q4-additions';
import { real2035Q2Additions } from '../data/real-2035-q2-additions';
import { real2036ServiceExpansions } from '../data/real-2036-service-expansions';
import { innovative2036MicroSaasServices } from '../data/innovative-2036-micro-saas-services';
import { innovative2036ITServices } from '../data/innovative-2036-it-services';
import { innovative2037MicroSaasServices } from '../data/innovative-2037-micro-saas-services';
import { innovative2037ITServices } from '../data/innovative-2037-it-services';
import { innovative2037AIServices } from '../data/innovative-2037-ai-services';
import { innovative2038CuttingEdgeServices } from '../data/innovative-2038-cutting-edge-services';
import { innovative2038ITInfrastructureServices } from '../data/innovative-2038-it-infrastructure-services';
import { innovative2037Services } from '../data/innovative-2037-services';
import { advanced2038Services } from '../data/advanced-2038-services';
import { revolutionary2039Services } from '../data/revolutionary-2039-services';
import { revolutionary2040FuturisticServices } from '../data/revolutionary-2040-futuristic-services';
import { revolutionary2041AdvancedServices } from '../data/revolutionary-2041-advanced-services';
import { innovative2040FuturisticServices } from '../data/innovative-2040-futuristic-services';
import { advanced2041EnterpriseServices } from '../data/advanced-2041-enterprise-services';
import { revolutionary2042MicroSaasServices } from '../data/revolutionary-2042-micro-saas-services';

// Import our new 2025 advanced services
import { advanced2025MicroSaasExpansion } from '../data/2025-advanced-micro-saas-expansion';
import { advanced2025ITSolutionsExpansion } from '../data/2025-advanced-it-solutions-expansion';
import { advanced2025AIServicesExpansion } from '../data/2025-advanced-ai-services-expansion';
// Import our new 2025 innovative services expansion
import { innovative2025MicroSaasExpansion } from '../data/innovative-2025-micro-saas-expansion';
import { innovative2025ITSolutionsExpansion } from '../data/innovative-2025-it-solutions-expansion';
import { innovative2025AIServicesExpansion } from '../data/innovative-2025-ai-services-expansion';
// Import our new 2025 innovative AI automation services
import { innovativeAIAutomationServices2025 } from '../data/2025-innovative-ai-automation-services';
// Import our new 2025 quantum and emerging tech services
import { quantumEmergingTechServices2025 } from '../data/2025-quantum-emerging-tech-services';
// Import our new 2025 innovative IT infrastructure services
import { innovativeITInfrastructureServices2025 } from '../data/2025-innovative-it-infrastructure-services';
// Import our new 2025 innovative business automation services
import { innovativeBusinessAutomationServices2025 } from '../data/2025-innovative-business-automation-services';

// Import our new 2025 Q4 innovative services
import { innovative2025Q4NewServices } from '../data/innovative-2025-q4-new-services';
import { advancedITInfrastructureServices2025 } from '../data/advanced-it-infrastructure-services-2025';
import { comprehensiveServicesAdvertising2025 } from '../data/comprehensive-services-advertising-2025';

// Import our new innovative 2040 services
import { innovative2040ITServices } from '../data/innovative-2040-it-services';
// Import our new 2025 advanced enterprise services
import { advancedEnterpriseServices } from '../data/2025-advanced-enterprise-services-expansion';
import { cuttingEdgeITInfrastructureServices } from '../data/2025-cutting-edge-it-infrastructure';

// Import our NEW 2025 advanced services
import { advancedAIAutomationPlatforms2025 } from '../data/2025-advanced-ai-automation-platforms';
import { innovativeITInfrastructureSolutions2025 } from '../data/2025-innovative-it-infrastructure-solutions';
import { specializedMicroSaasSolutions2025 } from '../data/2025-specialized-micro-saas-solutions';
import { emergingTechnologyServices2025 } from '../data/2025-emerging-technology-services';

// Import existing service data
import { realMicroSaasServices } from '../data/real-micro-saas-services';
import { innovativeAIServices } from '../data/innovative-ai-services';
import { enterpriseITServices } from '../data/enterprise-it-services';
import { emergingTechServices } from '../data/emerging-tech-services';
import { newRealServices } from '../data/new-real-services';
import { realOperationalServices } from '../data/real-operational-services';
import { marketReadyServices } from '../data/market-ready-services';
import { marketValidatedServices } from '../data/market-validated-services';
import { industryRealServices } from '../data/industry-real-services';

// Helper function to get service category
const getServiceCategory = (service: any) => {
  if (service.category) {
    // Map specific categories to our filter categories
    const categoryMap: { [key: string]: string } = {
      'AI & Development': 'ai-autonomous',
      'AI & Business Operations': 'ai-autonomous',
      'AI & Cybersecurity': 'ai-autonomous',
      'AI & Data Science': 'ai-autonomous',
      'AI & Customer Success': 'ai-autonomous',
      'Quantum & AI': 'quantum-tech',
      'Quantum & Cybersecurity': 'quantum-tech',
      'Quantum & Fintech': 'quantum-tech',
      'Quantum & Logistics': 'quantum-tech',
      'Quantum & Materials Science': 'quantum-tech',
      'Space Technology': 'space-tech',
      'Metaverse & AI': 'metaverse-dev',
      'Metaverse & Holographics': 'metaverse-dev',
      'Space Technology & AI': 'space-tech',
      'IT Infrastructure & Security': 'it-infrastructure',
      'IT Infrastructure & Cloud': 'it-infrastructure',
      'IT Infrastructure & DevOps': 'it-infrastructure',
      'IT Infrastructure & Database': 'it-infrastructure',
      'IT Infrastructure & AI': 'it-infrastructure',
      'IT Infrastructure & Edge Computing': 'it-infrastructure',
      'Industry-Specific Solutions': 'industry-solutions',
      'Quantum Computing & AI': 'quantum-tech',
      'Metaverse & Virtual Reality': 'metaverse-dev',
      'Blockchain & AI': 'blockchain-tech',
      'Robotics & Automation': 'robotics-tech'
    };
    
    return categoryMap[service.category] || service.category.toLowerCase().replace(/\s+/g, '-');
  }
  if (service.type) return service.type;
  return 'Other';
};

// Helper function to get service pricing
<<<<<<< HEAD
const getServicePricing = (service: any) => {
=======
const getServicePricing = (service: { pricing?: { starter?: string; monthly?: number | string }; price?: { monthly?: number } | string }) => {
>>>>>>> origin/cursor/website-audit-content-update-and-deployment-512d
  if (service.pricing?.starter) return service.pricing.starter;
  if (service.pricing?.monthly) return `$${service.pricing.monthly}/month`;
  if (typeof service.price === 'string') return service.price;
  if (service.price?.monthly) return `$${service.price.monthly}/month`;
  return 'Contact for pricing';
};

// Helper function to get service features
const getServiceFeatures = (service: any) => {
  if (service.features) return service.features;
  if (service.keyFeatures) return service.keyFeatures;
  return [];
};

// Helper function to get service description
const getServiceDescription = (service: any) => {
  if (service.description) return service.description;
  if (service.tagline) return service.tagline;
  return 'No description available';
};

// Create unified services array
const allServices = [
  ...enterpriseITSolutions,
  ...innovativeMicroSaasSolutions,
  ...cuttingEdgeAIServices,
  ...realMicroSaasServices,
  ...innovativeAIServices,
  ...enterpriseITServices,
  ...emergingTechServices,
  ...newRealServices,
  ...realOperationalServices,
  ...marketReadyServices,
  ...marketValidatedServices,
  // Our new 2025 Q4 innovative services
  ...innovative2025Q4NewServices,
  ...advancedITInfrastructureServices2025,
  ...industryRealServices,
  ...real2025Q4AugmentedBatch,
  ...real2029Q3Additions,
  ...validatedServices2025Q4,
  ...real2035Q2Additions,
  ...real2036ServiceExpansions,
  ...innovative2036MicroSaasServices,
  ...innovative2036ITServices,
  // Our new 2025 advanced services
  ...advancedAIAutomationPlatforms2025,
  ...innovativeITInfrastructureSolutions2025,
  ...specializedMicroSaasSolutions2025,
  ...emergingTechnologyServices2025,
  // Our new innovative services
  ...innovative2037MicroSaasServices,
  ...innovative2037ITServices,
  ...innovative2037AIServices,
  ...innovative2038CuttingEdgeServices,
  ...innovative2038ITInfrastructureServices,
  // Our additional innovative services
  ...innovative2037Services,
  ...advanced2038Services,
  ...revolutionary2039Services,
  
  // Our new innovative 2040 services
  ...innovative2040FuturisticServices,
  ...innovative2040ITServices,
  // Our new comprehensive services
  ...revolutionary2040FuturisticServices,
  ...revolutionary2041AdvancedServices,
  // Our latest innovative services
  ...advanced2041EnterpriseServices,
  ...revolutionary2042MicroSaasServices,
  // Our new 2025 innovative services expansion
  ...innovative2025MicroSaasExpansion,
  ...innovative2025ITSolutionsExpansion,
  ...innovative2025AIServicesExpansion,
  // Our new 2025 advanced enterprise services
  ...advancedEnterpriseServices,
  ...innovative2025MicroSaasExpansion,
  ...cuttingEdgeITInfrastructureServices
];

const categories = [
  {
    id: 'all',
    name: 'All Services',
    icon: <Grid className="w-6 h-6" />,
    color: 'from-gray-500 to-slate-500',
    description: 'Complete portfolio of all services'
  },
  {
    id: 'enterprise-it',
    name: 'Enterprise IT',
    icon: <Building className="w-6 h-6" />,
    color: 'from-blue-500 to-purple-500',
    description: 'Enterprise solutions and infrastructure'
  },
  {
    id: 'ai-consciousness',
    name: 'AI & Consciousness',
    icon: <Brain className="w-6 h-6" />,
    color: 'from-cyan-500 to-blue-500',
    description: 'Revolutionary AI consciousness and emotional intelligence'
  },
  {
    id: 'quantum-emerging',
    name: 'Quantum & Emerging Tech',
    icon: <Atom className="w-6 h-6" />,
    color: 'from-purple-500 to-pink-500',
    description: 'Quantum computing and breakthrough technologies'
  },
  {
    id: 'space-metaverse',
    name: 'Space & Metaverse',
    icon: <Rocket className="w-6 h-6" />,
    color: 'from-pink-500 to-rose-500',
    description: 'Space exploration and virtual worlds'
  },
  {
    id: 'micro-saas',
    name: 'Micro SAAS',
    icon: <Target className="w-6 h-6" />,
    color: 'from-orange-500 to-red-500',
    description: 'Innovative business solutions'
  },
  {
    id: 'creative-media',
    name: 'Creative & Media',
    icon: <Palette className="w-6 h-6" />,
    color: 'from-indigo-500 to-purple-500',
    description: 'AI-powered creative solutions'
  },
  {
    id: 'healthcare-biotech',
    name: 'Healthcare & Biotech',
    icon: <Heart className="w-6 h-6" />,
    color: 'from-red-500 to-pink-500',
    description: 'Advanced healthcare solutions'
  },
  {
    id: 'transportation-logistics',
    name: 'Transportation & Logistics',
    icon: <Truck className="w-6 h-6" />,
    color: 'from-blue-500 to-cyan-500',
    description: 'Smart transportation solutions'
  },
  {
    id: 'education-research',
    name: 'Education & Research',
    icon: <GraduationCap className="w-6 h-6" />,
    color: 'from-yellow-500 to-orange-500',
    description: 'Learning and research platforms'
  },
  {
    id: 'ai-automation',
    name: 'AI Automation',
    icon: <Brain className="w-6 h-6" />,
    color: 'from-purple-500 to-indigo-600',
    description: 'Intelligent automation solutions'
  },
  {
    id: 'quantum-tech',
    name: 'Quantum Technology',
    icon: <Atom className="w-6 h-6" />,
    color: 'from-indigo-500 to-purple-600',
    description: 'Quantum computing and security'
  },
  {
    id: 'it-infrastructure',
    name: 'IT Infrastructure',
    icon: <Server className="w-6 h-6" />,
    color: 'from-slate-500 to-gray-500',
    description: 'Advanced IT infrastructure and DevOps'
  },
  {
    id: 'industry-solutions',
    name: 'Industry Solutions',
    icon: <Building className="w-6 h-6" />,
    color: 'from-amber-500 to-orange-500',
    description: 'Specialized solutions for specific industries'
  },
  {
    id: 'blockchain-tech',
    name: 'Blockchain Technology',
    icon: <Target className="w-6 h-6" />,
    color: 'from-yellow-500 to-orange-500',
    description: 'Blockchain and decentralized applications'
  },
  {
    id: 'robotics-tech',
    name: 'Robotics & Automation',
    icon: <Rocket className="w-6 h-6" />,
    color: 'from-gray-500 to-slate-600',
    description: 'Autonomous robotics and automation systems'
  }
];

const sortOptions = [
  { value: 'name', label: 'Name A-Z' },
  { value: 'price-low', label: 'Price: Low to High' },
  { value: 'price-high', label: 'Price: High to Low' },
  { value: 'popular', label: 'Most Popular' },
  { value: 'newest', label: 'Newest First' },
  { value: 'rating', label: 'Highest Rated' }
];

export default function Services() {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [sortBy, setSortBy] = useState('name');
  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');
  const [currentPage, setCurrentPage] = useState(1);
  const [isLoading, setIsLoading] = useState(true);
  const [isVisible, setIsVisible] = useState(false);
  const pageSize = 18;

  // Simulate loading state for better UX
  useEffect(() => {
    const timer = setTimeout(() => {
      setIsLoading(false);
      setIsVisible(true);
    }, 800);

    return () => clearTimeout(timer);
  }, []);

  // Filter services based on search and category
  const filteredServices = allServices.filter(service => {
    const matchesSearch = service.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         getServiceDescription(service).toLowerCase().includes(searchQuery.toLowerCase());
    
    if (selectedCategory === 'all') return matchesSearch;
    
    const serviceCategory = getServiceCategory(service).toLowerCase();
    const categoryName = categories.find(cat => cat.id === selectedCategory)?.name.toLowerCase();
    
    // Enhanced category matching for new service types
    if (selectedCategory === 'ai-automation') {
      return matchesSearch && (
        serviceCategory.includes('ai automation') ||
        serviceCategory.includes('ai automation') ||
        serviceCategory.includes('workflow automation') ||
        serviceCategory.includes('process automation')
      );
    }
    
    if (selectedCategory === 'quantum-tech') {
      return matchesSearch && (
        serviceCategory.includes('quantum') ||
        serviceCategory.includes('quantum computing') ||
        serviceCategory.includes('quantum security')
      );
    }
    
    if (selectedCategory === 'it-infrastructure') {
      return matchesSearch && (
        serviceCategory.includes('it infrastructure') ||
        serviceCategory.includes('network security') ||
        serviceCategory.includes('devops') ||
        serviceCategory.includes('cloud management') ||
        serviceCategory.includes('edge computing') ||
        serviceCategory.includes('infrastructure monitoring')
      );
    }
    
    if (selectedCategory === 'business-automation') {
      return matchesSearch && (
        serviceCategory.includes('business process automation') ||
        serviceCategory.includes('invoice processing') ||
        serviceCategory.includes('customer service automation') ||
        serviceCategory.includes('hr automation') ||
        serviceCategory.includes('sales automation') ||
        serviceCategory.includes('marketing automation')
      );
    }
    
    return matchesSearch && serviceCategory.includes(categoryName || '');
  });

  // Sort services
  const sortedServices = [...filteredServices].sort((a, b) => {
    switch (sortBy) {
      case 'name':
        return a.name.localeCompare(b.name);
      case 'price-low':
        return (parseInt(getServicePricing(a).replace(/[^0-9]/g, '')) || 0) - 
               (parseInt(getServicePricing(b).replace(/[^0-9]/g, '')) || 0);
      case 'price-high':
        return (parseInt(getServicePricing(b).replace(/[^0-9]/g, '')) || 0) - 
               (parseInt(getServicePricing(a).replace(/[^0-9]/g, '')) || 0);
      case 'newest':
        return new Date((b as any).launchDate || '2020-01-01').getTime() - 
               new Date((a as any).launchDate || '2020-01-01').getTime();
      case 'rating':
        return (((b as any).rating || 0) as number) - (((a as any).rating || 0) as number);
      default:
        return 0;
    }
  });

  // Pagination helpers
  const totalPages = Math.max(1, Math.ceil(sortedServices.length / pageSize));
  const currentPageClamped = Math.min(currentPage, totalPages);
  const paginatedServices = sortedServices.slice(
    (currentPageClamped - 1) * pageSize,
    currentPageClamped * pageSize
  );

  // Reset to first page when filters/sort change
  React.useEffect(() => {
    setCurrentPage(1);
  }, [searchQuery, selectedCategory, sortBy]);

  const getCategoryIcon = (category: string) => {
    switch (category.toLowerCase()) {
      case 'enterprise it':
      case 'enterprise security':
      case 'devops & automation':
      case 'data & analytics':
      case 'cloud services':
      case 'cybersecurity':
        return <Building className="w-6 h-6 text-blue-400" />;
      case 'ai & consciousness':
      case 'ai services':
      case 'artificial intelligence':
        return <Brain className="w-6 h-6 text-cyan-400" />;
      case 'quantum':
      case 'quantum & emerging tech':
      case 'quantum technology':
        return <Atom className="w-6 h-6 text-purple-400" />;
      case 'space':
      case 'space & metaverse':
        return <Rocket className="w-6 h-6 text-pink-400" />;
      case 'micro saas':
      case 'micro saas solutions':
        return <Target className="w-6 h-6 text-orange-400" />;
      case 'creative':
      case 'creative & media':
        return <Palette className="w-6 h-6 text-indigo-400" />;
      case 'healthcare':
      case 'healthcare & biotech':
        return <Heart className="w-6 h-6 text-red-400" />;
      case 'transportation':
      case 'transportation & logistics':
        return <Truck className="w-6 h-6 text-blue-400" />;
      case 'education':
      case 'education & research':
        return <GraduationCap className="w-6 h-6 text-yellow-400" />;
      case 'ai automation':
        return <Brain className="w-6 h-6 text-purple-400" />;
      case 'it infrastructure':
      case 'network security':
      case 'devops automation':
      case 'cloud management':
      case 'edge computing':
      case 'infrastructure monitoring':
        return <Network className="w-6 h-6 text-blue-400" />;
      case 'business process automation':
      case 'invoice processing':
      case 'customer service automation':
      case 'hr automation':
      case 'sales automation':
      case 'marketing automation':
        return <Zap className="w-6 h-6 text-yellow-400" />;
      default:
        return <Shield className="w-6 h-6 text-gray-400" />;
    }
  };

  return (
    <>
      <SEO title="Services | Zion Tech Group - Enterprise IT, AI, Micro SAAS Solutions" description="Discover our comprehensive portfolio of enterprise IT solutions, AI services, and innovative micro SAAS platforms. Transform your business with cutting-edge technology." canonical="https://ziontechgroup.com/services/" />

      <div className="min-h-screen bg-black text-white pt-24">
        {/* Loading State */}
        <AnimatePresence>
          {isLoading && (
            <motion.div
              initial={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="fixed inset-0 z-50 bg-black flex items-center justify-center"
            >
              <div className="text-center">
                <div className="w-16 h-16 border-4 border-cyan-500 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
                <p className="text-cyan-400 text-lg font-medium">Loading Services...</p>
              </div>
            </motion.div>
          )}
        </AnimatePresence>

        {/* Hero Section */}
        <AnimatePresence>
          {isVisible && (
            <motion.section
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, ease: "easeOut" }}
              className="py-20 relative overflow-hidden"
            >
          <div className="absolute inset-0 pointer-events-none">
            <div className="absolute top-0 left-1/4 w-96 h-96 bg-gradient-to-br from-blue-500/5 to-purple-600/5 rounded-full blur-3xl" />
            <div className="absolute bottom-0 right-1/4 w-96 h-96 bg-gradient-to-br from-red-500/5 to-blue-500/5 rounded-full blur-3xl" />
          </div>

          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              className="text-center mb-16"
            >
              <div className="inline-flex items-center px-4 py-2 bg-gradient-to-r from-blue-500/20 to-purple-600/20 border border-blue-500/30 rounded-full text-blue-300 text-sm font-medium mb-6">
                <Shield className="w-4 h-4 mr-2 text-blue-400" />
                Complete Service Portfolio
              </div>
              
              <h1 className="text-4xl md:text-6xl font-bold text-white mb-6">
                Transform Your <span className="bg-gradient-to-r from-blue-400 via-purple-500 to-red-500 bg-clip-text text-transparent">Business</span> with Our Services
              </h1>
              
              <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                From enterprise IT solutions to cutting-edge AI services and innovative micro SAAS platforms, 
                we provide the technology you need to succeed in the digital age.
              </p>
            </motion.div>

            {/* Search and Filters */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.1 }}
              className="mb-12"
            >
              <div className="flex flex-col lg:flex-row gap-6 items-center justify-between">
                {/* Search */}
                <div className="relative flex-1 max-w-md">
                  <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                  <input
                    type="text"
                    placeholder="Search services..."
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    className="w-full pl-12 pr-4 py-3 bg-black/50 border border-blue-500/30 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500"
                  />
                </div>

                {/* Category Filter */}
                <div className="flex flex-wrap gap-2">
                  {categories.map((category) => (
                    <motion.button
                      key={category.id}
                      onClick={() => setSelectedCategory(category.id)}
                      whileHover={{ scale: 1.05 }}
                      whileTap={{ scale: 0.95 }}
                      className={`px-4 py-2 rounded-lg border transition-all duration-200 flex items-center space-x-2 ${
                        selectedCategory === category.id
                          ? 'bg-gradient-to-r from-blue-500 to-purple-600 border-blue-500 text-white shadow-lg shadow-blue-500/25'
                          : 'bg-black/50 border-blue-500/30 text-gray-300 hover:border-blue-500/50 hover:text-blue-300'
                      }`}
                    >
                      {category.icon}
                      <span className="hidden sm:inline">{category.name}</span>
                    </motion.button>
                  ))}
                </div>

                {/* Sort Options */}
                <div className="flex items-center space-x-2">
                  <select
                    value={sortBy}
                    onChange={(e) => setSortBy(e.target.value)}
                    className="px-3 py-2 bg-black/50 border border-blue-500/30 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500"
                  >
                    {sortOptions.map((option) => (
                      <option key={option.value} value={option.value}>
                        {option.label}
                      </option>
                    ))}
                  </select>
                </div>

                {/* View Mode Toggle */}
                <div className="flex items-center space-x-2">
                  <button
                    onClick={() => setViewMode('grid')}
                    className={`p-2 rounded-lg border transition-all duration-200 ${
                      viewMode === 'grid'
                        ? 'bg-blue-500/20 border-blue-500 text-blue-300'
                        : 'bg-black/50 border-blue-500/30 text-gray-400 hover:text-blue-300'
                    }`}
                  >
                    <Grid className="w-5 h-5" />
                  </button>
                  <button
                    onClick={() => setViewMode('list')}
                    className={`p-2 rounded-lg border transition-all duration-200 ${
                      viewMode === 'list'
                        ? 'bg-blue-500/20 border-blue-500 text-blue-300'
                        : 'bg-black/50 border-blue-500/30 text-gray-400 hover:text-blue-300'
                    }`}
                  >
                    <List className="w-5 h-5" />
                  </button>
                </div>
              </div>
            </motion.div>

            {/* Services Count */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
              className="text-center mb-8"
            >
              <p className="text-gray-300">
                Showing <span className="text-blue-400 font-semibold">{sortedServices.length}</span> services
                {selectedCategory !== 'all' && ` in ${categories.find(cat => cat.id === selectedCategory)?.name}`}
              </p>
            </motion.div>
          </div>
            </motion.section>
          )}
        </AnimatePresence>

        {/* Services Grid/List */}
        <section className="py-20 relative">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            {paginatedServices.length > 0 ? (<>
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.3 }}
                className={viewMode === 'grid' 
                  ? "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
                  : "space-y-6"
                }
=======
import React, { useState, useMemo } from 'react';
import SEO from '../components/SEO';
import { motion } from 'framer-motion';
import { 
  Search, Filter, Grid, List, Star, ChevronLeft, ChevronRight,
  ArrowUp, ArrowDown, Eye, Fingerprint, Satellite, Telescope, Microscope, FlaskConical, TargetIcon, Globe2, ShieldCheck, LockKeyhole, Wifi, Bluetooth, Radio, SatelliteDish, Orbit, TrendingUp, Monitor, Building, Code, MessageCircle, BarChart3, Palette, BookOpen, FileText, Handshake, Newspaper, Grid as GridIcon, GraduationCap, HeartIcon, DollarSign, Target, Network, Server, Cpu, Database, Cloud, Lock, Truck, Check, ArrowRight, Sparkles
} from 'lucide-react';
import Link from 'next/link';

// Import service data
import { realMicroSaasServices } from '../data/real-micro-saas-services';
import { innovative2025MicroSaasExpansionV2 } from '../data/innovative-2025-micro-saas-expansion-v2';
import { innovative2025ITServicesExpansionV2 } from '../data/innovative-2025-it-services-expansion-v2';
import { innovative2025AIServicesExpansionV2 } from '../data/innovative-2025-ai-services-expansion-v2';
import { advancedFuturisticServices } from '../data/innovative-2025-advanced-futuristic-services';

// Define a unified Service interface
interface Service {
  id?: string;
  slug?: string;
  name: string;
  tagline?: string;
  description?: string;
  category?: string;
  price?: {
    monthly: number;
    yearly: number;
    currency: string;
    trialDays: number;
    setupTime: string;
  };
  features?: string[];
  benefits?: string[];
  targetAudience?: string[];
  marketPosition?: string;
  competitors?: string[];
  techStack?: string[];
  realImplementation?: boolean;
  implementationDetails?: string;
  roi?: string;
  useCases?: string[];
  integrations?: string[];
  support?: string;
  compliance?: string[];
  link?: string;
  icon?: string;
  color?: string;
  popular?: boolean;
  launchDate?: string;
  customers?: number;
  rating?: number;
  reviews?: number;
}

const ServicesPage: React.FC = () => {
  // Consolidate all services including the new advanced futuristic services
  const allServices: Service[] = [
    ...realMicroSaasServices,
    ...innovative2025MicroSaasExpansionV2,
    ...innovative2025ITServicesExpansionV2,
    ...innovative2025AIServicesExpansionV2,
    ...advancedFuturisticServices
  ];

  // State management
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchTerm, setSearchTerm] = useState('');
  const [sortBy, setSortBy] = useState('name');
  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');
  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 12;

  // Enhanced categories with icons, counts, and colors
  const categories = [
    { id: 'all', name: 'All Services', icon: <Globe2 className="w-5 h-5" />, count: allServices.length, color: 'from-blue-500 to-cyan-500' },
    { id: 'micro-saas', name: 'Micro SAAS', icon: <Satellite className="w-5 h-5" />, count: allServices.filter(s => s.category === 'Micro SAAS').length, color: 'from-purple-500 to-pink-500' },
    { id: 'ai', name: 'AI & Consciousness', icon: <Fingerprint className="w-5 h-5" />, count: allServices.filter(s => s.category?.includes('AI') || s.category?.includes('Consciousness')).length, color: 'from-purple-500 to-pink-500' },
    { id: 'quantum', name: 'Quantum & Space Tech', icon: <Satellite className="w-5 h-5" />, count: allServices.filter(s => s.category?.includes('Quantum') || s.category?.includes('Space')).length, color: 'from-blue-500 to-cyan-500' },
    { id: 'business', name: 'Business Solutions', icon: <Building className="w-5 h-5" />, count: allServices.filter(s => s.category?.includes('Business') || s.category?.includes('Enterprise')).length, color: 'from-green-500 to-emerald-500' },
    { id: 'research', name: 'Research & Development', icon: <FlaskConical className="w-5 h-5" />, count: allServices.filter(s => s.category?.includes('Research') || s.category?.includes('Development')).length, color: 'from-orange-500 to-red-500' },
    { id: 'cybersecurity', name: 'Cybersecurity', icon: <ShieldCheck className="w-5 h-5" />, count: allServices.filter(s => s.category?.includes('Security') || s.category?.includes('Cybersecurity')).length, color: 'from-red-500 to-orange-500' },
    { id: 'cloud', name: 'Cloud & Infrastructure', icon: <Cloud className="w-5 h-5" />, count: allServices.filter(s => s.category?.includes('Cloud') || s.category?.includes('Infrastructure')).length, color: 'from-indigo-500 to-purple-500' },
    { id: 'automation', name: 'Automation', icon: <Network className="w-5 h-5" />, count: allServices.filter(s => s.category?.includes('Automation') || s.category?.includes('Process')).length, color: 'from-yellow-500 to-orange-500' }
  ];

  // Filter and sort services
  const filteredServices = useMemo(() => {
    let filtered = allServices;

    // Filter by category
    if (selectedCategory !== 'all') {
      filtered = filtered.filter(service => {
        if (selectedCategory === 'ai') {
          return service.category?.includes('AI') || service.category?.includes('Consciousness');
        } else if (selectedCategory === 'quantum') {
          return service.category?.includes('Quantum') || service.category?.includes('Space');
        } else if (selectedCategory === 'business') {
          return service.category?.includes('Business') || service.category?.includes('Enterprise');
        } else if (selectedCategory === 'research') {
          return service.category?.includes('Research') || service.category?.includes('Development');
        } else if (selectedCategory === 'cybersecurity') {
          return service.category?.includes('Security') || service.category?.includes('Cybersecurity');
        } else if (selectedCategory === 'cloud') {
          return service.category?.includes('Cloud') || service.category?.includes('Infrastructure');
        } else if (selectedCategory === 'automation') {
          return service.category?.includes('Automation') || service.category?.includes('Process');
        } else {
          return service.category === categories.find(c => c.id === selectedCategory)?.name;
        }
      });
    }

    // Filter by search term
    if (searchTerm) {
      const searchLower = searchTerm.toLowerCase();
      filtered = filtered.filter(service =>
        service.name.toLowerCase().includes(searchLower) ||
        service.description?.toLowerCase().includes(searchLower) ||
        service.tagline?.toLowerCase().includes(searchLower) ||
        service.category?.toLowerCase().includes(searchLower)
      );
    }

    // Sort services
    filtered.sort((a, b) => {
      let aValue: any, bValue: any;

      switch (sortBy) {
        case 'name':
          aValue = a.name;
          bValue = b.name;
          break;
        case 'price':
          aValue = a.price?.monthly || 0;
          bValue = b.price?.monthly || 0;
          break;
        case 'rating':
          aValue = a.rating || 0;
          bValue = b.rating || 0;
          break;
        case 'popularity':
          aValue = a.customers || 0;
          bValue = b.customers || 0;
          break;
        case 'launchDate':
          aValue = new Date(a.launchDate || '1900-01-01');
          bValue = new Date(b.launchDate || '1900-01-01');
          break;
        default:
          aValue = a.name;
          bValue = b.name;
      }

      if (sortOrder === 'asc') {
        return aValue > bValue ? 1 : -1;
      } else {
        return aValue < bValue ? 1 : -1;
      }
    });

    return filtered;
  }, [allServices, selectedCategory, searchTerm, sortBy, sortOrder]);

  // Pagination
  const totalPages = Math.ceil(filteredServices.length / itemsPerPage);
  const paginatedServices = filteredServices.slice(
    (currentPage - 1) * itemsPerPage,
    currentPage * itemsPerPage
  );

  const handlePageChange = (page: number) => {
    setCurrentPage(page);
    window.scrollTo({ top: 0, behavior: 'smooth' });
  };

  const getServiceIcon = (service: Service) => {
    if (service.icon) return service.icon;
    
    // Default icons based on category
    if (service.category?.includes('AI')) return <Fingerprint className="w-6 h-6" />;
    if (service.category?.includes('Quantum')) return <Satellite className="w-6 h-6" />;
    if (service.category?.includes('Space')) return <Satellite className="w-6 h-6" />;
    if (service.category?.includes('Business')) return <Building className="w-6 h-6" />;
    if (service.category?.includes('Security')) return <ShieldCheck className="w-6 h-6" />;
    if (service.category?.includes('Cloud')) return <Cloud className="w-6 h-6" />;
    if (service.category?.includes('Automation')) return <Network className="w-6 h-6" />;
    if (service.category?.includes('Research')) return <FlaskConical className="w-6 h-6" />;
    
    return <Satellite className="w-6 h-6" />;
  };

  const getServiceColor = (service: Service) => {
    if (service.color) return service.color;
    
    // Default colors based on category
    if (service.category?.includes('AI')) return 'from-purple-500 to-pink-600';
    if (service.category?.includes('Quantum')) return 'from-blue-500 to-cyan-600';
    if (service.category?.includes('Space')) return 'from-indigo-500 to-purple-600';
    if (service.category?.includes('Business')) return 'from-green-500 to-emerald-600';
    if (service.category?.includes('Security')) return 'from-red-500 to-orange-600';
    if (service.category?.includes('Cloud')) return 'from-indigo-500 to-purple-600';
    if (service.category?.includes('Automation')) return 'from-yellow-500 to-orange-600';
    if (service.category?.includes('Research')) return 'from-orange-500 to-red-600';
    
    return 'from-gray-500 to-slate-600';
  };

  return (
    <div className="min-h-screen bg-black text-white">
      <SEO 
        title="Revolutionary Services 2041 - Zion Tech Group"
        description="Explore our cutting-edge technology services including AI consciousness, quantum computing, space technology, and more."
        keywords={["services", "AI consciousness", "quantum computing", "space technology", "Zion Tech Group"]}
      />

      {/* Hero Section */}
      <section className="pt-32 pb-20 px-4 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-cyan-500/10 via-purple-500/10 to-pink-500/10"></div>
        <div className="max-w-6xl mx-auto relative z-10">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center mb-16"
          >
            <div className="inline-flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-cyan-500/20 to-purple-500/20 border border-cyan-400/30 rounded-full text-cyan-400 text-sm font-medium mb-6">
              <Sparkles className="w-4 h-4" />
              <span>Revolutionary Services 2041</span>
            </div>
            
            <h1 className="text-5xl md:text-7xl font-bold mb-6 bg-gradient-to-r from-cyan-400 via-blue-500 to-purple-600 bg-clip-text text-transparent">
              Our Services
            </h1>
            <p className="text-xl md:text-2xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
              Discover our comprehensive range of cutting-edge technology solutions designed to transform your business and pioneer the future
            </p>
            
            {/* Stats */}
            <div className="grid grid-cols-2 md:grid-cols-4 gap-8 mt-16">
              <div className="text-center">
                <div className="text-4xl font-bold text-cyan-400 mb-2">{allServices.length}+</div>
                <div className="text-gray-300">Total Services</div>
              </div>
              <div className="text-center">
                <div className="text-4xl font-bold text-purple-400 mb-2">25+</div>
                <div className="text-gray-300">Categories</div>
              </div>
              <div className="text-center">
                <div className="text-4xl font-bold text-pink-400 mb-2">4.9/5</div>
                <div className="text-gray-300">Average Rating</div>
              </div>
              <div className="text-center">
                <div className="text-4xl font-bold text-green-400 mb-2">1000+</div>
                <div className="text-gray-300">Happy Customers</div>
              </div>
            </div>
          </motion.div>
        </div>
      </section>

      {/* Filters and Search */}
      <section className="py-12 px-4 bg-black/30">
        <div className="max-w-6xl mx-auto">
          <div className="flex flex-col lg:flex-row gap-6 items-center justify-between">
            {/* Search */}
            <div className="relative flex-1 max-w-md">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
              <input
                type="text"
                placeholder="Search services..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full pl-10 pr-4 py-3 bg-gray-800/50 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-500/50 focus:border-cyan-500/50"
              />
            </div>

            {/* Category Filter */}
            <div className="flex flex-wrap gap-2">
              {categories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => setSelectedCategory(category.id)}
                  className={`flex items-center space-x-2 px-4 py-2 rounded-lg border transition-all duration-200 ${
                    selectedCategory === category.id
                      ? `bg-gradient-to-r ${category.color} text-white border-transparent`
                      : 'bg-gray-800/50 text-gray-300 border-gray-700 hover:bg-gray-700/50'
                  }`}
                >
                  {category.icon}
                  <span>{category.name}</span>
                  <span className="text-xs bg-white/20 px-2 py-1 rounded-full">
                    {category.count}
                  </span>
                </button>
              ))}
            </div>

            {/* Sort and View Controls */}
            <div className="flex items-center space-x-4">
              <select
                value={sortBy}
                onChange={(e) => setSortBy(e.target.value)}
                className="px-3 py-2 bg-gray-800/50 border border-gray-700 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-cyan-500/50"
              >
                <option value="name">Sort by Name</option>
                <option value="price">Sort by Price</option>
                <option value="rating">Sort by Rating</option>
                <option value="popularity">Sort by Popularity</option>
                <option value="launchDate">Sort by Launch Date</option>
              </select>
              
              <button
                onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}
                className="p-2 bg-gray-800/50 border border-gray-700 rounded-lg text-gray-300 hover:text-white hover:bg-gray-700/50 transition-colors"
              >
                {sortOrder === 'asc' ? <ArrowUp className="w-5 h-5" /> : <ArrowDown className="w-5 h-5" />}
              </button>

              <div className="flex bg-gray-800/50 border border-gray-700 rounded-lg p-1">
                <button
                  onClick={() => setViewMode('grid')}
                  className={`p-2 rounded ${
                    viewMode === 'grid' ? 'bg-cyan-500 text-white' : 'text-gray-400 hover:text-white'
                  } transition-colors`}
                >
                  <Grid className="w-5 h-5" />
                </button>
                <button
                  onClick={() => setViewMode('list')}
                  className={`p-2 rounded ${
                    viewMode === 'list' ? 'bg-cyan-500 text-white' : 'text-gray-400 hover:text-white'
                  } transition-colors`}
                >
                  <List className="w-5 h-5" />
                </button>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Services Grid */}
      <section className="py-20 px-4">
        <div className="max-w-6xl mx-auto">
          {filteredServices.length === 0 ? (
            <div className="text-center py-20">
              <div className="text-6xl mb-4">🔍</div>
              <h3 className="text-2xl font-semibold text-white mb-2">No services found</h3>
              <p className="text-gray-400">Try adjusting your search criteria or category filter</p>
            </div>
          ) : (
            <>
              {/* Results Count */}
              <div className="mb-8">
                <p className="text-gray-400">
                  Showing {((currentPage - 1) * itemsPerPage) + 1} to {Math.min(currentPage * itemsPerPage, filteredServices.length)} of {filteredServices.length} services
                </p>
              </div>

              {/* Services Grid */}
              <div className={`grid gap-8 ${
                viewMode === 'grid' 
                  ? 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3' 
                  : 'grid-cols-1'
              }`}>
                {paginatedServices.map((service, index) => (
                  <motion.div
                    key={service.id || index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: index * 0.1 }}
                    className={`group ${
                      viewMode === 'list' ? 'flex space-x-6' : ''
                    }`}
                  >
                    <div className={`bg-gray-900/50 border border-gray-800 rounded-xl p-6 hover:border-cyan-500/50 transition-all duration-300 hover:shadow-lg hover:shadow-cyan-500/25 ${
                      viewMode === 'list' ? 'flex-1' : ''
                    }`}>
                      {/* Service Header */}
                      <div className={`flex items-start space-x-4 ${viewMode === 'list' ? 'mb-4' : 'mb-6'}`}>
                        <div className={`w-16 h-16 rounded-xl bg-gradient-to-br ${getServiceColor(service)} flex items-center justify-center flex-shrink-0`}>
                          {getServiceIcon(service)}
                        </div>
                        <div className="flex-1 min-w-0">
                          <div className="flex items-center space-x-2 mb-2">
                            <h3 className="text-xl font-semibold text-white group-hover:text-cyan-400 transition-colors">
                              {service.name}
                            </h3>
                            {service.popular && (
                              <span className="px-2 py-1 text-xs bg-gradient-to-r from-yellow-500 to-orange-500 text-white rounded-full">
                                Popular
                              </span>
                            )}
                          </div>
                          {service.tagline && (
                            <p className="text-gray-400 text-sm">{service.tagline}</p>
                          )}
                        </div>
                      </div>

                      {/* Service Description */}
                      {service.description && (
                        <p className="text-gray-300 mb-4 line-clamp-3">
                          {service.description}
                        </p>
                      )}

                      {/* Service Details */}
                      <div className="space-y-4">
                        {/* Price */}
                        {service.price && (
                          <div className="flex items-center justify-between">
                            <span className="text-gray-400 text-sm">Starting at</span>
                            <div className="text-right">
                              <div className="text-2xl font-bold text-green-400">
                                ${service.price.monthly.toLocaleString()}
                              </div>
                              <div className="text-sm text-gray-400">per month</div>
                            </div>
                          </div>
                        )}

                        {/* Rating */}
                        {service.rating && (
                          <div className="flex items-center space-x-2">
                            <div className="flex items-center space-x-1">
                              {[...Array(5)].map((_, i) => (
                                <Star
                                  key={i}
                                  className={`w-4 h-4 ${
                                    i < Math.floor(service.rating!) ? 'text-yellow-400 fill-current' : 'text-gray-600'
                                  }`}
                                />
                              ))}
                            </div>
                            <span className="text-gray-400 text-sm">
                              {service.rating} ({service.reviews} reviews)
                            </span>
                          </div>
                        )}

                        {/* Features */}
                        {service.features && service.features.length > 0 && (
                          <div>
                            <h4 className="text-sm font-medium text-gray-300 mb-2">Key Features</h4>
                            <div className="grid grid-cols-1 gap-1">
                              {service.features.slice(0, 3).map((feature, i) => (
                                <div key={i} className="flex items-center space-x-2 text-sm text-gray-400">
                                  <Check className="w-3 h-3 text-green-400" />
                                  <span>{feature}</span>
                                </div>
                              ))}
                              {service.features.length > 3 && (
                                <div className="text-xs text-gray-500 mt-1">
                                  +{service.features.length - 3} more features
                                </div>
                              )}
                            </div>
                          </div>
                        )}

                        {/* CTA Button */}
                        <div className="pt-4">
                          <Link href={service.link || `/services/${service.id}`}>
                            <button className="w-full px-4 py-3 bg-gradient-to-r from-cyan-500 to-purple-600 text-white rounded-lg hover:from-cyan-600 hover:to-purple-700 transition-all duration-200 transform hover:scale-105 shadow-lg shadow-cyan-500/25 focus:outline-none focus:ring-4 focus:ring-cyan-500/50">
                              <span className="flex items-center justify-center space-x-2">
                                Learn More
                                <ArrowRight className="w-4 h-4" />
                              </span>
                            </button>
                          </Link>
                        </div>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>

              {/* Pagination */}
              {totalPages > 1 && (
                <div className="flex items-center justify-center space-x-2 mt-16">
                  <button
                    onClick={() => handlePageChange(currentPage - 1)}
                    disabled={currentPage === 1}
                    className="px-4 py-2 bg-gray-800/50 border border-gray-700 rounded-lg text-gray-300 hover:text-white hover:bg-gray-700/50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                  >
                    Previous
                  </button>
                  
                  {[...Array(totalPages)].map((_, i) => {
                    const page = i + 1;
                    if (
                      page === 1 ||
                      page === totalPages ||
                      (page >= currentPage - 2 && page <= currentPage + 2)
                    ) {
                      return (
                        <button
                          key={page}
                          onClick={() => handlePageChange(page)}
                          className={`px-4 py-2 rounded-lg transition-colors ${
                            currentPage === page
                              ? 'bg-gradient-to-r from-cyan-500 to-purple-600 text-white'
                              : 'bg-gray-800/50 border border-gray-700 text-gray-300 hover:text-white hover:bg-gray-700/50'
                          }`}
                        >
                          {page}
                        </button>
                      );
                    } else if (
                      page === currentPage - 3 ||
                      page === currentPage + 3
                    ) {
                      return <span key={page} className="px-2 text-gray-500">...</span>;
                    }
                    return null;
                  })}
                  
                  <button
                    onClick={() => handlePageChange(currentPage + 1)}
                    disabled={currentPage === totalPages}
                    className="px-4 py-2 bg-gray-800/50 border border-gray-700 rounded-lg text-gray-300 hover:text-white hover:bg-gray-700/50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                  >
                    Next
                  </button>
                </div>
              )}
            </>
          )}
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 px-4 bg-gradient-to-br from-black/40 to-purple-900/20">
        <div className="max-w-4xl mx-auto text-center">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <h2 className="text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-cyan-400 to-purple-600 bg-clip-text text-transparent">
              Ready to Transform Your Business?
            </h2>
            <p className="text-xl text-gray-300 mb-8 max-w-2xl mx-auto">
              Join hundreds of companies already leveraging our innovative technology solutions
            </p>
            
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Link href="/contact">
                <button className="px-8 py-4 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-semibold rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-300 transform hover:scale-105 shadow-lg shadow-cyan-500/25 focus:outline-none focus:ring-4 focus:ring-cyan-500/50">
                  <span className="flex items-center gap-2">
                    Get Started Today
                    <ArrowRight className="w-5 h-5" />
                  </span>
                </button>
              </Link>
              <Link href="/demo">
                <button className="px-8 py-4 border-2 border-purple-400 text-purple-400 font-semibold rounded-lg hover:bg-purple-400 hover:text-black transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-purple-400/50">
                  Request Demo
                </button>
              </Link>
            </div>
          </motion.div>
        </div>
      </section>
    </div>
  );
}
