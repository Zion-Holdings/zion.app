import React from 'react';
import SEO from '../components/SEO';
import { motion } from 'framer-motion';
import { ArrowRight, Brain, Shield, Rocket, Star } from 'lucide-react';
import Link from 'next/link';
import { formatServicePrice } from '../utils/servicePriceUtils';

// Import our new service data
import { enterpriseITSolutions } from '../data/2034-enterprise-it-solutions';
import { innovativeMicroSaasSolutions } from '../data/2034-innovative-micro-saas-solutions';
import { cuttingEdgeAIServices } from '../data/2034-cutting-edge-ai-services';
import { real2025Q4AugmentedBatch } from '../data/real-2025-q4-augmented-batch';
import { real2029Q3Additions } from '../data/real-2029-q3-additions';
import { validatedServices2025Q4 } from '../data/real-validated-2025-q4-additions';
import { real2035Q2Additions } from '../data/real-2035-q2-additions';
import { real2036ServiceExpansions } from '../data/real-2036-service-expansions';
import { innovative2036MicroSaasServices } from '../data/innovative-2036-micro-saas-services';
import { innovative2036ITServices } from '../data/innovative-2036-it-services';
import { innovative2037MicroSaasServices } from '../data/innovative-2037-micro-saas-services';
import { innovative2037ITServices } from '../data/innovative-2037-it-services';
import { innovative2037AIServices } from '../data/innovative-2037-ai-services';
import { innovative2038CuttingEdgeServices } from '../data/innovative-2038-cutting-edge-services';
import { innovative2038ITInfrastructureServices } from '../data/innovative-2038-it-infrastructure-services';
import { innovative2037Services } from '../data/innovative-2037-services';
import { advanced2038Services } from '../data/advanced-2038-services';
import { revolutionary2039Services } from '../data/revolutionary-2039-services';
import { revolutionary2040FuturisticServices } from '../data/revolutionary-2040-futuristic-services';
import { revolutionary2041AdvancedServices } from '../data/revolutionary-2041-advanced-services';
import { innovative2040FuturisticServices } from '../data/innovative-2040-futuristic-services';
import { advanced2041EnterpriseServices } from '../data/advanced-2041-enterprise-services';
import { revolutionary2042MicroSaasServices } from '../data/revolutionary-2042-micro-saas-services';

// Import our new 2025 advanced services
import { advanced2025MicroSaasExpansion } from '../data/2025-advanced-micro-saas-expansion';
import { advanced2025ITSolutionsExpansion } from '../data/2025-advanced-it-solutions-expansion';
import { advanced2025AIServicesExpansion } from '../data/2025-advanced-ai-services-expansion';

// Import our new 2025 advanced services V2
import { advanced2025MicroSaasExpansionV2 } from '../data/2025-advanced-micro-saas-expansion-v2';
import { advanced2025ITSolutionsExpansionV2 } from '../data/2025-advanced-it-solutions-expansion-v2';
import { advanced2025AIServicesExpansionV2 } from '../data/2025-advanced-ai-services-expansion-v2';
// Import our new 2025 innovative services expansion
import { innovative2025MicroSaasExpansion } from '../data/innovative-2025-micro-saas-expansion';
import { innovative2025ITSolutionsExpansion } from '../data/innovative-2025-it-solutions-expansion';
import { innovative2025AIServicesExpansion } from '../data/innovative-2025-ai-services-expansion';

// Import our new innovative 2040 services
import { innovative2040ITServices } from '../data/innovative-2040-it-services';

// Import existing service data
import { realMicroSaasServices } from '../data/real-micro-saas-services';
import { innovativeAIServices } from '../data/innovative-ai-services';
import { enterpriseITServices } from '../data/enterprise-it-services';
import { emergingTechServices } from '../data/emerging-tech-services';
import { newRealServices } from '../data/new-real-services';
import { realOperationalServices } from '../data/real-operational-services';
import { marketReadyServices } from '../data/market-ready-services';
import { marketValidatedServices } from '../data/market-validated-services';
import { industryRealServices } from '../data/industry-real-services';

// Helper function to get service category
const getServiceCategory = (service: any) => {
  try {
    if (service.category) return service.category;
    if (service.type) return service.type;
    return 'Other';
  } catch (error) {
    return 'Other';
  }
};

// Helper function to get service pricing
const getServicePricing = (service: any) => {
<<<<<<< HEAD
  try {
    if (service.pricing?.starter) return service.pricing.starter;
    if (service.pricing?.monthly) return `$${service.pricing.monthly}/month`;
    if (typeof service.price === 'string') return service.price;
    if (service.price?.monthly) return `$${service.price.monthly}/month`;
    if (service.price && typeof service.price === 'object') {
      // Handle case where price is an object but doesn't have monthly
      return 'Contact for pricing';
    }
    return 'Contact for pricing';
  } catch (error) {
    console.error('Error getting service pricing:', error, service);
    return 'Contact for pricing';
  }
=======
  // Debug logging to identify problematic services
  if (!service.price && !service.pricing) {
    console.warn('Service missing price field:', service.id, service.name);
    return 'Contact for pricing';
  }
  
  if (service.pricing?.starter) return service.pricing.starter;
  if (service.pricing?.monthly) return `$${service.pricing.monthly}/month`;
  if (service.price?.monthly) return `$${service.price.monthly}/month`;
  if (service.price && typeof service.price === 'object' && service.price.monthly) {
    return `$${service.price.monthly}/month`;
  }
  if (service.price && service.period) return `${service.price}${service.period}`;
  if (service.price && typeof service.price === 'string') return service.price;
  
  // If we get here, log the problematic service
  console.warn('Service with unexpected price structure:', service.id, service.name, service.price);
  return 'Contact for pricing';
>>>>>>> origin/cursor/add-and-advertise-new-services-then-build-e1f5
};

// Helper function to get service features
const getServiceFeatures = (service: any) => {
  try {
    if (service.features && Array.isArray(service.features)) return service.features;
    if (service.keyFeatures && Array.isArray(service.keyFeatures)) return service.keyFeatures;
    return [];
  } catch (error) {
    return [];
  }
};

// Helper function to get service description
const getServiceDescription = (service: any) => {
  try {
    if (service.description) return service.description;
    if (service.tagline) return service.tagline;
    return 'No description available';
  } catch (error) {
    return 'No description available';
  }
};

// Create unified services array
const allServices = [
  // ...enterpriseITSolutions,
  // ...innovativeMicroSaasSolutions,
  // ...cuttingEdgeAIServices,
  // ...realMicroSaasServices,
  // ...innovativeAIServices,
  // ...enterpriseITServices,
  // ...emergingTechServices,
  // ...newRealServices,
  // ...realOperationalServices,
  // ...marketReadyServices,
  // ...marketValidatedServices,
  // ...industryRealServices,
  // ...real2025Q4AugmentedBatch,
  // ...real2029Q3Additions,
  // Our new 2025 advanced services V2
  ...advanced2025MicroSaasExpansionV2,
  ...advanced2025ITSolutionsExpansionV2,
  ...advanced2025AIServicesExpansionV2,
  // ...validatedServices2025Q4,
  // ...real2035Q2Additions,
  // ...real2036ServiceExpansions,
  // ...innovative2036MicroSaasServices,
  // ...innovative2036ITServices,
  // Our new 2025 advanced services
  // ...advanced2025MicroSaasExpansion,
  // ...advanced2025ITSolutionsExpansion,
  // ...advanced2025AIServicesExpansion,
  // Our new innovative services
  // ...innovative2037MicroSaasServices,
  // ...innovative2037ITServices,
  // ...innovative2037AIServices,
  // ...innovative2038CuttingEdgeServices,
  // ...innovative2038ITInfrastructureServices,
  // Our additional innovative services
<<<<<<< HEAD
  ...innovative2037Services,
  ...advanced2038Services,
  ...revolutionary2039Services,
  
  // Our new innovative 2040 services
  ...innovative2040FuturisticServices,
  ...innovative2040ITServices,
  // Our new comprehensive services
  ...revolutionary2040FuturisticServices,
  ...revolutionary2041AdvancedServices,
  // Our latest innovative services
  ...advanced2041EnterpriseServices,
  ...revolutionary2042MicroSaasServices,
=======
  // ...innovative2037Services,
  // ...advanced2038Services,
  // ...revolutionary2039Services,
  // Our revolutionary 2040-2041 services
  // ...revolutionary2040FuturisticServices,
  // ...revolutionary2041AdvancedServices,
  // Our latest innovative services
  // ...innovative2040FuturisticServices,
  // ...advanced2041EnterpriseServices,
  // ...revolutionary2042MicroSaasServices,
>>>>>>> origin/cursor/add-and-advertise-new-services-then-build-e1f5
  // Our new 2025 innovative services expansion
  // ...innovative2025MicroSaasExpansion,
  // ...innovative2025ITSolutionsExpansion,
  // ...innovative2025AIServicesExpansion
].filter(service => {
  // Filter out malformed services
  if (!service || typeof service !== 'object') return false;
  if (!service.id || !service.name) return false;
  return true;
});

const categories = [
  {
    id: 'all',
    name: 'All Services',
    icon: <Grid className="w-6 h-6" />,
    color: 'from-gray-500 to-slate-500',
    description: 'Complete portfolio of all services'
  },
  {
    id: 'enterprise-it',
    name: 'Enterprise IT',
    icon: <Building className="w-6 h-6" />,
    color: 'from-blue-500 to-purple-500',
    description: 'Enterprise solutions and infrastructure'
  },
  {
    id: 'ai-consciousness',
    name: 'AI & Consciousness',
    icon: <Brain className="w-6 h-6" />,
    color: 'from-cyan-500 to-blue-500',
    description: 'Revolutionary AI consciousness and emotional intelligence'
  },
  {
    id: 'quantum-emerging',
    name: 'Quantum & Emerging Tech',
    icon: <Atom className="w-6 h-6" />,
    color: 'from-purple-500 to-pink-500',
    description: 'Quantum computing and breakthrough technologies'
  },
  {
    id: 'space-metaverse',
    name: 'Space & Metaverse',
    icon: <Rocket className="w-6 h-6" />,
    color: 'from-pink-500 to-rose-500',
    description: 'Space exploration and virtual worlds'
  },
  {
    id: 'micro-saas',
    name: 'Micro SAAS',
    icon: <Target className="w-6 h-6" />,
    color: 'from-orange-500 to-red-500',
    description: 'Innovative business solutions'
  },
  {
    id: 'creative-media',
    name: 'Creative & Media',
    icon: <Palette className="w-6 h-6" />,
    color: 'from-indigo-500 to-purple-500',
    description: 'AI-powered creative solutions'
  },
  {
    id: 'healthcare-biotech',
    name: 'Healthcare & Biotech',
    icon: <Heart className="w-6 h-6" />,
    color: 'from-red-500 to-pink-500',
    description: 'Advanced healthcare solutions'
  },
  {
    id: 'transportation-logistics',
    name: 'Transportation & Logistics',
    icon: <Truck className="w-6 h-6" />,
    color: 'from-blue-500 to-cyan-500',
    description: 'Smart transportation solutions'
  },
  {
    id: 'education-research',
    name: 'Education & Research',
    icon: <GraduationCap className="w-6 h-6" />,
    color: 'from-yellow-500 to-orange-500',
    description: 'Learning and research platforms'
  }
];

const sortOptions = [
  { value: 'name', label: 'Name A-Z' },
  { value: 'price-low', label: 'Price: Low to High' },
  { value: 'price-high', label: 'Price: High to Low' },
  { value: 'popular', label: 'Most Popular' },
  { value: 'newest', label: 'Newest First' },
  { value: 'rating', label: 'Highest Rated' }
];

export default function Services() {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [sortBy, setSortBy] = useState('name');
  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');
  const [currentPage, setCurrentPage] = useState(1);
  const [isLoading, setIsLoading] = useState(true);
  const [isVisible, setIsVisible] = useState(false);
  const pageSize = 18;

  // Simulate loading state for better UX
  useEffect(() => {
    const timer = setTimeout(() => {
      setIsLoading(false);
      setIsVisible(true);
    }, 800);

    return () => clearTimeout(timer);
  }, []);

  // Filter services based on search and category
  const filteredServices = allServices.filter(service => {
    const matchesSearch = service.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         getServiceDescription(service).toLowerCase().includes(searchQuery.toLowerCase());
    
    if (selectedCategory === 'all') return matchesSearch;
    
    const serviceCategory = getServiceCategory(service).toLowerCase();
    const categoryName = categories.find(cat => cat.id === selectedCategory)?.name.toLowerCase();
    
    return matchesSearch && serviceCategory.includes(categoryName || '');
  });

  // Sort services
  const sortedServices = [...filteredServices].sort((a, b) => {
    switch (sortBy) {
      case 'name':
        return a.name.localeCompare(b.name);
      case 'price-low':
        return (parseInt(getServicePricing(a).replace(/[^0-9]/g, '')) || 0) - 
               (parseInt(getServicePricing(b).replace(/[^0-9]/g, '')) || 0);
      case 'price-high':
        return (parseInt(getServicePricing(b).replace(/[^0-9]/g, '')) || 0) - 
               (parseInt(getServicePricing(a).replace(/[^0-9]/g, '')) || 0);
      case 'newest':
        return new Date((b as any).launchDate || '2020-01-01').getTime() - 
               new Date((a as any).launchDate || '2020-01-01').getTime();
      case 'rating':
        return (((b as any).rating || 0) as number) - (((a as any).rating || 0) as number);
      default:
        return 0;
    }
  });

  // Pagination helpers
  const totalPages = Math.max(1, Math.ceil(sortedServices.length / pageSize));
  const currentPageClamped = Math.min(currentPage, totalPages);
  const paginatedServices = sortedServices.slice(
    (currentPageClamped - 1) * pageSize,
    currentPageClamped * pageSize
  );

  // Reset to first page when filters/sort change
  React.useEffect(() => {
    setCurrentPage(1);
  }, [searchQuery, selectedCategory, sortBy]);

  const getCategoryIcon = (category: string) => {
    switch (category.toLowerCase()) {
      case 'enterprise it':
      case 'enterprise security':
      case 'devops & automation':
      case 'data & analytics':
      case 'cloud services':
      case 'cybersecurity':
        return <Building className="w-6 h-6 text-blue-400" />;
      case 'ai & consciousness':
      case 'ai services':
      case 'artificial intelligence':
        return <Brain className="w-6 h-6 text-cyan-400" />;
      case 'quantum':
      case 'quantum & emerging tech':
        return <Atom className="w-6 h-6 text-purple-400" />;
      case 'space':
      case 'space & metaverse':
        return <Rocket className="w-6 h-6 text-pink-400" />;
      case 'micro saas':
      case 'micro saas solutions':
        return <Target className="w-6 h-6 text-orange-400" />;
      case 'creative':
      case 'creative & media':
        return <Palette className="w-6 h-6 text-indigo-400" />;
      case 'healthcare':
      case 'healthcare & biotech':
        return <Heart className="w-6 h-6 text-red-400" />;
      case 'transportation':
      case 'transportation & logistics':
        return <Truck className="w-6 h-6 text-blue-400" />;
      case 'education':
      case 'education & research':
        return <GraduationCap className="w-6 h-6 text-yellow-400" />;
      default:
        return <Shield className="w-6 h-6 text-gray-400" />;
    }
  };
};

const ServicesPage: React.FC = () => {
  return (
    <>
=======

export default function Services() {
  return (
    <div className="min-h-screen bg-black text-white pt-24">
      <SEO 
        title="Services | Zion Tech Group - Enterprise IT, AI, Micro SAAS Solutions" 
        description="Discover our comprehensive portfolio of enterprise IT solutions, AI services, and innovative micro SAAS platforms. Transform your business with cutting-edge technology." 
        canonical="https://ziontechgroup.com/services/" 
      />
      <div className="max-w-7xl mx-auto px-4">
        <h1 className="text-4xl font-bold text-center">Services Page Temporarily Disabled</h1>
        <p className="text-center text-gray-400 mt-4">This page is being updated to fix build issues.</p>
        <p className="text-center text-gray-400 mt-2">Please visit individual service pages or contact us directly.</p>
        <div className="mt-8 text-center">
          <a 
            href="/contact" 
            className="inline-block px-6 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-medium rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all duration-200"
          >
            Contact Us
          </a>
        </div>
      </div>
    </div>
  );
};

export default ServicesPage;