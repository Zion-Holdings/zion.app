import React from 'react';
<<<<<<< HEAD
import Layout from '../components/layout/Layout';
    <Layout 
      title="Support - Zion Tech Group"
      description="Get comprehensive support for all Zion Tech Group services. 24/7 assistance, documentation, and expert guidance to ensure your success."
    >
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 text-white">
        {/* Hero Section */}
        <section className="relative py-20 px-4 sm:px-6 lg:px-8">
=======
import { motion } from 'framer-motion';
import { Headphones, MessageCircle, BookOpen, Video, Phone, Mail, Clock, Star, Zap, Shield, Users, Globe } from 'lucide-react';
import Layout from '../components/layout/Layout';

const Support: React.FC = () => {
  const supportChannels = [
    {
      title: 'Live Chat Support',
      description: 'Get instant help from our AI-powered support team',
      icon: <MessageCircle className="w-8 h-8 text-blue-400" />,
      availability: '24/7',
      responseTime: '< 2 minutes',
      priority: 'high'
    },
    {
      title: 'Phone Support',
      description: 'Speak directly with our technical experts',
      icon: <Phone className="w-8 h-8 text-green-400" />,
      availability: 'Mon-Fri 9AM-6PM EST',
      responseTime: 'Immediate',
      priority: 'high'
    },
    {
      title: 'Email Support',
      description: 'Send detailed inquiries for complex issues',
      icon: <Mail className="w-8 h-8 text-purple-400" />,
      availability: '24/7',
      responseTime: '< 4 hours',
      priority: 'medium'
    },
    {
      title: 'Video Call Support',
      description: 'Screen sharing and visual troubleshooting',
      icon: <Video className="w-8 h-8 text-yellow-400" />,
      availability: 'By appointment',
      responseTime: 'Scheduled',
      priority: 'medium'
    }
  ];

  const helpCategories = [
    {
      title: 'Getting Started',
      description: 'New user guides and setup instructions',
      icon: <BookOpen className="w-6 h-6 text-blue-400" />,
      articles: 15,
      popular: ['First Steps', 'Account Setup', 'Quick Tour']
    },
    {
      title: 'AI Consciousness',
      description: 'Understanding and using AI consciousness features',
      icon: <Zap className="w-6 h-6 text-purple-400" />,
      articles: 23,
      popular: ['Consciousness Training', 'Ethics Guidelines', 'Best Practices']
    },
    {
      title: 'Quantum Technology',
      description: 'Quantum computing and integration guides',
      icon: <Globe className="w-6 h-6 text-green-400" />,
      articles: 18,
      popular: ['Quantum Basics', 'Integration', 'Performance']
    },
    {
      title: 'Technical Issues',
      description: 'Troubleshooting and technical support',
      icon: <Shield className="w-6 h-6 text-red-400" />,
      articles: 31,
      popular: ['Error Codes', 'Performance Issues', 'API Problems']
    },
    {
      title: 'Account & Billing',
      description: 'Account management and billing support',
      icon: <Users className="w-6 h-6 text-yellow-400" />,
      articles: 12,
      popular: ['Billing Questions', 'Account Settings', 'Subscription']
    },
    {
      title: 'API & Integration',
      description: 'Developer resources and API documentation',
      icon: <BookOpen className="w-6 h-6 text-cyan-400" />,
      articles: 27,
      popular: ['API Reference', 'SDK Downloads', 'Examples']
    }
  ];

  const faqs = [
    {
      question: 'How do I get started with AI consciousness training?',
      answer: 'Start with our AI Consciousness Fundamentals course, which covers the basics of consciousness training, ethical principles, and hands-on exercises. You can enroll through our training portal or contact our support team for personalized guidance.'
    },
    {
      question: 'What are the system requirements for quantum AI integration?',
      answer: 'Our quantum AI services require a minimum of 16GB RAM, multi-core processor, and stable internet connection. For optimal performance, we recommend 32GB RAM and dedicated GPU support. Check our technical specifications page for detailed requirements.'
    },
    {
      question: 'How can I report a bug or technical issue?',
      answer: 'You can report issues through our support portal, live chat, or email support. Please include detailed information about the problem, steps to reproduce, and any error messages. Our technical team typically responds within 4 hours.'
    },
    {
      question: 'What security measures protect my data?',
      answer: 'We implement enterprise-grade security including end-to-end encryption, SOC 2 compliance, regular security audits, and strict access controls. All data is encrypted both in transit and at rest, with regular backups and disaster recovery procedures.'
    },
    {
      question: 'Can I get a refund if I\'m not satisfied?',
      answer: 'We offer a 30-day money-back guarantee for all our services. If you\'re not completely satisfied within the first 30 days, contact our support team for a full refund. Enterprise contracts may have different terms outlined in the agreement.'
    }
  ];

  return (
    <Layout>
      <div className="min-h-screen bg-gradient-to-br from-black via-purple-900 to-blue-900">
        {/* Hero Section */}
        <section className="relative pt-32 pb-20 px-4">
>>>>>>> origin/cursor/website-audit-content-update-and-deployment-3902
          <div className="max-w-7xl mx-auto text-center">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
<<<<<<< HEAD
              transition={{ duration: 0.6 }}
            >
              <h1 className="text-5xl md:text-6xl font-bold bg-gradient-to-r from-cyan-400 via-blue-500 to-purple-600 bg-clip-text text-transparent mb-6">
                Support Center
              </h1>
              <p className="text-xl md:text-2xl text-gray-300 mb-8 max-w-4xl mx-auto">
                Expert support and guidance for all your Zion Tech Group needs. Our dedicated team is here 
                to ensure your success with our revolutionary technology solutions.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <a
                  href="#contact"
                  className="px-8 py-4 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-lg font-semibold hover:from-cyan-600 hover:to-blue-700 transition-all duration-300 transform hover:scale-105"
                >
                  Get Support Now
                </a>
                <a
                  href="#documentation"
                  className="px-8 py-4 border border-cyan-500/30 text-cyan-400 rounded-lg font-semibold hover:bg-cyan-500/10 transition-all duration-300"
                >
                  Browse Documentation
                </a>
=======
              transition={{ duration: 0.8 }}
            >
              <div className="inline-flex items-center px-4 py-2 bg-purple-500/20 border border-purple-400/30 rounded-full text-purple-300 text-sm mb-6">
                <Headphones className="w-4 h-4 mr-2" />
                24/7 Support Available
              </div>
              
              <h1 className="text-5xl md:text-7xl font-bold mb-6">
                <span className="bg-gradient-to-r from-purple-400 via-blue-400 to-cyan-400 bg-clip-text text-transparent">
                  Support Center
                </span>
              </h1>
              
              <p className="text-xl md:text-2xl text-gray-300 mb-8 max-w-4xl mx-auto">
                Get expert help whenever you need it. Our AI-powered support team 
                and comprehensive resources are here to assist you 24/7.
              </p>
              
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="px-8 py-4 bg-gradient-to-r from-purple-500 to-blue-600 text-white font-semibold rounded-xl hover:from-purple-600 hover:to-blue-700 transition-all duration-300"
                >
                  Start Live Chat
                </motion.button>
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="px-8 py-4 border-2 border-purple-400 text-purple-400 font-semibold rounded-xl hover:bg-purple-400 hover:text-black transition-all duration-300"
                >
                  Contact Support
                </motion.button>
>>>>>>> origin/cursor/website-audit-content-update-and-deployment-3902
              </div>
            </motion.div>
          </div>
        </section>

<<<<<<< HEAD
        {/* Support Stats Section */}
        <section className="py-16 px-4 sm:px-6 lg:px-8">
          <div className="max-w-7xl mx-auto">
            <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
              {supportStats.map((stat, index) => (
                <motion.div
                  key={stat.label}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: 0.1 * index }}
                  className="text-center"
                >
                  <div className="text-4xl md:text-5xl font-bold text-cyan-400 mb-2">
                    {stat.metric}
                  </div>
                  <div className="text-gray-400">{stat.label}</div>
                Multiple Support Channels
              </h2>
              <p className="text-xl text-gray-400 max-w-3xl mx-auto">
                Choose the support method that works best for you
              </p>
            </motion.div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {supportChannels.map((channel, index) => (
                <motion.div
                  key={channel.title}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 p-6 rounded-2xl border border-gray-700/50 hover:border-purple-500/50 transition-all duration-300"
                >
                  <div className={`w-12 h-12 bg-gradient-to-br ${channel.color} rounded-xl flex items-center justify-center mb-4`}>
                    {channel.icon}
                  </div>
                  <h3 className="text-lg font-bold text-white mb-2">{channel.title}</h3>
                  <p className="text-gray-300 text-sm mb-4">{channel.description}</p>
                  <div className="space-y-2 text-sm">
                    <div className="flex items-center justify-between">
                      <span className="text-gray-400">Availability:</span>
                      <span className="text-green-400 font-semibold">{channel.availability}</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-gray-400">Response:</span>
                      <span className="text-blue-400 font-semibold">{channel.responseTime}</span>
                    </div>
                  </div>
=======
        {/* Support Channels Section */}
        <section className="py-20 px-4">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
                How Can We Help You?
              </h2>
              <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                Choose from multiple support channels based on your needs and urgency.
              </p>
            </motion.div>

            <div className="grid md:grid-cols-2 gap-8">
              {supportChannels.map((channel, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8, delay: index * 0.1 }}
                  className="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-8 hover:bg-white/10 transition-all duration-300"
                >
                  <div className="flex items-start justify-between mb-6">
                    <div className="mb-4">{channel.icon}</div>
                    <span className={`px-3 py-1 text-xs rounded-full ${
                      channel.priority === 'high' 
                        ? 'bg-red-500/20 text-red-300' 
                        : 'bg-yellow-500/20 text-yellow-300'
                    }`}>
                      {channel.priority === 'high' ? 'Priority' : 'Standard'}
                    </span>
                  </div>
                  
                  <h3 className="text-2xl font-bold text-white mb-3">{channel.title}</h3>
                  <p className="text-gray-300 mb-6">{channel.description}</p>
                  
                  <div className="space-y-3 mb-6">
                    <div className="flex items-center space-x-3">
                      <Clock className="w-4 h-4 text-gray-400" />
                      <span className="text-gray-300 text-sm">
                        <span className="text-gray-400">Availability:</span> {channel.availability}
                      </span>
                    </div>
                    <div className="flex items-center space-x-3">
                      <Star className="w-4 h-4 text-gray-400" />
                      <span className="text-gray-300 text-sm">
                        <span className="text-gray-400">Response:</span> {channel.responseTime}
                      </span>
                    </div>
                  </div>
                  
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="w-full px-6 py-3 bg-gradient-to-r from-purple-500 to-blue-600 text-white font-semibold rounded-xl hover:from-purple-600 hover:to-blue-700 transition-all duration-300"
                  >
                    Get Help Now
                  </motion.button>
>>>>>>> origin/cursor/website-audit-content-update-and-deployment-3902
                </motion.div>
              ))}
            </div>
          </div>
        </section>

<<<<<<< HEAD
        {/* Support Categories */}
        <section className="py-20 bg-black/50">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-3xl lg:text-4xl font-bold text-white mb-6">
                Support Categories
              </h2>
              <p className="text-xl text-gray-400 max-w-3xl mx-auto">
                Comprehensive support for all aspects of our services
              </p>
            </motion.div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              {supportCategories.map((category, index) => (
                <motion.div
                  key={category.title}
                  initial={{ opacity: 0, x: index % 2 === 0 ? -30 : 30 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.6 }}
                  viewport={{ once: true }}
                  className="bg-gradient-to-br from-gray-800/30 to-gray-900/30 p-6 rounded-2xl border border-gray-700/30 hover:border-purple-500/50 transition-all duration-300"
                >
                  <div className="flex items-center mb-4">
                    <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-blue-600 rounded-xl flex items-center justify-center mr-3">
                      {category.icon}
                    </div>
                    <h3 className="text-xl font-bold text-white">{category.title}</h3>
                  </div>
                  <p className="text-gray-300 mb-4">{category.description}</p>
                  <div className="grid grid-cols-2 gap-2">
                    {category.topics.map((topic) => (
                      <div key={topic} className="flex items-center space-x-2 text-sm">
                        <CheckCircle className="w-4 h-4 text-green-400 flex-shrink-0" />
                        <span className="text-gray-300">{topic}</span>
                      </div>
                    ))}
                  </div>
=======
        {/* Help Categories Section */}
        <section className="py-20 px-4 bg-white/5">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
                Help & Documentation
              </h2>
              <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                Comprehensive guides, tutorials, and resources to help you succeed.
              </p>
            </motion.div>

            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {helpCategories.map((category, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8, delay: index * 0.1 }}
                  className="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6 hover:bg-white/10 transition-all duration-300"
                >
                  <div className="flex items-center space-x-3 mb-4">
                    {category.icon}
                    <h3 className="text-xl font-bold text-white">{category.title}</h3>
                  </div>
                  
                  <p className="text-gray-300 mb-4">{category.description}</p>
                  
                  <div className="mb-4">
                    <span className="text-sm text-gray-400">
                      {category.articles} articles available
                    </span>
                  </div>
                  
                  <div className="mb-6">
                    <h4 className="text-sm font-semibold text-white mb-2">Popular Topics:</h4>
                    <div className="space-y-1">
                      {category.popular.map((topic, topicIndex) => (
                        <div key={topicIndex} className="text-xs text-gray-400">
                          • {topic}
                        </div>
                      ))}
                    </div>
                  </div>
                  
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="w-full px-4 py-2 bg-gradient-to-r from-purple-500 to-blue-600 text-white font-semibold rounded-xl hover:from-purple-600 hover:to-blue-700 transition-all duration-300 text-sm"
                  >
                    Browse Articles
                  </motion.button>
>>>>>>> origin/cursor/website-audit-content-update-and-deployment-3902
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* FAQ Section */}
<<<<<<< HEAD
        <section className="py-20">
          <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-3xl lg:text-4xl font-bold text-white mb-6">
                Frequently Asked Questions
              </h2>
              <p className="text-xl text-gray-400">
                Quick answers to common support questions
              </p>
            </motion.div>
            
=======
        <section className="py-20 px-4">
          <div className="max-w-4xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
                Frequently Asked Questions
              </h2>
              <p className="text-xl text-gray-300">
                Quick answers to common questions about our services and support.
              </p>
            </motion.div>

>>>>>>> origin/cursor/website-audit-content-update-and-deployment-3902
            <div className="space-y-6">
              {faqs.map((faq, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
<<<<<<< HEAD
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="bg-gradient-to-br from-gray-800/30 to-gray-900/30 p-6 rounded-2xl border border-gray-700/30"
                >
                  <h3 className="text-lg font-semibold text-white mb-3">{faq.question}</h3>
                  <p className="text-gray-300">{faq.answer}</p>
=======
=======
                  transition={{ duration: 0.8, delay: index * 0.1 }}
                  className="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-8"
                >
                  <h3 className="text-xl font-bold text-white mb-4">{faq.question}</h3>
                  <p className="text-gray-300 leading-relaxed">{faq.answer}</p>
>>>>>>> origin/cursor/website-audit-content-update-and-deployment-3902
                </motion.div>
              ))}
            </div>
          </div>
        </section>

<<<<<<< HEAD
                  <div className="flex items-center space-x-3">
                    <MapPin className="w-5 h-5 text-purple-400" />
                    <div>
                      <div className="text-white font-semibold">Address</div>
                      <span className="text-gray-300 text-sm">{contactInfo.address}</span>
                    </div>
                  </div>
                </div>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, x: 30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="bg-gradient-to-br from-blue-900/30 to-cyan-900/30 p-8 rounded-3xl border border-blue-500/20"
              >
                <h3 className="text-2xl font-bold text-white mb-6">Emergency Support</h3>
                <div className="space-y-4">
                  <div className="flex items-center space-x-3">
                    <Clock className="w-5 h-5 text-blue-400" />
                    <div>
                      <div className="text-white font-semibold">24/7 Emergency Line</div>
                      <a href={`tel:${contactInfo.phone}`} className="text-blue-400 hover:text-blue-300">
                        {contactInfo.phone}
                      </a>
                    </div>
                  </div>
                  <div className="flex items-center space-x-3">
                    <Mail className="w-5 h-5 text-blue-400" />
                    <div>
                      <div className="text-white font-semibold">Emergency Email</div>
                      <a href={`mailto:${contactInfo.emergencyEmail}`} className="text-blue-400 hover:text-blue-300">
                        {contactInfo.emergencyEmail}
                      </a>
                    </div>
                  </div>
                  <div className="flex items-center space-x-3">
                    <Globe className="w-5 h-5 text-blue-400" />
                    <div>
                      <div className="text-white font-semibold">Website</div>
                      <a href={contactInfo.website} className="text-blue-400 hover:text-blue-300">
                        {contactInfo.website}
                      </a>
                    </div>
                  </div>
                </div>
              </motion.div>
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="py-20">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
            >
              <h2 className="text-3xl lg:text-4xl font-bold text-white mb-6">
                Need Help Right Now?
              </h2>
              <p className="text-xl text-gray-400 max-w-3xl mx-auto mb-8">
                Our support team is ready to assist you with any questions or issues.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <a
                  href={`tel:${contactInfo.phone}`}
                  className="inline-flex items-center px-8 py-4 bg-gradient-to-r from-purple-500 to-blue-600 text-white font-semibold rounded-2xl hover:from-purple-600 hover:to-blue-700 transition-all duration-300 transform hover:scale-105"
                >
                  Call Support Now
                  <ArrowRight className="w-5 h-5 ml-2" />
                </a>
                <Link
                  href="/contact"
                  className="inline-flex items-center px-8 py-4 border-2 border-purple-500/30 text-purple-400 font-semibold rounded-2xl hover:border-purple-500/50 hover:text-purple-300 transition-all duration-300"
                >
                  Contact Form
                </Link>
=======
        {/* Support Channels Section */}
        <section className="py-20 px-4 sm:px-6 lg:px-8 bg-gray-800/30">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold mb-4">Multiple Support Channels</h2>
              <p className="text-xl text-gray-400 max-w-3xl mx-auto">
                Choose the support method that works best for you. We're here to help through 
                multiple channels, ensuring you get the assistance you need when you need it.
              </p>
            </motion.div>

            <div className="grid md:grid-cols-2 gap-8">
              {supportChannels.map((channel, index) => (
                <motion.div
                  key={channel.title}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: 0.1 * index }}
                  className="bg-gray-800/50 backdrop-blur-sm rounded-xl p-8 border border-gray-700/50 hover:border-cyan-500/50 transition-all duration-300"
                >
                  <div className="flex items-center mb-6">
                    <div className="p-3 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-lg mr-4">
                      {channel.icon}
                    </div>
                    <div>
                      <h3 className="text-2xl font-semibold">{channel.title}</h3>
                      <p className="text-gray-400">{channel.description}</p>
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-3 gap-4 mb-6">
                    <div className="text-center">
                      <div className="text-sm text-gray-400 mb-1">Availability</div>
                      <div className="text-sm font-medium">{channel.availability}</div>
                    </div>
                    <div className="text-center">
                      <div className="text-sm text-gray-400 mb-1">Response</div>
                      <div className="text-sm font-medium">{channel.responseTime}</div>
                    </div>
                    <div className="text-center">
                      <div className="text-sm text-gray-400 mb-1">Priority</div>
                      <div className="text-sm font-medium">{channel.priority}</div>
                    </div>
                  </div>

                  <button className="w-full py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-lg font-semibold hover:from-cyan-600 hover:to-blue-700 transition-all duration-300">
                    Get {channel.title}
                  </button>
                </motion.div>
              ))}

              <motion.div
                initial={{ opacity: 0, x: 30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="bg-gradient-to-br from-blue-900/30 to-cyan-900/30 p-8 rounded-3xl border border-blue-500/20"
              >
                <h3 className="text-2xl font-bold text-white mb-6">Emergency Support</h3>
                <div className="space-y-4">
                  <div className="flex items-center space-x-3">
                    <Clock className="w-5 h-5 text-blue-400" />
                    <div>
                      <div className="text-white font-semibold">24/7 Emergency Line</div>
                      <a href={`tel:${contactInfo.phone}`} className="text-blue-400 hover:text-blue-300">
                        {contactInfo.phone}
                      </a>
                    </div>
                  </div>
                  <div className="flex items-center space-x-3">
                    <Mail className="w-5 h-5 text-blue-400" />
                    <div>
                      <div className="text-white font-semibold">Emergency Email</div>
                      <a href={`mailto:${contactInfo.emergencyEmail}`} className="text-blue-400 hover:text-blue-300">
                        {contactInfo.emergencyEmail}
                      </a>
                    </div>
                  </div>
                  <div className="flex items-center space-x-3">
                    <Globe className="w-5 h-5 text-blue-400" />
                    <div>
                      <div className="text-white font-semibold">Website</div>
                      <a href={contactInfo.website} className="text-blue-400 hover:text-blue-300">
                        {contactInfo.website}
                      </a>
                    </div>
                  </div>
                </div>
              </motion.div>
=======
            </div>
          </div>
        </section>

        {/* Help Categories Section */}
        <section className="py-20 px-4 sm:px-6 lg:px-8" id="documentation">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.4 }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold mb-4">Help & Documentation</h2>
              <p className="text-xl text-gray-400 max-w-3xl mx-auto">
                Comprehensive resources to help you succeed with our technology solutions
              </p>
            </motion.div>

            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {helpCategories.map((category, index) => (
                <motion.div
                  key={category.title}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: 0.1 * index }}
                  className="bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50 hover:border-cyan-500/50 transition-all duration-300"
                >
                  <div className="flex items-center mb-4">
                    <div className="p-2 bg-gradient-to-r from-cyan-500/20 to-blue-500/20 rounded-lg mr-3">
                      <div className="text-cyan-400">
                        {category.icon}
                      </div>
                    </div>
                    <div>
                      <h3 className="text-xl font-semibold">{category.title}</h3>
                      {category.popular && (
                        <span className="text-xs bg-cyan-500/20 text-cyan-400 px-2 py-1 rounded-full">
                          Popular
                        </span>
                      )}
                    </div>
                  </div>
                  <p className="text-gray-400 mb-4">{category.description}</p>
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-500">{category.articles} articles</span>
                    <button className="text-cyan-400 hover:text-cyan-300 text-sm font-medium">
                      Browse →
                    </button>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* FAQ Section */}
        <section className="py-20 px-4 sm:px-6 lg:px-8 bg-gray-800/30">
          <div className="max-w-4xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.6 }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold mb-4">Frequently Asked Questions</h2>
              <p className="text-xl text-gray-400">
                Quick answers to common questions about our services and support
              </p>
            </motion.div>

            <div className="space-y-6">
              {faqItems.map((item, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: 0.1 * index }}
                  className="bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50"
                >
                  <h3 className="text-xl font-semibold mb-3 text-cyan-400">
                    {item.question}
                  </h3>
                  <p className="text-gray-300 leading-relaxed">
                    {item.answer}
                  </p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Contact Support Section */}
        <section className="py-20 px-4 sm:px-6 lg:px-8" id="contact">
          <div className="max-w-4xl mx-auto text-center">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.8 }}
            >
              <h2 className="text-4xl font-bold mb-6">Still Need Help?</h2>
              <p className="text-xl text-gray-400 mb-8">
                Our support team is ready to assist you with any questions or technical issues. 
                Don't hesitate to reach out—we're here to help you succeed.
              </p>
              
              <div className="grid md:grid-cols-3 gap-6 mb-8">
                <div className="text-center">
                  <Clock className="w-12 h-12 text-cyan-400 mx-auto mb-4" />
                  <h3 className="text-xl font-semibold mb-2">24/7 Availability</h3>
                  <p className="text-gray-400">Round-the-clock support for critical issues</p>
                </div>
                <div className="text-center">
                  <Users className="w-12 h-12 text-cyan-400 mx-auto mb-4" />
                  <h3 className="text-xl font-semibold mb-2">Expert Team</h3>
                  <p className="text-gray-400">Certified professionals ready to help</p>
                </div>
                <div className="text-center">
                  <Shield className="w-12 h-12 text-cyan-400 mx-auto mb-4" />
                  <h3 className="text-xl font-semibold mb-2">Secure Support</h3>
                  <p className="text-gray-400">Safe and confidential assistance</p>
                </div>
              </div>

              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <a
                  href="/contact"
                  className="px-8 py-4 bg-gradient-to-r from-cyan-500 to-blue-600 text-white rounded-lg font-semibold hover:from-cyan-600 hover:to-blue-700 transition-all duration-300 transform hover:scale-105"
                >
                  Contact Support Team
                </a>
                <a
                  href="tel:+1-800-ZION-TECH"
                  className="px-8 py-4 border border-cyan-500/30 text-cyan-400 rounded-lg font-semibold hover:bg-cyan-500/10 transition-all duration-300"
                >
                  Call Now
                </a>
              </div>
            </motion.div>
          </div>
        </section>
=======
import { Brain, Sparkles, Zap, Target, Users, Award, Clock, CheckCircle, MessageCircle, Globe, Shield, TrendingUp, Building, Star, Search, Phone, Mail, HelpCircle, BookOpen, Video, FileText } from 'lucide-react';

export default function Support() {
  return (
    <Layout>
      <div className="min-h-screen bg-gradient-to-br from-black via-gray-900 to-black">
        {/* Hero Section */}
        <section className="relative py-20 px-4 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-r from-blue-500/10 via-indigo-500/10 to-blue-500/10"></div>
          <div className="relative z-10 max-w-7xl mx-auto text-center">
            <div className="mb-8">
              <div className="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-blue-500/20 to-indigo-500/20 border border-blue-500/30 rounded-full text-blue-300 text-sm mb-6">
                <Sparkles className="w-4 h-4" />
                Expert Support
              </div>
              <h1 className="text-5xl md:text-7xl font-bold mb-6">
                <span className="bg-gradient-to-r from-blue-400 via-indigo-400 to-blue-400 bg-clip-text text-transparent">
                  Support
                </span>
                <br />
                <span className="text-white">We're Here to Help</span>
              </h1>
              <p className="text-xl md:text-2xl text-gray-300 max-w-4xl mx-auto mb-8">
                Get expert help with implementation, troubleshooting, and optimization. 
                Our team is ready to support your success with our technology.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button className="px-8 py-4 bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-semibold rounded-xl hover:from-blue-600 hover:to-indigo-700 transition-all duration-300 transform hover:scale-105">
                  Contact Support
                </button>
                <button className="px-8 py-4 border-2 border-blue-400 text-blue-400 font-semibold rounded-xl hover:bg-blue-400 hover:text-black transition-all duration-300">
                  Browse Documentation
                </button>
              </div>
            </div>
          </div>
        </section>

        {/* Support Options */}
        <section className="py-20 px-4">
          <div className="max-w-7xl mx-auto">
            <div className="text-center mb-16">
              <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
                How Can We Help?
              </h2>
              <p className="text-xl text-gray-400 max-w-3xl mx-auto">
                Choose the support option that best fits your needs. We're committed 
                to providing you with the assistance you need to succeed.
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {[
                {
                  icon: <MessageCircle className="w-12 h-12" />,
                  title: "Live Chat Support",
                  description: "Get instant help from our technical experts through our live chat system.",
                  availability: "24/7",
                  responseTime: "Instant",
                  color: "from-blue-500 to-indigo-500"
                },
                {
                  icon: <Phone className="w-12 h-12" />,
                  title: "Phone Support",
                  description: "Speak directly with our support engineers for complex technical issues.",
                  availability: "Business Hours",
                  responseTime: "Immediate",
                  color: "from-purple-500 to-pink-500"
                },
                {
                  icon: <Mail className="w-12 h-12" />,
                  title: "Email Support",
                  description: "Submit detailed support tickets for comprehensive issue resolution.",
                  availability: "24/7",
                  responseTime: "4 hours",
                  color: "from-green-500 to-emerald-500"
                },
                {
                  icon: <BookOpen className="w-12 h-12" />,
                  title: "Documentation",
                  description: "Comprehensive guides, tutorials, and reference materials for self-service support.",
                  availability: "24/7",
                  responseTime: "Instant",
                  color: "from-orange-500 to-red-500"
                },
                {
                  icon: <Video className="w-12 h-12" />,
                  title: "Video Tutorials",
                  description: "Step-by-step video guides for common tasks and troubleshooting.",
                  availability: "24/7",
                  responseTime: "Instant",
                  color: "from-yellow-500 to-orange-500"
                },
                {
                  icon: <Users className="w-12 h-12" />,
                  title: "Community Forum",
                  description: "Connect with other users and share solutions in our community forum.",
                  availability: "24/7",
                  responseTime: "Varies",
                  color: "from-indigo-500 to-purple-500"
                }
              ].map((option, index) => (
                <div key={index} className="group p-8 bg-gradient-to-br from-gray-800/50 to-gray-900/50 border border-gray-700/50 rounded-2xl hover:border-blue-500/50 transition-all duration-300 hover:transform hover:scale-105">
                  <div className={`w-20 h-20 rounded-2xl bg-gradient-to-r ${option.color} p-5 mx-auto mb-6 group-hover:scale-110 transition-transform duration-300`}>
                    {option.icon}
                  </div>
                  <h3 className="text-xl font-semibold text-white mb-4">{option.title}</h3>
                  <p className="text-gray-400 mb-6">{option.description}</p>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span className="text-gray-400">Availability:</span>
                      <span className="text-blue-400 font-medium">{option.availability}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-gray-400">Response Time:</span>
                      <span className="text-green-400 font-medium">{option.responseTime}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Common Issues */}
        <section className="py-20 px-4 bg-gradient-to-r from-blue-500/5 to-indigo-500/5">
          <div className="max-w-7xl mx-auto">
            <div className="text-center mb-16">
              <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
                Common Issues & Solutions
              </h2>
              <p className="text-xl text-gray-400 max-w-3xl mx-auto">
                Find quick solutions to frequently encountered issues and learn 
                how to prevent them in the future.
              </p>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              {[
                {
                  title: "AI Consciousness System Integration",
                  issues: [
                    "API authentication errors",
                    "Model training failures",
                    "Performance optimization",
                    "Ethical compliance setup"
                  ],
                  solutions: [
                    "Verify API keys and permissions",
                    "Check training data quality",
                    "Optimize model parameters",
                    "Implement ethical guidelines"
                  ],
                  color: "from-blue-500 to-indigo-500"
                },
                {
                  title: "Quantum Computing Services",
                  issues: [
                    "Quantum circuit errors",
                    "Simulation timeouts",
                    "Result interpretation",
                    "Hardware compatibility"
                  ],
                  solutions: [
                    "Validate circuit design",
                    "Optimize circuit depth",
                    "Use result analyzers",
                    "Check system requirements"
                  ],
                  color: "from-purple-500 to-pink-500"
                }
              ].map((category, index) => (
                <div key={index} className="p-8 bg-gradient-to-br from-gray-800/50 to-gray-900/50 border border-gray-700/50 rounded-2xl">
                  <h3 className="text-2xl font-semibold text-white mb-6">{category.title}</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <h4 className="text-lg font-semibold text-red-400 mb-4">Common Issues</h4>
                      <ul className="space-y-2">
                        {category.issues.map((issue, issueIndex) => (
                          <li key={issueIndex} className="flex items-start gap-2 text-gray-400">
                            <div className="w-2 h-2 bg-red-400 rounded-full mt-2 flex-shrink-0"></div>
                            <span>{issue}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                    <div>
                      <h4 className="text-lg font-semibold text-green-400 mb-4">Solutions</h4>
                      <ul className="space-y-2">
                        {category.solutions.map((solution, solutionIndex) => (
                          <li key={solutionIndex} className="flex items-start gap-2 text-gray-400">
                            <div className="w-2 h-2 bg-green-400 rounded-full mt-2 flex-shrink-0"></div>
                            <span>{solution}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Support Tiers */}
        <section className="py-20 px-4">
          <div className="max-w-7xl mx-auto">
            <div className="text-center mb-16">
              <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
                Support Tiers
              </h2>
              <p className="text-xl text-gray-400 max-w-3xl mx-auto">
                Choose the support level that matches your needs and business requirements.
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {[
                {
                  name: "Basic Support",
                  description: "Essential support for getting started and basic troubleshooting.",
                  features: [
                    "Email support (24/7)",
                    "Documentation access",
                    "Community forum access",
                    "4-hour response time"
                  ],
                  price: "Included",
                  color: "from-gray-500 to-gray-600",
                  recommended: false
                },
                {
                  name: "Professional Support",
                  description: "Enhanced support for production environments and business-critical applications.",
                  features: [
                    "All Basic features",
                    "Live chat support",
                    "Phone support (business hours)",
                    "2-hour response time",
                    "Priority ticket handling"
                  ],
                  price: "$500/month",
                  color: "from-blue-500 to-indigo-500",
                  recommended: true
                },
                {
                  name: "Enterprise Support",
                  description: "Premium support with dedicated engineers and custom solutions.",
                  features: [
                    "All Professional features",
                    "Dedicated support engineer",
                    "24/7 phone support",
                    "1-hour response time",
                    "Custom training sessions",
                    "SLA guarantees"
                  ],
                  price: "$2,000/month",
                  color: "from-purple-500 to-pink-500",
                  recommended: false
                }
              ].map((tier, index) => (
                <div key={index} className={`relative p-8 bg-gradient-to-br from-gray-800/50 to-gray-900/50 border border-gray-700/50 rounded-2xl ${tier.recommended ? 'ring-2 ring-blue-500/50' : ''}`}>
                  {tier.recommended && (
                    <div className="absolute -top-4 left-1/2 transform -translate-x-1/2 px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-600 text-white text-sm font-semibold rounded-full">
                      Recommended
                    </div>
                  )}
                  <div className={`w-16 h-16 rounded-2xl bg-gradient-to-r ${tier.color} p-4 mx-auto mb-6`}>
                    <Shield className="w-full h-full text-white" />
                  </div>
                  <h3 className="text-2xl font-semibold text-white mb-4 text-center">{tier.name}</h3>
                  <p className="text-gray-400 mb-6 text-center">{tier.description}</p>
                  <div className="text-center mb-6">
                    <span className="text-3xl font-bold text-white">{tier.price}</span>
                  </div>
                  <ul className="space-y-3 mb-8">
                    {tier.features.map((feature, featureIndex) => (
                      <li key={featureIndex} className="flex items-center gap-3 text-gray-300">
                        <CheckCircle className="w-5 h-5 text-green-400 flex-shrink-0" />
                        <span>{feature}</span>
                      </li>
                    ))}
                  </ul>
                  <button className={`w-full px-6 py-3 rounded-xl font-semibold transition-all duration-300 ${
                    tier.recommended 
                      ? 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white hover:from-blue-600 hover:to-indigo-700'
                      : 'border-2 border-gray-600 text-gray-300 hover:border-blue-500 hover:text-blue-400'
                  }`}>
                    {tier.recommended ? 'Get Started' : 'Learn More'}
                  </button>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Contact Support */}
        <section className="py-20 px-4 bg-gradient-to-r from-blue-500/10 to-indigo-500/10">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
              Still Need Help?
            </h2>
            <p className="text-xl text-gray-400 mb-8">
              Our support team is ready to assist you with any questions or issues. 
              Don't hesitate to reach out - we're here to help you succeed.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <button className="px-8 py-4 bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-semibold rounded-xl hover:from-blue-600 hover:to-indigo-700 transition-all duration-300 transform hover:scale-105">
                Contact Support Now
              </button>
              <button className="px-8 py-4 border-2 border-blue-400 text-blue-400 font-semibold rounded-xl hover:bg-blue-400 hover:text-black transition-all duration-300">
                Schedule a Call
              </button>
            </div>
          </div>
        </section>
=======
        {/* Contact Support Section */}
        <section className="py-20 px-4 bg-white/5">
          <div className="max-w-4xl mx-auto text-center">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
            >
              <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
                Still Need Help?
              </h2>
              <p className="text-xl text-gray-300 mb-8">
                Our support team is ready to assist you with any questions or issues.
              </p>
              
              <div className="grid md:grid-cols-3 gap-6 mb-8">
                <div className="text-center">
                  <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-blue-600 rounded-full mx-auto mb-4 flex items-center justify-center">
                    <Phone className="w-8 h-8 text-white" />
                  </div>
                  <h3 className="text-lg font-semibold text-white mb-2">Call Us</h3>
                  <p className="text-gray-300 text-sm">+1 302 464 0950</p>
                  <p className="text-gray-400 text-xs">Mon-Fri 9AM-6PM EST</p>
                </div>
                
                <div className="text-center">
                  <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-blue-600 rounded-full mx-auto mb-4 flex items-center justify-center">
                    <Mail className="w-8 h-8 text-white" />
                  </div>
                  <h3 className="text-lg font-semibold text-white mb-2">Email Us</h3>
                  <p className="text-gray-300 text-sm">kleber@ziontechgroup.com</p>
                  <p className="text-gray-400 text-xs">Response within 4 hours</p>
                </div>
                
                <div className="text-center">
                  <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-blue-600 rounded-full mx-auto mb-4 flex items-center justify-center">
                    <MessageCircle className="w-8 h-8 text-white" />
                  </div>
                  <h3 className="text-lg font-semibold text-white mb-2">Live Chat</h3>
                  <p className="text-gray-300 text-sm">Available 24/7</p>
                  <p className="text-gray-400 text-xs">Instant response</p>
                </div>
              </div>
              
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="px-8 py-4 bg-gradient-to-r from-purple-500 to-blue-600 text-white font-semibold rounded-xl hover:from-purple-600 hover:to-blue-700 transition-all duration-300"
              >
                Contact Support Now
              </motion.button>
            </motion.div>
          </div>
        </section>
>>>>>>> origin/cursor/website-audit-content-update-and-deployment-3902
      </div>
    </Layout>
  );
};

<<<<<<< HEAD
export default SupportPage;
=======
export default Support;
>>>>>>> origin/cursor/website-audit-content-update-and-deployment-3902
