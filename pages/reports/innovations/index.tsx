import Head from 'next/head';
import Link from 'next/link';
import fs from 'fs';
import path from 'path';

type RegistryItem = { title?: string; href?: string; desc?: string; path?: string; subtitle?: string };
type Item = { title: string; href: string; subtitle: string };

export async function getStaticProps() {
  const file = path.join(process.cwd(), 'public', 'automation', 'new-content-registry.json');
  let items: Item[] = [];
  if (fs.existsSync(file)) {
    try {
      const data = JSON.parse(fs.readFileSync(file, 'utf8'));
      const rawItems: RegistryItem[] = Array.isArray(data?.items) ? data.items : [];
      items = rawItems
        .map((it) => {
          const href = it.path || it.href || '';
          const title = it.title || '';
          const subtitle = it.subtitle || it.desc || '';
          return { title, href, subtitle } as Item;
        })
        .filter((it) => typeof it.href === 'string' && it.href.length > 0)
        .slice(0, 60);
    } catch (err) {
      void err;
    }
  }
  return { props: { items } };
}

export default function InnovationsIndex({ items }: { items: Item[] }) {
  return (
    <div>
      <Head>
        <title>Innovations — Zion</title>
        <meta name="description" content="Autonomously generated AI/IT innovations." />
        <meta property="og:title" content="Innovations" />
        <meta property="og:description" content="Latest autonomous insights and guides." />
        <meta name="twitter:card" content="summary_large_image" />
      </Head>
      <main className="mx-auto max-w-7xl px-6 py-12">
        <h1 className="text-4xl font-extrabold mb-2">Innovations</h1>
        <p className="text-white/70 mb-6">Fresh AI/IT insights generated by autonomous agents.</p>
        <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
          {items.map((r) => (
            <Link key={r.href} href={r.href} className="group relative overflow-hidden rounded-2xl border border-white/10 bg-gradient-to-br from-white/10 to-white/5 p-6 backdrop-blur-xl hover:border-cyan-400/30">
              <div className="pointer-events-none absolute -inset-px -z-10 bg-gradient-to-r from-fuchsia-500/0 via-cyan-400/10 to-fuchsia-500/0 opacity-0 blur-2xl transition-opacity group-hover:opacity-100" />
              <div className="text-base font-semibold">{r.title}</div>
              <div className="mt-1 text-sm text-white/75">{r.subtitle}</div>
              <div className="mt-3 inline-flex items-center gap-1 text-xs text-cyan-300/90">Open <span aria-hidden>→</span></div>
            </Link>
          ))}
        </div>
      </main>
    </div>
  );
}


