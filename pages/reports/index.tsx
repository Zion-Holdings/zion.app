import React from 'react';
import Head from 'next/head';
import Link from 'next/link';
import fs from 'fs';
import path from 'path';

type Report = {
  slug: string;
  title: string;
};

export default function ReportsIndex({ reports }: { reports: Report[] }) {
  return (
    <>
      <Head>
        <title>Reports & Analytics | Zion Tech Group</title>
        <meta name="description" content="Browse recent autonomous updates and analytics reports." />
      </Head>
      <div className="min-h-screen bg-gradient-to-br from-indigo-950 via-purple-950 to-slate-950 text-white">
        <main className="container mx-auto px-6 py-12">
          <nav className="mb-8">
            <Link href="/" className="text-cyan-400 hover:text-cyan-300 transition-colors">← Back to Home</Link>
          </nav>
          <header className="text-center mb-12">
            <h1 className="text-5xl font-extrabold mb-6 bg-gradient-to-r from-cyan-400 to-fuchsia-400 bg-clip-text text-transparent">Reports & Updates</h1>
            <p className="text-white/80 max-w-2xl mx-auto">Latest autonomous updates generated by our platform.</p>
          </header>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto">
            {reports.map((r) => (
              <Link key={r.slug} href={`/reports/updates/${r.slug}`} className="group relative overflow-hidden rounded-2xl border border-white/10 bg-gradient-to-br from-white/10 to-white/5 p-6 backdrop-blur-xl hover:border-cyan-400/30">
                <h3 className="text-lg font-semibold">{r.title}</h3>
                <div className="mt-2 text-sm text-white/70">Open →</div>
              </Link>
            ))}
          </div>
        </main>
      </div>
    </>
  );
}

export async function getStaticProps() {
  const dir = path.join(process.cwd(), 'pages', 'reports', 'updates');
  let entries: string[] = [];
  try {
    entries = fs.readdirSync(dir);
  } catch {
    entries = [];
  }
  const reports: Report[] = entries
    .filter((f) => f.endsWith('.tsx'))
    .map((f) => ({
      slug: f.replace(/\.tsx$/i, ''),
      title: `Autonomous Update — ${f.replace(/^update-/, '').replace(/\.tsx$/i, '').replace(/-/g, ': ').replace(/\s+/g, ' ').trim()}`
    }))
    .sort()
    .reverse()
    .slice(0, 30);
  return { props: { reports } };
}

