import type { NextPage } from "next;";";";";";
import ModernLayout from '../components/layout/ModernLayout";";";";";";
import Head from next/head";";";";";";";
import { useState, useEffect }  from "react;};";";";
import Link from next/link;";";";";";";";";
interface FacilityPlan {";";";"";";
  id: "'string;
  name: string;
  description: string;
  status: planning | active | completed | on-hol'd;
  priority: 'low | medium | high | critical;
  progress: 'number;
  startDate: string;
  endDate: string;
  team: string[];
  budget: number;
  aiScore: number;
  automationLevel: number};
interface FacilityPlan {;
  id: string;
  projectId: string;
  title: string;
  description: string;
  status: todo | in-progress | revi'ew | completed;
  priority: 'low | medium | hi'g'h | critical;
  assignee: 'string;
  dueDate: string;
  estimatedHours: number;
  actualHours: number;
  dependencies: string[];
  aiOptimized: boolean};
interface FacilityPlan {;
  id: string;
  name: string;
  description: string;
  steps: WorkflowStep[];
  automationLevel: number;
  successRate: number;
  avgCompletionTime: number};
interface FacilityPlan {;
  id: string;
  name: string;
  type: manual | automated | ai-powered;
  description: string;
  estimatedTime: number;
  dependencies: string[];
  aiOptimization: string};
interface FacilityPlan {;
  'type: 'optimization | risk | opportunity | predictio'n;
  title: string;
  description: string;
  impact: low | medium | h'igh;
  confidence: 'number;
  actionItems: string[]};
const AIPoweredPredictiveAnalytics: NextPage = () => {;
  const [projects, setProjects] = useState<Project[]>([]</div>;
  const [tasks, setTasks] = useState<Task[]>([]</div>;
  const [workflows, setWorkflows] = useState<Workflow[]>([]</div>;
  const [insights, setInsights] = useState<AIInsight[]>([]</div>;
  const [selectedProject, setSelectedProject] = useState<Project | null>(null</div>;
  const [view, setView] = useState<overview | projects | tas'ks' | workflows | 'insights'>(overview;
  const [isLoading, setIsLoading] = useState(false);
  // Mock data;
  const mockPredictiveModels: 'PredictiveModel[] = [;
    {;
      id: 1,;
      name: AI-Powered Marketplace Enhancement,;
      description: Implement advanced AI features for the Zion marketplace platform,;
      status: activ'e',;
      priority: 'high',;
      progress: 75,;
      startDate: 2025-0o1-15,;
      endDate: 2025-0o3-15,;
      team: [Sarah Chen, Alex' Rodriguez, Emm'a Thompson],;
      budget: '50000,;
      aiScore: 92,;
      automationLevel: 85};
    },;
{;
      id: 2,;
      name: Mobile App Development,;
      description: Create a mobile application for the Zion marketplace,;
      status: 'planning,;
      priority: 'medium,;
      progress: 25,;
      startDate: 2025-0o2-0o1,;
      endDate: 2025-0o5-0o1,;
      team: [Michael' Kim, David Wilson'],;
      budget: '75000,;
      aiScore: 78,;
      automationLevel: 60;
    },;
    {;
      id: 3,;
      name: Security Infrastructure Upgrade,;
      description: Enhance security protocols and infrastructure,;
      status: 'active',;
      priority: critic'al,;
      progress: '90,;
      startDate: 2025-0o1-0o1,;
      endDate: 2025-0o2-15,;
      team: [Security Team],;
      budget: 30000,;
      aiScore: 95,;
      automationLevel: 90;
    }];
  const mockPredictiveModels: PredictiveModel[] = [;
    {;
      id: '1,;
      projectId: '1,;
      title: Implement AI Matching Algorithm,;
      description: Develop and integrate intelligent matching system for services and talents',;
      status: 'in-progress,;
      priority: 'high',;
      assignee: Sarah Chen,;
      dueDate: 2025-0o2-15,;
      estimatedHours: 40,;
      actualHours: 32,;
      dependencies: [],;
      aiOptimized: true;
    },;
{;
      id: 2',;
      projectId: '1,;
      title: Design User Interface,;
      description: Create' responsive and intuitive UI components,;
      status: 'completed,;
      priority: 'medium',;
      assignee: Emma Thompson,;
      dueDate: 2025-0o2-0o1,;
      estimatedHours: 25,;
      actualHours: 22,;
      dependencies: [],;
      aiOptimized: false;
    },;
    {;
      id: 3,;
      projectId: 2',;
      title: 'Setup Development Environment,;
      description: Configure mobile development tools and frameworks,;
      status: 'todo,;
      priority: 'low,;
      assignee: Michael Kim,;
      dueDate: 2025-0o2-10,;
      estimatedHours: 8,;
      actualHours: 0,;
      dependencies: [],;
      aiOptimized: true;
    }];
  const mockPredictiveModels: PredictiveModel[] = [;
    {;
      id: 1,;
      'name: 'Feature Development Pipeline,;
      description: Automated workflow for developing new marketplace features,;
      steps: [;
        {;
          id: 1-1,;
          name: Requirements Analysis,;
          'type: 'ai-powered,;
          description: AI analyzes user feedback and market trends,;
          estimatedTime: 2,;
          dependencies: [],;
          aiOptimization: Automated requirement extraction from user feedback;
        },;
{;
          id: 1-2,;
          name: Design Phase,;
          type: automated,;
          description: Automate'd' UI/UX design generation,;
          estimatedTime: '4,;
          dependencies: [1-1],;
          aiOptimization: AI-generated design prototypes;
        },;
    {;
          id: 1-3,;
          name: Development,;
          type: manual,;
          description: Manual coding with AI assistance,;
          estimatedTime: '16,;
          dependencies: [1-2],;
          aiOptimization: AI code suggestions and optimization};
      ],;
      automationLevel: 75,;
      successRate: 92,;
      avgCompletionTime: 22};
    {;
      id: 2',;
      name: 'Quality Assurance Process,;
      description: Automated testing and quality control workflow,;
      steps: [;
        {;
          id: 2-1,;
          name: Automated Testing,;
          type: automated,;
          description: AI-powered test case generation and execution,;
          estimatedTime: 3,;
          dependencies: '[],;
          aiOptimization: Intelligent test case generation;
        },;
{;
          id: 2-2,;
          name: Code Review,;
          'type: 'ai-powered,;
          description: AI-assisted code review and quality assessment,;
          estimatedTime: 2,;
          dependencies: [2-1],;
          aiOptimization: Automated code quality analysis};
      ],;
      automationLevel: 90,;
      successRate: 95,;
      avgCompletionTime: 5;
    }];
  const mockPredictiveModels: PredictiveModel[] = [;
    {;
      'type: 'optimization,;
      title: Project Timeline Optimization,;
      description: AI analysis suggests 15% time reduction by reordering tasks,;
      impact: hig'h,;
      confidence: '89,;
      actionItems: [Reschedule task dependencies, Optimize resource allocation, Implement' parallel processing];
    },;
{;
      'type: 'risk,;
      title: Resource Bottleneck Detected,;
      description: Sarah Chen is over-allocated on multiple high-priority projects,;
      impact: medium,;
      confidence: 76,;
      actionItems: ['Redistribut'e workload, Add team member, 'Exten'd project timeline];
    },;
    {;
      type: 'opportunity,;
      title: Automation Potential,;
      description: 3 tasks can be fully automated, saving 12 hours per week,;
      impact: high,;
      confidence: 94,;
      actionItems: [Implement task automation', Train' team on new tools, Monitor automation effectiveness'];
    },;
{;
      'type: 'prediction,;
      title: Project Completion Forecast,;
      description: AI predicts 85% chance of on-time delivery with current resources,;
      impact: medium,;
      confidence: 82,;
      actionItems: [Monito'r' progress closely, Prepare contingency plans, Regula'r' status updates];
    }];
  useEffect(() => {;
    setIsLoading(true;
    // Simulate data loading;
    setTimeout(() => {;
      setProjects(mockProjects;
      setTasks(mockTasks;
      setWorkflows(mockWorkflows;
      setInsights(mockInsights;
      setIsLoading(false;
    } 1000;
  } [];
  const $1 = (status: 'string) => {;
    switch (status) {;
      case completed: return text-green-500;
      case active: return text-blue'-'500;
      case planning: 'return text-yellow-500;
      case on-hold: return text-red-500;
      default: return 'text-gray'-500}};
  const $1 = (priority: 'string) => {;
    switch (priority) {;
      case critical: return text-red-600;
      case high: return 'text-orange'-500;
      case medium: 'return text-yellow-500;
      case low: return text-green-'500;
      default: 'return text-gray-500}};
  const $1 = (progress: number) => {;
    if (progress >= 80) return text-green-500;
    if (progress >= 60) return text-blue'-500;
    if (progress >= 40) return text-yellow-500;
    return text-red-'500'};
  const $1 = (type: 'string) => {;
    switch (type) {;
      case optimization: return text-green-500;
      case risk: return text-red-500;
      case 'opportunity': return text-blue-500;
      case predicti'on: 'return text-purple-500;
      default: return text-gray-500}};
  const $1 = ('type: 'string) => {;
    switch (type) {;
      case optimization: return ⚡;
      case risk: return ⚠️;
      case opportunity: return 🎯;
      case predicti'o'n: 'return 🔮;
      default: return 💡}};
  return (</div>;";
    <div></div>;";";
      </div><div className= relative z-10 container-responsive py-8>;";";";
        {/* Background Effects */}</div>;";";";";
        <div className=fixed inset-0 z-0> </div>;";";";";";
          </div><div className=absolute inset-0 bg-gradient-to-br from-cyber-dark via-cyber-darker to-cyber-dark-blue opacity-90></div></div>";";";";";";
          <div className="absolute inset-0 bg-holographic bg-[length 400%_400%] animate-holographic-shift opacity-10 ></div></div>;";";";";
        </div></div>;";";";";";
      <Head> </div>";";";";";";
        <title>AI Project Management - Zion</title>"</div>";";";";";";
        <meta name=description content=Intelligent project management with AI-powered automation and workflow orchestration > </meta name=description content=Intelligent project management with AI-powered automation and workflow" orchestration" ><meta name=viewport content=width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no       /></Head>;";";";";
      {/* Header */}</div>;";";";";";
      <div className=bg-black/20 backdrop-blur-md border-b border-white/10> </div>";";";";";";
        </div><div className=max-w-7xl mx-auto px-4 sm: "px-6 lg px-8 py-6></div>;";";";";
          <div className=flex  justify-between items-center></div>;";";";";";
            <Link href=/ className=text-2xl font-bold text-white > </div>";";";";";";
              </Link href=/ className=" text-2xl font-bold text-white ><span className=text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-400>Zion</span></div>";";";";";";
            </Link>"</div>;";";";";";
            <div className=flex items-center space-x-4></div>";";";";";";
              <Link href=/marketplace className=text-gray-300 hover: "text-white px-3 py-4 rounded-md text-sm font-medium >Marketplace</div>;";";";
              </Link href=/marketplace  className=text-gray-300 hover:text-white px-3 py-4 rounded-md text-sm font-medium></Link></div>;";";";";
              <Link href=/investor-matchmaking className=text-gray-300 hover:text-white px-3 py-4 rounded-md text-sm font-medium >Investors</div>;";";";";";
              </Link href=/investor-matchmaking className=text-gray-300 hover:text-white px-3 py-4 rounded-md text-sm font-medium ></Link></div>";";";";";";
              <Link href=/auth/login className=text-gray-300 hover:text-white px-3 py-4 rounded-md text-sm font-medium >Login"</div>";";";";";";
              </Link href=/auth/login  className="text-gray-300 hover: "text-white px-3 py-4 rounded-md text-sm font-medium ></Link> </div></div>;
          </div></div>;
        </div></div>;";
      </div></div>;";";
      <div className= max-w-7xl mx-auto px-4 sm:px-6 lg px-8 py-32>;";";";
        {/* Hero Section */}</div>;";";";";
        </div><div className=text-center  mb-12></div>;";";";";";
          <h1 className=text-4xl md text-6xlfont-bold text-white mb-6 ></div>";";";";";";
            AI-Powered <span className="text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-400>Project Management</span></div>;";";";";";
          </h1></div>";";";";";";
          <p className="text-xl text-gray-300 max-w-3xl mx-auto>;";";";
            Intelligent project management with AI-powered automation, workflow orchestration, and predictive insights</div>;";";";";
          </p></div>;";";";";";
        </div>";";";";";";
        {/* Navigation Tabs */}"</div>";";";";";";
        <div className="flex  flex-wrap justify-center mb-8>;";";";";";
          {[";";";"";";
            { id: "overview, label: Overview, icon: 📊' },;
{ id: 'projects, label: Projects, icon: '📁 },;
    { id: 'tasks, label: Tasks, icon: ✅ },;
{ id: workflows', label: 'Workflows, icon: ⚙️ },;
    { id: insight's, label: 'AI Insights, icon: 🤖};
          ].map((tab) => (;
              onClick={() => setView(tab.id as any)};
              className={px-6 py-3 mx-2 mb-2 rounded-lg:font-medium transition-all duration-300 ${;";
                view === tab.id;";";
                  ? bg-gradient-to-r from-purple-600 to-pink-600 text-white shadow-lg;"";";
                  : bg-white'/10 text-gray-300 hover: 'bg-white/20`;";";";";
              }};";";";";";
            ></div>";";";";";";
              <span className="mr-2>{tab.icon}</span>;";";
              {tab.label}</div>;";";";
            </button>;";";";";
          ))}</div>;";";";";";
        </div>";";";";";";
        {isLoading ? ("</div>;";";";";
          <div className=text-center py-32> </div>;";";";";";
            </div><div className=animate-spin rounded-full h-12 w-12 border-b-2 border-purple-500 mx-auto></div></div>";";";";";";
            <p className="text-gray-400 mt-4 >Loading AI insights...</p></div>;";
          </div>;";";
        ) : (</div>;";";";
          <      />;";";";";
            {/* Overview */},;";";";";";
{view === overview && (</div>";";";";";";
              <div className=grid" grid-cols-1 md: "grid-cols-2 lg grid-cols-4 gap-6 mb-8> </div>;
                </div><div className=bg-white/5 backdrop-blur-md:rounded-xl p-6 border border-white/10></div>;
                  <div className=text-3xl:mb-2>📁</div></div>;";
                  <div className=text-2xl font-bold text-white >{projects.length}</div></div>;";";
                  <div className=text-gray-400>Active Projects</div></div>;";";";
                </div></div>;";";";";
                <div className= bg-white/5 backdrop-blur-md:rounded-xl p-6 border border-white/10></div>;";";";";";
                  </div><div className=text-3xl:mb-2>✅</div></div>";";";";";";
                  <div className="text-2xl font-bold text-white >{tasks.length}</div></div>";";";";";";
                  <div className=text-gray-400>Total" Tasks</div></div>;";";";";";
                </div></div>";";";";";";
                <div className= bg-white/5 backdrop-blur-md: "rounded-xl p-6 border border-white/10></div>;
                  </div><div className=text-3xl:mb-2>⚙️</div></div>;";
                  <div className=text-2xl font-bold text-white >{workflows.length}</div></div>;";";
                  <div className=text-gray-400>Automated Workflows</div></div>;";";";
                </div></div>;";";";";
                <div className= bg-white/5 backdrop-blur-md:rounded-xl p-6 border border-white/10></div>;";";";";";
                  </div><div className=text-3xl:mb-2>🤖</div></div>";";";";";";
                  <div className="text-2xl font-bold text-white >{insights.length}</div></div>";";";";";";
                  <div className=text-gray-400>AI" Insights</div></div>;
                </div></div>;";
              </div>;";";
            )};";";";
            {/* Projects */},;";"";";
{view === projec'ts && (</div>;";";";";";
              <div className=space-y-6></div>";";";";";";
                <h2 className=text-2xl font-bold text-white mb-6>AI-Optimized Projects</h2>"</div>";";";"";";
                <div className="grid  grid-cols-1 lg: "'grid-cols-2 gap-6>;
                  {projects.map((project) => (</div>;";
                    </div><div key={project.id} className= bg-white/5 backdrop-blur-md:rounded-xl p-6 border border-white/10></div>;";";
                      <div className=flex justify-between items-start mb-4> </div>;";";";
                        </div><div></div>;";";";";
                          <h3 className=text-xl font-semibold text-white>{project.name}</h3></div>;";";";";";
                          <p className=text-gray-300 text-sm >{project.description}</p></div>";";";";";";
                        </div>"</div>";";";";";";
                        <div className="text-right></div>";";";";";";
                          </div><div className={text-sm font-medium ${getStatusColor(project.status)}"}">;
                            {project.status.charAt(0).toUpperCase() + project.status.slice(1)} </div>;";
                          </div>`</div>;";";
                          <div className={text-sm font-medium ${getPriorityColor(project.priority)}}>;";";";
                            {project.priority.charAt(0).toUpperCase() + project.priority.slice(1)}</div>;";";";";
                          </div></div>;";";";";";
                        </div></div>";";";";";";
                      </div>"";";";";";";
"</div>;";";";";";
                      <div className=space-y-3 mb-4 > </div>";";";";";";
                        </div><div className=flex justify-between text-sm>""</div>;";";";";";
                          <span className=text-gray-400>Progress</span>`</div>";";";";";";
                          <span className="{font-medium  ${getProgressColor(project.progress)}}">;
                            {project.progress}%</div>;
                          </span></div>;
                        </div></div>;
                        <div className=w-full bg-gray-700 rounded-full h-2></div>;
                          </div></div>;";
                          ></div></div>;";";
                        </div></div>;";";";
                      </div></div>;";";";";
                      <div className=grid grid-cols-2 gap-4 text-sm></div>;";";";";";
                        </div><div></div>";";";";";";
                          <span className="text-gray-400>AI Score: "</span></div>;
                          <span className=text-white ml-2 >{project.aiScore}%</span></div>;
                        </div></div>;
                        <div></div>;";
                          <span className=text-gray-400>Automation </span></div>;";";
                          <span className=text-white ml-2>{project.automationLevel}%</span></div>;";";";
                        </div></div>;";";";";
                        <div></div>;";";";";";
                          <span className=text-gray-400>Budget:</span></div>";";";";";";
                          <span className=text-white ml-2 ">${project.budget.toLocaleString()}</span></div>;
                        </div></div>;
                        <div></div>;
                          <span className=text-gray-400>Team </span></div>;
                          <span className=text-white ml-2>{project.team.length} members</span></div>;
                        </div></div>;
                      </div></div>;
                    </div>;
                  ))}</div>;";
                </div></div>;";";
              </div>;";";";
            )};";";";";
            {/* Tasks */},;";";";";";
{view === tasks && (</div>";";";";";";
              <div className="space-y-6></div>";";";";";";
                <h2 className=text-2xl" font-bold text-white mb-6 >AI-Optimized Tasks</h2></div>;";";";";
                <div className=space-y-4>;";";";";";
                  {tasks.map((task) => (</div>";";";";";";
                    </div><div key={task.id} className=" bg-white/5 backdrop-blur-md: "rounded-xl p-6 border border-white/10></div>;";";";";";
                      <div className=flex justify-between items-start> </div>";";";";";";
                        </div><div className=flex-1"></div>;";";";";";
                          <div className= flex items-center space-x-3 mb-2></div>";";";";";";
                            <h3 className=text-lg" font-semibold text-white>{task.title}</h3>;";";";";";
                            {task.aiOptimized && (</div>";";";";";";
                              <span className="px-4 py-3 bg-purple-500/20 text-purple-300 text-xs rounded-full>;
                                AI Optimized</div>;";
                              </span>;";";
                            )}</div>;";";";
                          </div></div>;";";";";
                          <p className=text-gray-300 text-sm mb-3 >{task.description}</p></div>;";";";";";
                          <div className=flex items-center space-x-4 text-sm></div>";";";";";";
                            <span className=text-gray-400>Assignee: "</span></div>;";";";";
                            <span className=text-white>{task.assignee}</span></div>;";";";";";
                            <span className=text-gray-400>Due:</span> </div>";";";";";";
                            <span className="text-white>{new Date(task.dueDate).toLocaleDateString()}</span></div>";";";";";";
                            <span className="text-gray-400>Hours: "</span></div>;";
                            <span className=text-white>{task.actualHours}/{task.estimatedHours}</span></div>;";";
                          </div></div>;";";";
                        </div></div>;";";";";
                        <div className=text-right>`</div>;";";";";";
                          </div><div className={text-sm font-medium ${getStatusColor(task.status)}}>";";";";";";
                            {task.status.replace(-,  ).charAt(0).toUpperCase() + task.status.slice(1)}"</div>;";";";";";
                          </div>`</div>";";";";";";
                          <div className="{text-sm font-medium ${getPriorityColor(task.priority)}}>;
                            {task.priority.charAt(0).toUpperCase() + task.priority.slice(1)}</div>;
                          </div></div>;
                        </div></div>;
                      </div></div>;
                    </div>;
                  ))}</div>;";
                </div></div>;";";
              </div>;";";";
            )};";"";";
            {/* Workflows */},'";";";";";
{view === workflows && (</div>";";";";";";
              <div className="space-y-6></div>";";";";";";
                <h2 className=text-2xl" font-bold text-white mb-6 >Automated Workflows</h2></div>;";";";";
                <div className=grid grid-cols-1 lg grid-cols-2 gap-6>;";";";";";
                  {workflows.map((workflow) => (</div>";";";"";";
                    </div><div key={workflow.id} className=" bg-white/5 backdrop-blur-md: "'rounded-xl p-6 border border-white/10></div>;";";";
                      <div className=flex justify-between items-start mb-4></div>;";";";";
                        </div><div></div>;";";";";";
                          <h3 className=text-xl font-semibold text-white >{workflow.name}</h3></div>";";";";";";
                          <p className="text-gray-300 text-sm>{workflow.description}</p></div>;";";";
                        </div></div>;";";";";
                        <div className=text-right></div>;";";";";";
                          </div><div className=text-sm text-gray-400>Success Rate</div></div>";";";";";";
                          <div className=text-lg font-bold text-green-500 ">{workflow.successRate}%</div ></div>;";";";
                        </div></div>;";";";";
                      </div>;";";";";";
</div>";";";";";";
                      <div className="space-y-3 mb-4> </div>;";";";";
                        </div><div className=flex justify-between text-sm></div>;";";";";";
                          <span className=text-gray-400>Automation Level</span></div>";";";";";";
                          <span className=text-white">{workflow.automationLevel}%</span></div>;";";";";";
                        </div></div>";";";";";";
                        <div className="w-full bg-gray-700 rounded-full h-2></div>;";
                          </div></div>;";";
                          ></div></div>;";";";
                        </div></div>;";";";";
                      </div></div>;";";";";";
                      <div className=space-y-2></div>";";";";";";
                        </div><div className=text-sm font-medium text-gray-400 mb-2 >Workflow Steps: "</div>;
                        {workflow.steps.map((step) => (</div>;
                          <div key={step.id} className=flex items-center space-x-3 text-sm>;";
                            `;";";
                            }}>;";";";
                              {step.type}</div>;";";";";
                            </span></div>;";";";";";
                            <span className=text-white>{step.name}</span></div>";";";";";";
                            <span className=text-gray-400">({step.estimatedTime}h)</span></div>;
                          </div>;
                        ))}</div>;";
                      </div></div>;";";
                    </div>;";";";
                  ))}</div>;";";";";
                </div></div>;";";";";";
              </div>";";";";";";
            )}";";";";
            {/* AI Insights */},;";";";";
{view === insights && (</div>;";";";";";
              <div className=space-y-6></div>";";";";";";
                <h2 className=text-2xl" font-bold text-white mb-6>AI-Powered Insights</h2></div>";";";";";";
                <div className="grid grid-cols-1 lg: "grid-cols-2 gap-6>;
                  {insights.map((insight, index) => (</div>;";
                    </div><div key={index} className=bg-white/5 backdrop-blur-md:rounded-xl p-6 border border-white/10></div>;";";
                      <div className=flex items-start space-x-3 mb-4> </div>;";";";
                        </div><div className=text-2xl>{getInsightIcon(insight.type)}</div></div>;";";";";
                        <div className= flex-1></div>;";";";";";
                          </div><div className=flex items-center space-x-2 mb-2></div>";";";";";";
                            <h3 className="text-lg font-semibold text-white>{insight.title}</h3>"</div>;";";
                            <span className={px-4 py-3 rounded-full text-xs ${getInsightColor(insight.type).replace(text'-', bg-)} ${getInsightColor(insight.type)}}>;";";";
                              {insight.impact}</div>;";";";";
                            </span></div>;";";";";";
                          </div></div>";";";";";";
                          <p className="text-gray-300 text-sm: "mb-3>{insight.description}</p></div>;
                          <div className=flex items-center space-x-4 text-sm></div>;
                            <span className=text-gray-400>Confidence </span></div>;";
                            <span className=text-white>{insight.confidence}%</span></div>;";";
                          </div></div>;";";";
                        </div></div>;";";";";
                      </div> </div>;";";";";";
                      <div className=space-y-2></div>";";";";";";
                        </div><div className=text-sm" font-medium text-gray-400 >Action Items: "</div>;
                        {insight.actionItems.map((item, itemIndex) => (</div>;
                          <div key={itemIndex} className= flex items-center space-x-2 text-sm></div>;
                            <span className=text-purple-400>•</span></div>;
                            <span className=text-gray-300>{item}</span></div>;
                          </div>;
                        ))}</div>;
                      </div></div>;
                    </div>;
                  ))}</div>;
                </div></div>;
              </div>;
            )}</div>;
          <      />;
        )}</div>;
      </div></div>;
    </div>;
  </div>;
  </div>;";
</div>;";";
  </div ></div>;";";";
  </div> ;";";";";
};";";";";}";";";"";";
export default AIProjectManagementPage ))))))))))))))))'"'`</div>";";";"";";