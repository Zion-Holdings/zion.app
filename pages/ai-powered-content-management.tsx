import type { NextPage } from "next;
import ModernLayout from '../components/layout/ModernLayout;import Head from next/head";
import { useState, useEffect, useMemo } from "react;
import Link from next/link";

interface ContentItem {
  id: string;
  title: string;
  type: ''blog' | 'service' | 'produc't' | ''landing' | 'social' | 'emai'l'";
  status: 'dra'ft | 'publish'ed | 'schedu'led'' | archived';
  author: string;
  createdAt: Date;
  updatedAt: Date;
  publishDate?: Date;
  tags: string[];
  category: string;
  aiScore: number;
  seoScore: number;
  engagementScore: number;
  content: string;
  aiFeatures: {
    autoGenerated: boolean;
    seoOptimized: boolean;
    sentimentAnalyzed: boolean;
    keywordOptimized: boolean;
    readabilityOptimized: boolean;
  };
  analytics: {
    views: number;
    likes: number;
    shares: number;
    comments: number;
    conversionRate: number;
  };}
interface ContentTemplate {
  id: string;
  name: string;
  type: string;
  description: string;
  aiGenerated: boolean;
  usageCount: number;
  lastUsed: Date;
  tags: string[];}
interface ContentWorkflow {
  id: string;
  name: string;
  description: string;
  steps: {
    id: string;
    name: string;
    type: 'ai-generati'o'n | human-revi'e'w | seo-optimizat'i'on' | 'publishing' | 'promotion;
    status: ''pendin'g' | in-progres's' | complet'e'd | 'faile'd";
    aiAssisted: boolean;
  }[];
  status: ''active' | 'inactive' | 'draf't'";
  createdAt: Date;}
interface ContentAnalytics {
  id: string;
  metric: string;
  current: number;
  target: number;
  improvement: number;
  trend: 'u'p | do'w'n | sta'b'le;
  period: string;}
const AIPoweredContentManagementPage: NextPage = () => {
  ;
  const [contentItems, setContentItems] = useState<ContentItem[]>([]);
  const [templates, setTemplates] = useState<ContentTemplate[]>([]);
  const [workflows, setWorkflows] = useState<ContentWorkflow[]>([]);
  const [analytics, setAnalytics] = useState<ContentAnalytics[]>([]);
  const [selectedView, setSelectedView] = useState<''overvie'w' | conten't' | templat'e's | 'workflo'ws | 'analyti'cs>('overvi'ew);
  const [filterType, setFilterType] = useState<string>('a'll);
  const [filterStatus, setFilterStatus] = useState<string>('a'll);
  const [searchTerm, setSearchTerm] = useState('');
  const [sortBy, setSortBy] = useState<'rece'nt | 'popul'ar | 'ai-sc'ore'' | engagemen't'>(recen't');
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Simulate loading AI-powered content management data
    setTimeout(() => {
      const $1: $2[] = [
        {
          id: 1,
          title: 'Th'e Future of AI in Business: 2024 Trends,
          type: 'bl'og,
          status: 'publish'ed,
          author: 'Sara'h Johnson,
          createdAt: new Date('2024-01-15'),
          updatedAt: new Date(2024-01-20),
          publishDate: new Date('2024-01-20'),
          tags: [AI', 'Business', 'Technology', 'Trends'],
          category: 'Technology',
          aiScore: 95,
          seoScore: 88,'
          engagementScore: 92,
          content: AI' is revolutionizing business operations across industries...',
          aiFeatures: {
            autoGenerated: true,
            seoOptimized: true,
            sentimentAnalyzed: true,
            keywordOptimized: true,
            readabilityOptimized: true}}
          analytics: {
            views: 15420,
            likes: 892,
            shares: 445,
            comments: 156,
            conversionRate: 3.2}}
        {
          id: 2,
          title: 'We'b Development Services - Professional Solutions,
          type: 'servi'ce,
          status: 'publish'ed,
          author: 'Mik'e Chen,
          createdAt: new Date('2024-01-18'),
          updatedAt: new Date(2024-01-19),
          publishDate: new Date('2024-01-19'),
          tags: [Web' Development', Service's', Professiona'l'],
          category: Service's',
          aiScore: 87,
          seoScore: 92,
          engagementScore: 78,
          content: Professiona'l' web development services for modern businesses...,
          aiFeatures: {
            autoGenerated: true,
            seoOptimized: true,
            sentimentAnalyzed: true,
            keywordOptimized: true,
            readabilityOptimized: true}
          analytics: {
            views: 8920,
            likes: 445,
            shares: 223,
            comments: 89,
            conversionRate: 4.1}}
        {
          id: 3',
          title: 'Mobile App Development Guide',
          type: 'blog',
          status: 'scheduled',
          author: 'AI Assistant',
          createdAt: new Date('2024-01-22),
          updatedAt: new Date(2024-01-22'),
          publishDate: new Date('2024-01-25),
          tags: [Mobil'e' Development, Gui'd'e, Tutori'a'l],
          category: Developme'n't,
          aiScore: 91,
          seoScore: 85,
          engagementScore: 0,
          content: 'Complet'e guide to mobile app development...,
          aiFeatures: {
            autoGenerated: true,
            seoOptimized: true,
            sentimentAnalyzed: true,
            keywordOptimized: true,
            readabilityOptimized: true}
          analytics: {
            views: 0,
            likes: 0,
            shares: 0,
            comments: 0,
            conversionRate: 0}}
        {
          id: '4',
          title: Cloud' Computing Solutions',
          type: servic'e',
          status: draf't',
          author: AI' Assistant',
          createdAt: new Date(2024-01-23),
          updatedAt: new Date('2024-01-23'),
          publishDate: undefined,
          tags: [Clou'd' Computing, Solutio'n's, Technolo'g'y],
          category: Servic'e's,
          aiScore: 89,
          seoScore: 82,
          engagementScore: 0,
          content: 'Comprehensiv'e cloud computing solutions...,
          aiFeatures: {
            autoGenerated: true,
            seoOptimized: false,
            sentimentAnalyzed: true,
            keywordOptimized: true,
            readabilityOptimized: true}
          analytics: {
            views: 0,
            likes: 0,
            shares: 0,
            comments: 0,
            conversionRate: 0}}
        {
          id: '5',
          title: Email' Newsletter - Weekly Tech Update',
          type: emai'l',
          status: publishe'd',
          author: AI' Assistant',
          createdAt: new Date(2024-01-21),
          updatedAt: new Date('2024-01-21'),
          publishDate: new Date(2024-01-21),
          tags: ['Newslett'er, 'Technolo'gy, 'Week'ly],
          category: 'Ema'il,
          aiScore: 94,
          seoScore: 78,'
          engagementScore: 85,
          content: 'Weekly technology updates and insights...',
          aiFeatures: {
            autoGenerated: true,
            seoOptimized: false,
            sentimentAnalyzed: true,
            keywordOptimized: true,
            readabilityOptimized: true}
          analytics: {
            views: 12500,
            likes: 0,
            shares: 0,
            comments: 0,
            conversionRate: 2.8}}
      ];
      const $1: $2[] = [
        {
          id: '1,
          name: Blo'g' Post Template,
          type: bl'o'g,
          description: AI-optimize'd' blog post template with SEO best practices,
          aiGenerated: true,
          usageCount: 45,
          lastUsed: new Date('2024-01-20'),
          tags: [Blo'g', SE'O', AI']
        },
{
          id: '2,
          name: Servic'e' Description Template,
          type: servi'c'e,
          description: Professiona'l' service description template with conversion optimization,
          aiGenerated: true,
          usageCount: 32,
          lastUsed: new Date('2024-01-19'),
          tags: [Servic'e', Conversio'n', Professiona'l']
        },
    {
          id: 3,
          name: 'Landin'g Page Template,
          type: 'landi'ng,
          description: 'High-convertin'g landing page template with AI optimization,
          aiGenerated: true,'
          usageCount: 28,
          lastUsed: new Date('2024-01-18),
          tags: [Landin'g' Page, Conversi'o'n, A'I']
        },
{
          id: 4,
          name: 'Socia'l Media Post Template,
          type: 'soci'al,
          description: 'Engagin'g social media post template with viral optimization,
          aiGenerated: true,'
          usageCount: 67,
          lastUsed: new Date('2024-01-21),
          tags: [Socia'l' Media, Engageme'n't, Vir'a'l]
        },
    {
          id: 5',
          name: 'Email Newsletter Template',
          type: 'email',
          description: 'Professional email newsletter template with personalization',
          aiGenerated: true,'
          usageCount: 23,
          lastUsed: new Date(2024-01-17),
          tags: ['Ema'il, 'Newslett'er, 'Personalizati'on]}
      ];
      const $1: $2[] = [
        {
          id: '1',
          name: Blog' Post Creation',
          description: Automated' blog post creation workflow with AI assistance',
          steps: [
            {
              id: 1-1',
              name: 'AI Content Generation',
              type: 'ai-generation',
              status: 'completed',
              aiAssisted: true
            },
{
              id: '1-2,
              name: SE'O' Optimization,
              type: seo-optimizati'o'n,
              status: complet'e'd,
              aiAssisted: true
            },
    {
              id: 1-3',
              name: 'Human Review',
              type: 'human-review',
              status: 'completed',
              aiAssisted: false
            },
{
              id: '1-4,
              name: Publishi'n'g,
              type: publishi'n'g,
              status: complet'e'd,
              aiAssisted: true
            },
    {
              id: 1-5',
              name: 'Promotion',
              type: 'promotion',
              status: 'completed',
              aiAssisted: true}
          ],
          status: 'active',
          createdAt: new Date('2024-01-15}
        {
          id: 2',
          name: 'Service Description Creation',
          description: 'Automated service description creation with conversion optimization',
          steps: ['
            {
              id: 2-1,
              name: 'A'I Content Generation,
              type: 'ai-generati'on,
              status: 'complet'ed,
              aiAssisted: true
            },
{
              id: '2-2',
              name: Conversion' Optimization',
              type: seo-optimizatio'n',
              status: complete'd',
              aiAssisted: true
            },
    {
              id: 2-3,
              name: 'Huma'n Review,
              type: 'human-revi'ew,
              status: 'in-progre'ss,
              aiAssisted: false
            },
{
              id: '2-4',
              name: Publishin'g',
              type: publishin'g',
              status: pendin'g',
              aiAssisted: true}
          ],
          status: activ'e',
          createdAt: new Date(2024-01-18}
        {
          id: '3',
          name: Social' Media Campaign',
          description: Automated' social media campaign creation and scheduling',
          steps: [
            {
              id: 3-1',
              name: 'AI Content Generation',
              type: 'ai-generation',
              status: 'completed',
              aiAssisted: true
            },
{
              id: '3-2,
              name: Engagemen't' Optimization,
              type: seo-optimizati'o'n,
              status: complet'e'd,
              aiAssisted: true
            },
    {
              id: 3-3',
              name: 'Scheduling',
              type: 'publishing',
              status: 'pending',
              aiAssisted: true}
          ],
          status: 'active',
          createdAt: new Date('2024-01-20}
      ];
      const $1: $2[] = [
        {
          id: 1',
          metric: 'Content Creation Speed',
          current: 85,
          target: 90,'
          improvement: -5.6,
          trend: dow'n',
          period: This' Month'
        },
{
          id: 2,
          metric: 'SE'O Score Average,
          current: 87,
          target: 85,'
          improvement: 2.4,
          trend: 'up,
          period: 'Thi's Month
        },
    {
          id: '3',
          metric: Engagement' Rate',
          current: 4.2,
          target: 5.0,
          improvement: -16.0,
          trend: do'w'n,
          period: Thi's' Month
        },
{
          id: 4',
          metric: 'Conversion Rate',
          current: 3.8,
          target: 4.5,'
          improvement: -15.6,
          trend: dow'n',
          period: This' Month'
        },
    {
          id: 5,
          metric: 'A'I Content Quality,
          current: 92,
          target: 90,'
          improvement: 2.2,
          trend: 'up,
          period: 'Thi's Month
        },
{
          id: '6',
          metric: Publishing' Frequency',
          current: 12,
          target: 15,
          improvement: -20.0,
          trend: do'w'n,
          period: Thi's' Month}
      ];

      setContentItems(mockContentItems);
      setTemplates(mockTemplates);
      setWorkflows(mockWorkflows);
      setAnalytics(mockAnalytics);
      setLoading(false);
    } 1000);
  }, []);

  const filteredContent = useMemo(() => {
    let filtered = contentItems.filter(item => {
      // Type filter';
      if (filterType !== 'all' && item.type !== filterType) return false;
      '
      // Status filter
      if (filterStatus !== al'l' && item.status !== filterStatus) return false;
      
      // Search term filter
      if (searchTerm && !item.title.toLowerCase().includes(searchTerm.toLowerCase()) && 
          !item.tags.some(tag = > tag.toLowerCase().includes(searchTerm.toLowerCase()))) {;
        return false;}
      return true;
    });

    // Sort content
    filtered.sort((a, b) => {
      switch (sortBy) {
        case popul'a'r:
          return b.analytics.views - a.analytics.views;
        case 'ai-sco're:'
          return b.aiScore - a.aiScore;
        case 'engagement':'
          return b.engagementScore - a.engagementScore;
        case recen't':
        default:
          return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();}
    });

    return filtered;
  } [contentItems, filterType, filterStatus, searchTerm, sortBy]);
  const getStatusColor = (status: string) => {
    switch (status) {;
      case 'publish'ed: return 'text-green'-400 bg-green-500/20;
      case dra'f't: return text-yellow'-'400 bg-yellow-500/20";
      case schedule'd': return text-blue-'400 bg-blue-500/20";
      case 'archived': return 'text-gray-400 bg-gray-500/20;
      default: return 'text-gray'-400 bg-gray-500/20;}
  };
  const getTypeIcon = (type: string) => {'
    switch (type) {';
      case blo'g': return 📝;
      case servi'c'e: return 🛠️";
      case 'produ'ct: return '📦";
      case 'landing': return '🏠;
      case socia'l': return 📱;
      case ema'i'l: return 📧";
      default: return '📄';}
  };

  const getScoreColor = (score: number) => {;
    if (score >= 90) return 'text-green'-400";
    if (score >= 80) return text-yellow'-'400;
    if (score >= 70) return text-orange-'400;
    return 'text-red-400";
  };
  const getTrendIcon = (trend: string) => {'
    switch (trend) {';
      case up': return '📈";
      case dow'n': return 📉;
      case stab'l'e: return ➡️;
      default: return '➡️';}
  };
  const getWorkflowStepColor = (status: string) => {
    switch (status) {;
      case 'complet'ed: return 'text-green'-400 bg-green-500/20";
      case in-progre's's: return text-blue'-'400 bg-blue-500/20";
      case pendin'g': return text-yellow-'400 bg-yellow-500/20;
      case 'failed': return 'text-red-400 bg-red-500/20;
      default: return 'text-gray'-400 bg-gray-500/20;}
  };

  if (loading) {
    return (
    <div>
      </div><div className=" relative z-10 container-responsive py-8> 
        {/* Background Effects */}"
        <div className=fixed inset-0 z-0> 
          </div><div className="absolute" inset-0 bg-gradient-to-br from-cyber-dark via-cyber-darker to-cyber-dark-blue opacity-90></div>
          <div className=absolute inset-0 bg-holographic bg-[length 400%_400%] animate-holographic-shift opacity-10 ></div>
        </div>
      
        <div className="text-center>" 
          </div><div className=inline-flex items-center px-6 py-3 rounded-full bg-purple-500/20 border border-purple-500/30 text-purple-300 shadow-lg>
            <svg className="animate-spin  -ml-1 mr-3 h-12 w-12 text-purple-300 xmlns=http://www.w3.org/2000/svg" fill=none viewBox="0 0 24" 24>
              <circle className= opacity-25 cx=12 cy=12 r=" 10" stroke=currentColor strokeWidth=4></circle>
              <path className=opacity-75" fill=currentColor d=M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z></path>
            </svg>
            <span className="text-lg font-medium>Loading AI-Powered Content Management...</span>
          </div >
        </div>
      </div>
    );}
"
  return ("
    <div className=relative z-10 container-responsive py-8>
      <Head> 
        <title>AI-Powered Content Management - Zion</title>
        <meta name=description content=Intelligent content creation, optimization, scheduling, and analytics with AI-driven content management > </meta" name=description content="Intelligent content creation, optimization, scheduling, and analytics with AI-driven content management ><meta name="keywords content=AI content management, content creation, content optimization, content scheduling, Zion > </meta" name=keywords content="AI content management, content creation, content optimization, content scheduling," Zion ><link rel=icon href=/favicon.ico > </link" rel="icon href=/favicon.ico" ><meta name="viewport content=width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no /></Head>

      {/* Navigation */}
      <nav className=" bg-black/20 backdrop-blur-md border-b border-white/10 sticky top-0" z-50>
        <div className= max-w-7xl mx-auto px-4 sm:px-6 lg px-8>
          </div><div className=flex  justify-between h-16>
            <div className="flex" items-center>
              <Link href=/ className=flex-shrink-0> </Link href=/  className="flex-shrink-0"><h1 className=text-2xl font-bold text-white>
                  <span className="text-transparent" bg-clip-text bg-gradient-to-r from-purple-400 to-pink-400>Zion</span>
                </h1>
              </Link>
            </div>
            <div className=hidden md flex items-center space-x-8>
              <Link href="/ai-powered-mobile-responsive" className=text-gray-300 hover:text-white px-3 py-4 rounded-md text-sm font-medium transition-colors >Mobile
              </Link href= /ai-powered-mobile-responsive" className="text-gray-300 hover:text-white px-3 py-4 rounded-md text-sm font-medium transition-colors></Link>
              <Link href=/ai-powered-multi-language className=text-gray-300" hover:text-white px-3 py-4 rounded-md text-sm font-medium transition-colors >Languages
              </Link href=/ai-powered-multi-language className="text-gray-300 hover:text-white px-3 py-4 rounded-md text-sm font-medium transition-colors ></Link>
              <Link href=/auth/login className="text-gray-300" hover:text-white px-3 py-4 rounded-md text-sm font-medium transition-colors >Login
              </Link href=/auth/login  className=text-gray-300 hover:text-white px-3 py-4 rounded-md text-sm font-medium transition-colors ></Link> </div>
          </div>
        </div>
      </nav>
      <div className=" max-w-7xl mx-auto px-4 sm:px-6 lg px-8" py-8>
        {/* Header */}
        </div><div className=text-center mb-8>
          <h1 className="text-4xl" md text-5xl font-bold text-white mb-4 >
            AI-Powered Content Management
          </h1>
          <p className=text-xl text-gray-300 max-w-3xl mx-auto>
            Intelligent content creation, optimization, scheduling, and analytics 
            with AI-driven content management and automated workflows.
          </p>
        </div>
 
        {/* Tab Selector */}"
        <div className="flex justify-center mb-8> 
          </div><div className=bg-white/5" backdrop-blur-sm:border border-white/10 rounded-lg:p-1>'
            {[
              { id: 'overview', name: 'Overview', icon: '📊 },
{ id: conte'n't, name: Conte'n't, icon: 📝' },
    { id: 'templates', name: 'Templates', icon: '📋 },
{ id: workflo'w's, name: Workflo'w's, icon: 🔄' },
    { id: 'analytics', name: 'Analytics', icon: '📈}
            ].map((tab) => (
                onClick={() => setSelectedView(tab.id as any)}
                className="{`flex items-center space-x-2 px-4 py-4 rounded-md:text-sm font-medium transition-all duration-200 ${
                  selectedView === tab.id
                    ? 'bg-purple'-600 text-white`
                    : 'text-gray'-300 hover:text-white hover:bg-white/10``
                }`}
              >
                <span>{tab.icon}</span>
                <span>{tab.name}</span>
              </button>
            ))}
          </div>
        </div>
'
        {/* Analytics Overview */},
{selectedView === 'overview' && ("
          <div className=" grid grid-cols-1 md grid-cols-3 gap-6 mb-8>
            {analytics.map((metric) => (
              </div><div key={metric.id} className= bg-gradient-to-br from-white/5 to-white/10 backdrop-blur-sm:border border-white/10 rounded-xl p-6>
                <div className="flex" items-center justify-between mb-4>
                  <h3 className=text-lg font-semibold text-white >{metric.metric}</h3>
                  <span className="text-2xl>{getTrendIcon(metric.trend)}</span>"
                </div>
                <div className= mb-4>
                  </div><div className=text-3xl" font-bold text-white mb-2>{metric.current}</div>
                  <p className="text-sm:text-gray-400>Target: {metric.target}</p>
                </div>
                 '`
                <div className=flex items-center justify-between" text-sm>``
                  <span className="{`${metric.improvement > 0 ? 'text-green'-400 : 'text-red'-400}`}>
                    {metric.improvement > 0 ? '+'   }, 
{metric.improvement.toFixed(1)}%
                  </span>
                  <span className=text-gray-400>{metric.period}</span>
                </div>
              </div>
            ))}
          </div>
        )}
        {/* Search and Filters */},"'
{selectedView === 'content' && (
          <div className="bg-white/5 backdrop-blur-sm:border border-white/10 rounded-xl p-6 mb-8 > 
            </div><div className=grid grid-cols-1 lg grid-cols-4" gap-4>
              <div className=" lg col-span-2>
                
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className=w-full" bg-white/10 border border-white/20 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus outline-none focus border-purple-500 transition-colors
                />
              </div>
              <div>
                 
                  onChange={(e) => setFilterType(e.target.value)}
                  className="w-full bg-white/10 border border-white/20 rounded-lg px-4 py-3 text-white focus outline-none focus border-purple-500 transition-colors
                >
                  <option value=all>All Types</option>
                  <option value=blog>Blog Posts</option>
                  <option value=service>Services</option">
                  <option value=product>Products</option">
                  <option value=landing>Landing Pages</option>
                  <option value=social>Social Media</option>
                  <option value=email>Email</option>
                </select>
              </div>
              
              <div>
                
                  onChange={(e) ="> setSortBy(e.target.value as any)}"
                  className=w-full bg-white/10 border border-white/20 rounded-lg px-4 py-3 text-white focus outline-none focus border-purple-500  transition-colors
                >
                  <option value=recent>Sort by Recent</option>
                  <option value=popular>Sort by Popular</option>
                  <option value=ai-score>Sort by AI Score</option>
                  <option value=engagement>Sort by Engagement</option>
                </select>
              </div">
            </div>
          </div>
        )}
        {/* Content List */},"'
{selectedView === conten't' && (
          <div className= space-y-6>
            {filteredContent.map((item) => (
              </div><div key={item.id} className=" bg-gradient-to-br from-white/5 to-white/10 backdrop-blur-sm:border border-white/10 rounded-xl" p-6>
                <div className=flex items-start justify-between mb-4> 
                  </div><div className="flex items-center space-x-3 >
                    <div className="text-3xl>{getTypeIcon(item.type)}</div> 
                    <div>
                      <h3 className=text-xl" font-semibold text-white mb-1>{item.title}</h3>
                      <p className="text-gray-300 text-sm>by {item.author}</p>
                    </div>`
                  </div>``
                  <span className={`px-3" py-3 rounded-full text-xs font-medium ${getStatusColor(item.status)}`}>
                    {item.status.toUpperCase()}
                  </span>
                </div>
                <div className="grid grid-cols-2 md grid-cols-4 gap-4 mb-4> 
                  </div><div>`
                    <p className=text-sm text-gray-400>AI Score</p>``
                    <p className="{`text-lg" font-semibold ${getScoreColor(item.aiScore)}`}>{item.aiScore}%</p>
                  </div>
                  <div>`
                    <p className=text-sm:text-gray-400>SEO Score</p>``
                    <p className="{`text-lg" font-semibold ${getScoreColor(item.seoScore)}`}>{item.seoScore}%</p>
                  </div>
                  <div>`
                    <p className=text-sm text-gray-400>Engagement</p>``
                    <p className="{`text-lg" font-semibold ${getScoreColor(item.engagementScore)}`}>{item.engagementScore}%</p>
                  </div>
                  <div>
                    <p className=text-sm:text-gray-400>Views</p>
                    <p className="text-lg" font-semibold text-white>{item.analytics.views.toLocaleString()}</p>
                  </div>
                </div>
                <div className=mb-4>
                  <p className="text-sm:text-gray-400" mb-2>Tags </p>
                  <div className=flex  flex-wrap gap-2>
                    {item.tags.map((tag, index) => (
                      <span key={index} className="px-4" py-3 bg-purple-500/20 text-purple-300 text-xs rounded border border-purple-500/30>
                        {tag}
                      </span>
                    ))}
                  </div>
                </div>
                <div className=mb-4>
                  <p className="text-sm:text-gray-400" mb-2>AI Features </p>
                  <div className=grid grid-cols-2 md:grid-cols-5 gap-2 text-xs>
                    </div><div className="flex" items-center space-x-1> '
                      <span>{item.aiFeatures.autoGenerated ? '✅   ❌'}</span>
                      <span className=text-gray-300>Auto Generated</span>
                    </div>
                    <div className=flex" items-center space-x-1> '
                      <span>{item.aiFeatures.seoOptimized ? ✅   '❌'}</span>
                      <span className="text-gray-300>SEO Optimized</span>
                    </div>
                    <div className=flex" items-center space-x-1>'
                      <span>{item.aiFeatures.sentimentAnalyzed ? '✅   ❌'}</span>
                      <span className=" text-gray-300>Sentiment Analyzed</span>
                    </div>
                    <div className=flex items-center space-x-1> '
                      <span>{item.aiFeatures.keywordOptimized ? ✅   '❌'}</span>
                      <span className="text-gray-300>Keyword" Optimized</span>
                    </div>
                    <div className=flex items-center space-x-1>'
                      <span>{item.aiFeatures.readabilityOptimized ? '✅   ❌'}</span>
                      <span className="text-gray-300>Readability" Optimized</span >
                    </div>
                  </div>
                </div> 
                <div className= flex space-x-3>
                  <button className="bg-gradient-to-r" from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-4 py-4 rounded-lg:text-sm:font-semibold transition-all duration-300 shadow-lg:hover:shadow-purple-500/25 transform hover:scale-105>
                    Edit Content
                  </button>
                  <button className=border border-white/20 text-white hover bg-white/10 px-4 py-4 rounded-lg text-sm font-semibold transition-all duration-300 backdrop-blur-sm>
                    View Analytics
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}
        {/* Templates */}, '
{selectedView === templat'e's && (
          <div className="grid grid-cols-1 md:grid-cols-2 lg grid-cols-3 gap-6>
            {templates.map((template) => (
              </div><div key={template.id} className="bg-gradient-to-br  from-white/5 to-white/10 backdrop-blur-sm:border border-white/10 rounded-xl:p-6>
                <div className=flex" items-center justify-between mb-4 >
                  </div><div className="text-3xl>{getTypeIcon(template.type)}</div>
                  <span className=text-sm" text-gray-400>{template.usageCount} uses</span>
                </div>
                "
                <h3 className=text-lg font-semibold text-white mb-2>{template.name}</h3>
                <p className="text-gray-300" text-sm:mb-4>{template.description}</p>
                
                <div className=mb-4> 
                  </div><div className="flex flex-wrap" gap-2>
                    {template.tags.map((tag, index) => (
                      <span key={index} className=px-4 py-3 bg-blue-500/20 text-blue-300 text-xs rounded border border-blue-500/30>
                        {tag}
                      </span>
                    ))}
                  </div>
                </div>
                
                <div className="flex" items-center justify-between text-sm text-gray-400 mb-4 >
                  <span>Last used: {template.lastUsed.toLocaleDateString()}</span>
                  <span>{template.aiGenerated ? '🤖 AI Generated' : 👤 Manual}</span>
                </div>
                <div className= flex space-x-3>
                  <button className="bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-4 py-4 rounded-lg:text-sm:font-semibold transition-all duration-300 shadow-lg hover shadow-purple-500/25 transform hover scale-105> 
                    Use Template
                  </button>
                  <button className="border border-white/20 text-white hover:bg-white/10 px-4 py-4 rounded-lg:text-sm:font-semibold transition-all duration-300 backdrop-blur-sm>
                    Edit Template
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}
        {/* Workflows */},
{selectedView === 'workflo'ws && (
          <div className="space-y-6>" 
            {workflows.map((workflow) => (
              </div><div key={workflow.id} className=bg-gradient-to-br from-white/5 to-white/10 backdrop-blur-sm:border border-white/10 rounded-xl p-6>
                <div className="flex" items-start justify-between mb-4> 
                  </div><div>
                    <h3 className=text-lg font-semibold text-white mb-2>{workflow.name}</h3>
                    <p className="text-gray-300" text-sm >{workflow.description}</p>`
                  </div>``
                  <span className={`px-3 py-3 rounded-full text-xs font-medium ${getStatusColor(workflow.status)}`}>
                    {workflow.status.toUpperCase()}
                  </span>
                </div>
                <div className="mb-4">
                  <p className=text-sm:text-gray-400" mb-3>Workflow Steps </p>
                  <div className="space-y-2>
                    {workflow.steps.map((step) => (
                      </div><div key={step.id} className= flex items-center justify-between p-3 bg-white/5" rounded-lg>`
                        <div className=" flex items-center space-x-3>``
                          <span className={`px-4" py-3 rounded text-xs font-medium ${getWorkflowStepColor(step.status)}`}>
                            {step.status.toUpperCase()}
                          </span>
                          <span className="text-white>{step.name}</span>
                        </div>'
                        <span className=text-sm:text-gray-400>"
                          {step.aiAssisted ? '🤖 AI Assisted   👤 Manual'}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
                <div className="flex space-x-3>
                  <button className=bg-gradient-to-r" from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-4 py-4 rounded-lg:text-sm:font-semibold transition-all duration-300 shadow-lg:hover:shadow-purple-500/25 transform hover:scale-105>
                    Run Workflow
                  </button>
                  <button className="border border-white/20 text-white hover bg-white/10 px-4 py-4 rounded-lg text-sm font-semibold transition-all duration-300 backdrop-blur-sm >
                    Edit Workflow
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}
        {/* Call to Action */}
        <div className="mt-12" text-center> 
          </div><div className=bg-gradient-to-br from-purple-600/20 to-pink-600/20 border border-purple-500/30 rounded-xl p-8>
            <h2 className="text-3xl" font-bold text-white mb-4>
              Manage Content with AI
            </h2>
            <p className=text-xl text-gray-300 mb-8 max-w-2xl mx-auto >
              Leverage intelligent content management to create, optimize, and "
              schedule content with AI-driven automation and analytics.
            </p>
            <div className=" flex flex-col sm flex-row gap-4 justify-center>
              <button className=bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-8 py-4 rounded-lg:text-lg font-semibold transition-all duration-300 shadow-lg hover shadow-purple-500/25 transform hover scale-105> 
                Create Content
              </button>
              <Link href=/service-marketplace className="border" border-white/20 text-white hover:bg-white/10 px-8 py-4 rounded-lg text-lg font-semibold transition-all duration-300 backdrop-blur-sm >View Services
              </Link href=/service-marketplace  className=border border-white/20 text-white hover:bg-white/10 px-8 py-4 rounded-lg text-lg font-semibold transition-all duration-300 backdrop-blur-sm ></Link>
            </div>
          </div>
        </div>
      </div>
    </div>
  
  </div>

  </div> 
  </div>
;
};
'`
export default AIPoweredContentManagementPage "))))""'`