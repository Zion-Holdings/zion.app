// netlify/functions/link-and-health-scheduler.js
exports.handler = async function() {
  const { execSync } = require('child_process');
  try {
    execSync('node automation/site-link-crawler.cjs || true', { stdio: 'inherit', shell: true });
<<<<<<< HEAD
=======
    execSync('node automation/site-link-fixer.cjs || true', { stdio: 'inherit', shell: true });
>>>>>>> origin/cursor/crawl-and-fix-site-links-and-pages-f374
    execSync('node automation/external-link-check.cjs || true', { stdio: 'inherit', shell: true });
    execSync('node scripts/generate-sitemap.js || true', { stdio: 'inherit', shell: true });
    execSync('node automation/sitemap-runner.cjs || true', { stdio: 'inherit', shell: true });
    execSync('git config user.name "zion-bot" && git config user.email "bot@zion.app" && git add -A && (git commit -m "chore(health): link checks + sitemap refresh [ci skip]" || true) && (git push origin main || true)', { stdio: 'inherit', shell: true });
    return { statusCode: 200, body: JSON.stringify({ ok: true, task: 'link-and-health-scheduler' }) };
  } catch (e) {
    return { statusCode: 200, body: JSON.stringify({ ok: false, error: String(e) }) };
  }
};

exports.config = {
  schedule: '0 */4 * * *', // every 4 hours
};

exports.handler = async () => {
  const logs = [];
  function logStep(name, fn) {
    logs.push(`\n=== ${name} ===`);
    const { status, stdout, stderr } = fn();
    if (stdout) logs.push(stdout);
    if (stderr) logs.push(stderr);
    logs.push(`exit=${status}`);
    return status;
  }

  logStep('sitemap', () => runNode('scripts/generate-sitemap.js'));
  logStep('site-health', () => runNode('automation/auto-health-monitor/index.mjs'));
  logStep('links:scan', () => runNode('automation/site-link-crawler.cjs'));
  logStep('git:sync', () => runNode('automation/advanced-git-sync.cjs'));

  return { statusCode: 200, body: logs.join('\n') };
};
