{
  "name": "project",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "type-check": "tsc --noEmit",
<<<<<<< HEAD
    "post-build-heal": "node scripts/post-build-healer.js",
    "continuous-heal": "node scripts/continuous-healing.js",
    "heal-and-deploy": "node scripts/heal-and-deploy.js",
    "auto-heal-pipeline": "npm run auto-fix && npm run build && npm run post-build-heal",
    "heal-deploy-monitor": "npm run heal-and-deploy && npm run continuous-heal",
    "advanced-heal:start": "node scripts/advanced-self-healing-system.cjs start",
    "advanced-heal:stop": "node scripts/advanced-self-healing-system.cjs stop",
    "advanced-heal:status": "node scripts/advanced-self-healing-system.cjs status",
    "advanced-heal:report": "node scripts/advanced-self-healing-system.cjs report",
    "advanced-heal:monitor": "node scripts/advanced-self-healing-system.cjs monitor",
    "cursor-chat:comprehensive": "node scripts/cursor-chat-trigger.cjs comprehensive",
    "cursor-chat:specific": "node scripts/cursor-chat-trigger.cjs specific",
    "improvement:start": "node scripts/continuous-improvement-pipeline.cjs start",
    "improvement:stop": "node scripts/continuous-improvement-pipeline.cjs stop",
    "improvement:status": "node scripts/continuous-improvement-pipeline.cjs status",
    "improvement:report": "node scripts/continuous-improvement-pipeline.cjs report",
    "improvement:run": "node scripts/continuous-improvement-pipeline.cjs run",
    "auto-improve": "npm run improvement:start",
    "auto-heal:advanced": "npm run advanced-heal:start",
    "continuous:start": "npm run improvement:start",
    "continuous:stop": "npm run improvement:stop",
    "continuous:status": "npm run improvement:status",
    "continuous:report": "npm run improvement:report",
    "ai-improvement:start": "node scripts/ai-continuous-improvement.cjs",
    "ai-improvement:stop": "pkill -f 'ai-continuous-improvement.cjs'",
    "ai-improvement:status": "curl -s http://localhost:3001/api/status | jq",
    "ai-improvement:report": "node scripts/ai-continuous-improvement.cjs report",
    "cursor-delegator:start": "node scripts/cursor-ai-delegator.cjs",
    "cursor-delegator:stop": "pkill -f 'cursor-ai-delegator.cjs'",
    "cursor-delegator:status": "curl -s http://localhost:3005/api/status | jq",
    "cursor-delegator:submit": "curl -X POST http://localhost:3005/api/tasks/submit -H 'Content-Type: application/json' -d",
    "multi-coordinator:start": "node scripts/multi-computer-coordinator.cjs",
    "multi-coordinator:stop": "pkill -f 'multi-computer-coordinator.cjs'",
    "multi-coordinator:status": "curl -s http://localhost:3002/api/nodes/status | jq",
    "ai-delegate:start": "npm run ai-improvement:start && npm run cursor-delegator:start && npm run multi-coordinator:start",
    "ai-delegate:stop": "npm run ai-improvement:stop && npm run cursor-delegator:stop && npm run multi-coordinator:stop",
    "ai-delegate:status": "echo 'AI Improvement System:' && npm run ai-improvement:status && echo 'Cursor Delegator:' && npm run cursor-delegator:status && echo 'Multi-Coordinator:' && npm run multi-coordinator:status",
    "ai-delegate:master": "MASTER_NODE=true IS_MASTER=true npm run ai-delegate:start",
    "ai-delegate:worker": "MASTER_NODE=false IS_MASTER=false npm run ai-delegate:start",
    "ai-delegate:submit-task": "npm run cursor-delegator:submit",
    "ai-delegate:monitor": "watch -n 5 'npm run ai-delegate:status'",
    "ai-delegate:logs": "tail -f logs/ai-improvement.log logs/cursor-delegator.log logs/multi-coordinator.log",
    "ai-delegate:setup": "node scripts/setup-ai-delegation.cjs",
    "ai-delegate:test": "node scripts/test-ai-delegation.cjs",
    "ai-delegate:cleanup": "node scripts/cleanup-ai-delegation.cjs",
    "auto-improve:start": "node scripts/automated-improvement-pipeline.cjs",
    "auto-improve:stop": "pkill -f 'automated-improvement-pipeline.cjs'",
    "auto-improve:status": "curl -s http://localhost:3006/api/status | jq",
    "auto-improve:monitor": "watch -n 10 'npm run auto-improve:status'",
    "auto-improve:logs": "tail -f logs/automated-improvement.log",
    "auto-improve:full": "npm run ai-delegate:master && npm run auto-improve:start",
    "auto-improve:background": "nohup npm run auto-improve:full > logs/automation.log 2>&1 &",
    "auto-improve:daemon": "pm2 start scripts/automated-improvement-pipeline.cjs --name 'zion-auto-improve'",
    "auto-improve:daemon-stop": "pm2 stop zion-auto-improve",
    "auto-improve:daemon-restart": "pm2 restart zion-auto-improve",
    "auto-improve:daemon-logs": "pm2 logs zion-auto-improve",
    "auto-improve:daemon-status": "pm2 status zion-auto-improve",
    "automation:daemon": "node scripts/continuous-automation-daemon.cjs",
    "automation:daemon-stop": "pkill -f 'continuous-automation-daemon.cjs'",
    "automation:daemon-status": "curl -s http://localhost:3007/api/status | jq",
    "automation:daemon-logs": "tail -f logs/automation-daemon.log",
    "automation:daemon-metrics": "cat logs/automation-metrics.json | jq",
    "automation:monitor": "watch -n 5 'npm run automation:daemon-status'",
    "automation:full": "npm run automation:daemon & npm run auto-improve:full",
    "automation:start-simple": "node scripts/start-automation.cjs",
    "automation:start-background": "nohup node scripts/start-automation.cjs > logs/automation-startup.log 2>&1 &",
    "automation:start-daemon": "pm2 start scripts/start-automation.cjs --name 'zion-automation' --watch",
    "automation:stop-daemon": "pm2 stop zion-automation",
    "automation:restart-daemon": "pm2 restart zion-automation",
    "automation:logs-daemon": "pm2 logs zion-automation",
    "auto-fix:nextjs": "node scripts/auto-fix-nextjs-issues.cjs",
    "auto-fix:run": "npm run auto-fix:nextjs",
    "distributed-ai:start": "node scripts/distributed-ai-controller.cjs",
    "distributed-ai:install": "node scripts/cursor-ai-installer.cjs install-local",
    "distributed-ai:discover": "node scripts/cursor-ai-installer.cjs discover",
    "distributed-ai:install-remote": "node scripts/cursor-ai-installer.cjs install-remote",
    "distributed-ai:verify": "node scripts/cursor-ai-installer.cjs verify",
    "distributed-ai:report": "node scripts/cursor-ai-installer.cjs report",
    "ai-coordinator:start": "node scripts/ai-coordinator.cjs",
    "ai-coordinator:status": "node -e \"const { AICoordinator } = require('./scripts/ai-coordinator.cjs'); const coordinator = new AICoordinator(); coordinator.getSystemStatus().then(console.log);\"",
    "ai-coordinator:submit-task": "node -e \"const { AICoordinator } = require('./scripts/ai-coordinator.cjs'); const coordinator = new AICoordinator(); coordinator.submitTask(process.argv[1]).then(console.log);\"",
    "multi-computer:setup": "npm run distributed-ai:install && npm run ai-coordinator:start",
    "multi-computer:discover": "npm run distributed-ai:discover",
    "multi-computer:install-all": "npm run distributed-ai:install-remote",
    "multi-computer:verify": "npm run distributed-ai:verify",
    "multi-computer:report": "npm run distributed-ai:report",
    "multi-computer:status": "npm run ai-coordinator:status",
=======
    "build:optimize": "node scripts/replace-console-statements.cjs && npm run lint -- --fix && npm run build",
    "improve:all": "node scripts/automated-app-improvement.cjs",
    "dev:fix": "NODE_OPTIONS='--no-deprecation --max-old-space-size=4096' next dev",
    "auto-commit": "node scripts/auto-commit-improvements.cjs",
    "auto-deploy": "node scripts/auto-deploy-to-netlify.cjs",
    "fix-watchpack": "node scripts/fix-watchpack-issue.cjs",
    "auto:fix": "node scripts/comprehensive-app-automation.cjs",
    "auto:improve": "node scripts/continuous-improvement.cjs",
    "auto:full": "node scripts/comprehensive-app-automation.cjs --full",
    "auto:monitor": "node scripts/comprehensive-app-automation.cjs --monitor",
    "improve:continuous": "npm run auto:improve",
    "dev:stable": "NODE_OPTIONS='--no-deprecation --max-old-space-size=4096' next dev --turbo",
    "dev:legacy": "NODE_OPTIONS='--no-deprecation --max-old-space-size=4096' next dev --no-turbo",
>>>>>>> f10a9a3721b4a88e659d4312a2d38b499e614b6c
    "improve:automated": "node scripts/automated-app-improver.cjs",
    "improve:ai-syntax": "node scripts/ai-syntax-fixer.cjs",
    "improve:orchestrator": "node scripts/app-improvement-orchestrator.cjs",
    "automation:comprehensive:start": "node scripts/comprehensive-app-automation.cjs start",
    "automation:comprehensive:stop": "node scripts/comprehensive-app-automation.cjs stop",
    "automation:comprehensive:status": "node scripts/comprehensive-app-automation.cjs status",
    "automation:comprehensive:improve": "node scripts/comprehensive-app-automation.cjs improve",
    "automation:ai:start": "node scripts/ai-continuous-improvement.cjs start",
    "automation:ai:stop": "node scripts/ai-continuous-improvement.cjs stop",
    "automation:ai:status": "node scripts/ai-continuous-improvement.cjs status",
    "automation:ai:improve": "node scripts/ai-continuous-improvement.cjs improve",
    "automation:cursor:start": "node scripts/cursor-ai-delegator.cjs start",
    "automation:cursor:stop": "node scripts/cursor-ai-delegator.cjs stop",
    "automation:cursor:status": "node scripts/cursor-ai-delegator.cjs status",
    "automation:cursor:submit": "node scripts/cursor-ai-delegator.cjs submit",
    "automation:coordinator:start": "node scripts/multi-computer-coordinator.cjs start",
    "automation:coordinator:stop": "node scripts/multi-computer-coordinator.cjs stop",
    "automation:coordinator:status": "node scripts/multi-computer-coordinator.cjs status",
    "automation:coordinator:distribute": "node scripts/multi-computer-coordinator.cjs distribute",
    "automation:start:all": "node scripts/start-automation.cjs start",
    "automation:stop:all": "node scripts/start-automation.cjs stop",
    "automation:status:all": "node scripts/start-automation.cjs status",
    "automation:health:all": "npm run automation:comprehensive:status && npm run automation:ai:status && npm run automation:cursor:status && npm run automation:coordinator:status",
    "automation:logs:all": "tail -f logs/automation.log logs/ai-improvement.log logs/cursor-delegator.log logs/coordinator.log",
    "automation:monitor:all": "watch -n 10 'npm run automation:status:all'",
    "automation:submit:task": "curl -X POST http://localhost:3005/api/tasks/submit -H 'Content-Type: application/json' -d",
    "automation:trigger:improvement": "curl -X POST http://localhost:3001/improve -H 'Content-Type: application/json' -d '{\"target\":\"general\",\"priority\":\"normal\"}'",
    "automation:trigger:ai": "curl -X POST http://localhost:3002/improve -H 'Content-Type: application/json' -d '{\"target\":\"general\",\"priority\":\"normal\"}'",
<<<<<<< HEAD
    "automation:distribute:workload": "curl -X POST http://localhost:3003/api/tasks/submit -H 'Content-Type: application/json' -d '{\"task\":\"Fix all issues\",\"priority\":\"high\"}'",
    "build:optimize": "node scripts/replace-console-statements.cjs && npm run lint -- --fix && npm run build",
    "improve:all": "node scripts/automated-app-improvement.cjs",
    "dev:fix": "NODE_OPTIONS='--no-deprecation --max-old-space-size=4096' next dev",
    "auto-commit": "node scripts/auto-commit-improvements.cjs",
    "auto-deploy": "node scripts/auto-deploy-to-netlify.cjs",
    "fix-watchpack": "node scripts/fix-watchpack-issue.cjs",
    "auto:fix": "node scripts/comprehensive-app-automation.cjs",
    "auto:improve": "node scripts/continuous-improvement.cjs",
    "auto:full": "node scripts/comprehensive-app-automation.cjs --full",
    "auto:monitor": "node scripts/comprehensive-app-automation.cjs --monitor",
    "improve:continuous": "npm run auto:improve",
    "dev:stable": "NODE_OPTIONS='--no-deprecation --max-old-space-size=4096' next dev --turbo",
    "dev:legacy": "NODE_OPTIONS='--no-deprecation --max-old-space-size=4096' next dev --no-turbo"
=======
    "automation:distribute:workload": "curl -X POST http://localhost:3003/api/tasks/submit -H 'Content-Type: application/json' -d '{\"task\":\"Fix all issues\",\"priority\":\"high\"}'"
>>>>>>> f10a9a3721b4a88e659d4312a2d38b499e614b6c
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "dependencies": {
    "@chakra-ui/react": "^3.22.0",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@sentry/nextjs": "^9.39.0",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "framer-motion": "^12.23.6",
    "i18next": "^25.3.2",
    "lucide-react": "^0.525.0",
    "next": "^15.4.2-canary.7",
    "node-fetch": "^3.3.2",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-i18next": "^15.6.0"
  },
  "devDependencies": {
    "@types/node": "20.19.8",
    "@types/react": "^19.0.0",
    "@types/react-dom": "^19.0.0",
    "@typescript-eslint/eslint-plugin": "^8.37.0",
    "@typescript-eslint/parser": "^8.37.0",
    "eslint": "^9.31.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "typescript": "^5.0.0"
  }
}
