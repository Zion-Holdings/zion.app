{
  "name": "bolt.new.zion.app",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "engines": {
    "node": ">=20.18.1",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "sitemap": "node scripts/generate-sitemap.mjs",
    "dev": "next dev",
    "build": "next build",
    "export": "next build && next export",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "prepare": "echo 'Husky prepare script disabled'",
    "autonomous": "node automation/launch-enhanced-autonomous-system.js",
    "autonomous:dev": "nodemon automation/launch-enhanced-autonomous-system.js",
    "autonomous:status": "node automation/launch-autonomous-systems-clean.js status",
    "linkedin:run": "ts-node scripts/linkedin-automation.ts run",
    "linkedin:cron": "ts-node scripts/linkedin-automation.ts cron",
    "linkedin:generate": "ts-node scripts/linkedin-automation.ts generate",
    "linkedin:start": "npm run linkedin:cron",
    "linkedin:test": "ts-node scripts/test-linkedin-automation.ts",
    "mcp:start": "node mcp-automation-system.js",
    "mcp:client": "node mcp-client-integration.js",
    "mcp:orchestrator": "node automation/mcp-integration-orchestrator.js",
    "mcp:enhance": "node automation/mcp-integration-orchestrator.js enhance",
    "mcp:workflow": "node automation/mcp-integration-orchestrator.js workflow",
    "mcp:report": "node automation/mcp-integration-orchestrator.js report",
    "mcp:setup-cron": "node automation/mcp-integration-orchestrator.js setup-cron",
    "mcp:daily": "node automation/mcp-integration-orchestrator.js daily-workflow",
    "mcp:weekly": "node automation/mcp-integration-orchestrator.js weekly-audit",
    "mcp:monitor": "node automation/mcp-integration-orchestrator.js performance-monitor",
    "mcp:status": "node automation/mcp-integration-orchestrator.js status",
    "mcp:test": "node simple-mcp-test.js",
    "google-docs:start": "node automation/launch-google-docs-automation.js",
    "google-docs:dev": "nodemon automation/launch-google-docs-automation.js",
    "google-docs:status": "node automation/check-google-docs-status.js",
    "google-docs:report": "node automation/generate-google-docs-report.js",
    "google-docs:test": "node automation/test-google-docs-automation.js",
    "cursor:memory": "node run-cursor-memory-automation.js",
    "cursor:memory:dev": "nodemon run-cursor-memory-automation.js",
    "cursor:memory:config": "node -e \"console.log(JSON.stringify(require('./cursor-memory-config.json'), null, 2))\"",
    "cursor:memory:status": "node -e \"const fs = require('fs'); const path = './cursor-memory/memory-summary.json'; try { const data = JSON.parse(fs.readFileSync(path, 'utf8')); console.log('Memory Status:'); console.log('- Total entries:', data.totalEntries); console.log('- Categories:', Object.keys(data.categories).length); console.log('- High confidence:', data.confidenceDistribution.high); } catch(e) { console.log('No memory data found'); }\"",
    "automation:factory": "node automation/ultimate-automation-factory-system.js",
    "automation:factory:dev": "nodemon automation/ultimate-automation-factory-system.js",
    "automation:orchestrator": "node automation/intelligent-automation-orchestrator.js",
    "automation:orchestrator:dev": "nodemon automation/intelligent-automation-orchestrator.js",
    "automation:improvement": "node automation/continuous-automation-improvement-system.js",
    "automation:improvement:dev": "nodemon automation/continuous-automation-improvement-system.js",
    "automation:coordinator": "node automation/master-automation-coordinator.js",
    "automation:coordinator:dev": "nodemon automation/master-automation-coordinator.js",
    "automation:all": "npm run automation:factory & npm run automation:orchestrator & npm run automation:improvement & npm run automation:coordinator",
    "automation:status": "node automation/check_automation_status.js",
    "automation:restart": "node automation/restart-all-automation.js",
    "automation:enhance": "node automation/enhance-all-automation.js",
    "autonomous:start": "node automation/launch-autonomous-systems-clean.js start",
    "autonomous:stop": "node automation/launch-autonomous-systems-clean.js stop",
    "autonomous:restart": "node automation/launch-autonomous-systems-clean.js restart",
    "autonomous:factory": "node automation/autonomous-error-monitoring-factory.js",
    "autonomous:orchestrator": "node automation/autonomous-automation-orchestrator.js",
    "autonomous:cron": "bash automation/autonomous-error-cron-system.sh run",
    "autonomous:cron:start": "bash automation/autonomous-error-cron-system.sh start",
    "autonomous:cron:stop": "bash automation/autonomous-error-cron-system.sh stop",
    "autonomous:cron:status": "bash automation/autonomous-error-cron-system.sh status",
    "autonomous:cron:fix": "bash automation/autonomous-error-cron-system.sh fix",
    "autonomous:all": "npm run autonomous:start & npm run autonomous:cron:start",
    "design:start": "node automation/launch-design-improvement-automation.js start",
    "design:layout": "node automation/launch-design-improvement-automation.js layout",
    "design:navigation": "node automation/launch-design-improvement-automation.js navigation",
    "design:visual": "node automation/launch-design-improvement-automation.js visual-design",
    "design:cycle": "node automation/launch-design-improvement-automation.js cycle",
    "design:status": "node automation/launch-design-improvement-automation.js status",
    "design:stop": "node automation/launch-design-improvement-automation.js stop",
    "design:all": "npm run design:layout && npm run design:navigation && npm run design:visual",
    "syntax:start": "node automation/syntax-fix-launcher.js start",
    "syntax:start:monitor": "node automation/syntax-fix-launcher.js start monitor",
    "syntax:start:orchestrator": "node automation/syntax-fix-launcher.js start orchestrator",
    "syntax:start:continuous": "node automation/syntax-fix-launcher.js start continuous",
    "syntax:stop": "node automation/syntax-fix-launcher.js stop",
    "syntax:status": "node automation/syntax-fix-launcher.js status",
    "syntax:quick-fix": "node automation/syntax-fix-launcher.js quick-fix",
    "syntax:build-check": "node automation/syntax-fix-launcher.js build-check",
    "syntax:monitor": "node automation/syntax-error-monitor.js",
    "syntax:monitor:watch": "node automation/syntax-error-monitor.js --watch",
    "syntax:orchestrator": "node automation/syntax-fix-orchestrator.js",
    "syntax:orchestrator:watch": "node automation/syntax-fix-orchestrator.js --watch",
    "syntax:continuous": "node automation/continuous-syntax-fix.js",
    "syntax:continuous:watch": "node automation/continuous-syntax-fix.js --watch",
    "syntax:all": "npm run syntax:start & npm run syntax:monitor & npm run syntax:orchestrator & npm run syntax:continuous",
    "linting:factory": "node automation/linting-autonomous-agents-factory.js",
    "linting:factory:dev": "nodemon automation/linting-autonomous-agents-factory.js",
    "linting:cron": "node automation/linting-cron-automation.js",
    "linting:cron:dev": "nodemon automation/linting-cron-automation.js",
    "linting:watcher": "node automation/linting-file-watcher.js",
    "linting:watcher:dev": "nodemon automation/linting-file-watcher.js",
    "linting:orchestrator": "node automation/linting-automation-orchestrator.cjs",
    "linting:orchestrator:dev": "nodemon automation/linting-automation-orchestrator.cjs",
    "linting:all": "npm run linting:factory & npm run linting:cron & npm run linting:watcher & npm run linting:orchestrator",
    "linting:start": "npm run linting:orchestrator continuous",
    "linting:status": "npm run linting:orchestrator status",
    "linting:check": "npm run linting:orchestrator check",
    "linting:fix": "npm run linting:orchestrator fix"
  },
  "dependencies": {
    "@google-analytics/data": "^5.2.0",
    "@google/generative-ai": "^0.24.1",
    "@magneticwatermelon/mcp-toolkit": "^1.1.4",
    "@modelcontextprotocol/sdk": "^1.17.1",
    "@modelcontextprotocol/server-filesystem": "^2025.7.29",
    "@modelcontextprotocol/server-memory": "^2025.8.4",
    "@modelcontextprotocol/server-sequential-thinking": "^2025.7.1",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.39.0",
    "@types/react-datepicker": "^6.2.0",
    "autoprefixer": "^10.4.21",
    "axios": "^1.11.0",
    "cheerio": "^1.1.2",
    "child_process": "^1.0.2",
    "chokidar": "^4.0.3",
    "cron-parser": "^5.3.0",
    "events": "^3.3.0",
    "framer-motion": "^12.23.12",
    "fs": "^0.0.1-security",
    "fs-extra": "^11.3.1",
    "glob": "^11.0.3",
    "https": "^1.0.0",
    "import-fresh": "^3.3.1",
    "lucide-react": "^0.536.0",
    "next": "^11.1.4",
    "node-cron": "^4.2.1",
    "openai": "^5.11.0",
    "path": "^0.12.7",
    "postcss": "^8.4.32",
    "react": "^17.0.2",
    "react-datepicker": "^8.4.0",
    "react-dom": "^17.0.2",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.32.0",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^12.3.0",
    "@types/node": "^24.2.0",
    "@types/node-cron": "^3.0.11",
    "@types/react": "^17.0.87",
    "@types/react-dom": "^17.0.26",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "autoprefixer": "^10.4.16",
    "eslint": "^9.32.0",
    "eslint-config-next": "^14.0.0",
    "eslint-plugin-react-hooks": "^5.2.0",
        "eslint-plugin-react-refresh": "^0.4.20",
    "husky": "^9.1.7",
    "postcss": "^8.4.32",
    "tailwindcss": "^3.4.0",
    "ts-node": "^10.9.2",
    "typescript": "^4.9.5"
  }
}
